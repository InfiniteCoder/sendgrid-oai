swagger: '2.0'
info:
  version: '3.0'
  title: Web API v3 - Officially Documented Only
  description: "# The SendGrid Web API V3 Documentation\n\nThis is the entirety of the documented v3 endpoints. We have updated all the descriptions, parameters, requests, and responses.\n\n## Authentication \n\nEvery endpoint requires Authentication in the form of an Authorization Header:\n\nAuthorization: Bearer API_KEY\n\n"
paths:
  /partner_settings/sendwithus:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get SendWithUs Settings
      summary: ''
      description: ''
      security:
        - {}
    patch:
      responses:
        '200':
          description: ''
          schema:
            type: object
      parameters:
        - type: string
          name: body
          in: formData
          required: true
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update SendWithUs Settings
      summary: ''
      description: ''
  '/templates/{template_id}/versions/{version_id}':
    parameters: []
    get:
      responses: {}
      parameters: []
      consumes:
        - application/json
      produces: []
      operationId: Retrieve a specific version of a template.
      summary: ''
      description: ''
      security:
        - {}
    delete:
      responses: {}
      parameters: []
      consumes:
        - application/json
      produces: []
      operationId: Delete a version.
      summary: ''
      description: ''
      security:
        - {}
    patch:
      responses: {}
      parameters:
        - type: string
          name: active
          in: formData
          description: ''
        - type: string
          name: name
          in: formData
          description: ''
        - type: string
          name: html_content
          in: formData
          description: ''
        - type: string
          name: plain_content
          in: formData
          description: ''
        - type: string
          name: subject
          in: formData
          description: ''
      consumes:
        - application/json
      produces: []
      operationId: Edit a version
      summary: ''
      description: ''
      security:
        - {}
  /subusers/stats:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                date:
                  type: string
                stats:
                  type: array
                  items:
                    properties:
                      type:
                        type: string
                      name:
                        type: string
                      metrics:
                        type: object
                        properties:
                          blocks:
                            type: number
                          bounce_drops:
                            type: number
                          bounces:
                            type: number
                          clicks:
                            type: number
                          deferred:
                            type: number
                          delivered:
                            type: number
                          invalid_emails:
                            type: number
                          opens:
                            type: number
                          processed:
                            type: number
                          requests:
                            type: number
                          spam_report_drops:
                            type: number
                          spam_reports:
                            type: number
                          unique_clicks:
                            type: number
                          unique_opens:
                            type: number
                          unsubscribe_drops:
                            type: number
                          unsubscribes:
                            type: number
          examples:
            application/json:
              - date: '2015-10-01'
                stats:
                  - type: subuser
                    name: Matt_subuser
                    metrics:
                      blocks: 0
                      bounce_drops: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      invalid_emails: 0
                      opens: 0
                      processed: 0
                      requests: 0
                      spam_report_drops: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
                      unsubscribe_drops: 0
                      unsubscribes: 0
              - date: '2015-10-02'
                stats:
                  - type: subuser
                    name: Matt_subuser
                    metrics:
                      blocks: 0
                      bounce_drops: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      invalid_emails: 0
                      opens: 0
                      processed: 0
                      requests: 0
                      spam_report_drops: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
                      unsubscribe_drops: 0
                      unsubscribes: 0
              - date: '2015-10-03'
                stats:
                  - type: subuser
                    name: Matt_subuser
                    metrics:
                      blocks: 0
                      bounce_drops: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      invalid_emails: 0
                      opens: 0
                      processed: 0
                      requests: 0
                      spam_report_drops: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
                      unsubscribe_drops: 0
                      unsubscribes: 0
              - date: '2015-10-04'
                stats:
                  - type: subuser
                    name: Matt_subuser
                    metrics:
                      blocks: 0
                      bounce_drops: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      invalid_emails: 0
                      opens: 0
                      processed: 0
                      requests: 0
                      spam_report_drops: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
                      unsubscribe_drops: 0
                      unsubscribes: 0
              - date: '2015-10-05'
                stats:
                  - type: subuser
                    name: Matt_subuser
                    metrics:
                      blocks: 0
                      bounce_drops: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      invalid_emails: 0
                      opens: 0
                      processed: 0
                      requests: 0
                      spam_report_drops: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
                      unsubscribe_drops: 0
                      unsubscribes: 0
              - date: '2015-10-06'
                stats:
                  - type: subuser
                    name: Matt_subuser
                    metrics:
                      blocks: 0
                      bounce_drops: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      invalid_emails: 0
                      opens: 0
                      processed: 0
                      requests: 0
                      spam_report_drops: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
                      unsubscribe_drops: 0
                      unsubscribes: 0
              - date: '2015-10-07'
                stats:
                  - type: subuser
                    name: Matt_subuser
                    metrics:
                      blocks: 0
                      bounce_drops: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      invalid_emails: 0
                      opens: 0
                      processed: 0
                      requests: 0
                      spam_report_drops: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
                      unsubscribe_drops: 0
                      unsubscribes: 0
              - date: '2015-10-08'
                stats:
                  - type: subuser
                    name: Matt_subuser
                    metrics:
                      blocks: 0
                      bounce_drops: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      invalid_emails: 0
                      opens: 0
                      processed: 0
                      requests: 0
                      spam_report_drops: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
                      unsubscribe_drops: 0
                      unsubscribes: 0
              - date: '2015-10-09'
                stats:
                  - type: subuser
                    name: Matt_subuser
                    metrics:
                      blocks: 0
                      bounce_drops: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      invalid_emails: 0
                      opens: 0
                      processed: 0
                      requests: 0
                      spam_report_drops: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
                      unsubscribe_drops: 0
                      unsubscribes: 0
              - date: '2015-10-10'
                stats:
                  - type: subuser
                    name: Matt_subuser
                    metrics:
                      blocks: 0
                      bounce_drops: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      invalid_emails: 0
                      opens: 0
                      processed: 0
                      requests: 0
                      spam_report_drops: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
                      unsubscribe_drops: 0
                      unsubscribes: 0
      parameters:
        - type: string
          name: limit
          in: query
        - type: string
          name: offset
          in: query
        - type: string
          name: aggregated_by
          in: query
        - type: string
          name: subusers
          in: query
          required: true
        - type: string
          name: start_date
          in: query
          required: true
        - type: string
          name: end_date
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Subuser Stats provide all of your user’s email statistics for your subuser accounts.
      summary: ''
      description: ''
      security:
        - {}
  /geo/stats:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                date:
                  type: string
                stats:
                  type: array
                  items:
                    properties:
                      type:
                        type: string
                      name:
                        type: string
                      metrics:
                        type: object
                        properties:
                          clicks:
                            type: number
                          opens:
                            type: number
                          unique_clicks:
                            type: number
                          unique_opens:
                            type: number
          examples:
            application/json:
              - date: '2015-10-11'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-12'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-13'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-14'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-15'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-16'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-17'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-18'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-19'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-20'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-21'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 1
                      unique_clicks: 0
                      unique_opens: 1
              - date: '2015-10-22'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-23'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-24'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-25'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-26'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-27'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-28'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-29'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-30'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-31'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-11-01'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-11-02'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-11-03'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-11-04'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-11-05'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-11-06'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-11-07'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-11-08'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-11-09'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-11-10'
                stats:
                  - type: province
                    name: TX
                    metrics:
                      clicks: 0
                      opens: 0
                      unique_clicks: 0
                      unique_opens: 0
      parameters:
        - type: string
          name: limit
          in: query
        - type: string
          name: offset
          in: query
        - type: string
          name: aggregated_by
          in: query
        - type: string
          name: start_date
          in: query
        - type: string
          name: end_date
          in: query
        - type: string
          name: country
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Gets email statistics by country and state/province.
      summary: ''
      description: ''
  /mail_settings/bounce_purge:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/mail_settings_bounce_purge'
          examples:
            application/json:
              enabled: false
              soft_bounces: 1234
              hard_bounces: null
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get bounce purge mail settings
      summary: ''
      description: ''
      security:
        - {}
    patch:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/mail_settings_bounce_purge'
          examples:
            application/json:
              enabled: false
              hard_bounces: null
              soft_bounces: null
      parameters:
        - type: string
          name: enabled
          in: formData
          description: ''
        - type: string
          name: hard_bounces
          in: formData
          description: ''
        - type: string
          name: soft_bounces
          in: formData
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update bounce purge mail settings
      summary: ''
      description: ''
      security:
        - {}
  /mail_settings/forward_bounce:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/mail_settings_forward_bounce'
          examples:
            application/json:
              enabled: false
              email: null
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get forward bounce mail settings
      summary: ''
      description: ''
      security:
        - {}
    patch:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/mail_settings_forward_bounce'
          examples:
            application/json:
              email: ''
              enabled: true
      parameters:
        - type: string
          name: enabled
          in: formData
          description: ''
        - type: string
          name: email
          in: formData
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update forward bounce mail settings
      summary: ''
      description: ''
      security:
        - {}
  /scopes:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              scopes:
                type: array
                items:
                  properties: {}
          examples:
            application/json:
              scopes:
                - alerts.create
                - alerts.read
                - alerts.update
                - alerts.delete
                - asm.groups.create
                - asm.groups.read
                - asm.groups.update
                - asm.groups.delete
                - asm.groups.suppressions.create
                - asm.groups.suppressions.read
                - asm.groups.suppressions.delete
                - asm.suppressions.global.create
                - asm.suppressions.global.read
                - asm.suppressions.global.delete
                - billing.create
                - billing.read
                - billing.update
                - billing.delete
                - ui.confirm_email
                - signup.trigger_confirmation
                - ui.provision
                - ips.warmup.create
                - ips.warmup.read
                - ips.warmup.delete
                - ips.pools.create
                - ips.pools.read
                - ips.pools.update
                - ips.pools.delete
                - ips.pools.ips.create
                - ips.pools.ips.delete
                - ips.assigned.read
                - ips.read
                - mail.send
                - mail_settings.read
                - mail_settings.bcc.read
                - mail_settings.bcc.update
                - mail_settings.address_whitelist.read
                - mail_settings.address_whitelist.update
                - mail_settings.footer.read
                - mail_settings.footer.update
                - mail_settings.forward_spam.read
                - mail_settings.forward_spam.update
                - mail_settings.plain_content.read
                - mail_settings.plain_content.update
                - mail_settings.spam_check.read
                - mail_settings.spam_check.update
                - mail_settings.bounce_purge.read
                - mail_settings.bounce_purge.update
                - mail_settings.forward_bounce.read
                - mail_settings.forward_bounce.update
                - partner_settings.read
                - partner_settings.new_relic.read
                - partner_settings.new_relic.update
                - partner_settings.sendwithus.read
                - partner_settings.sendwithus.update
                - tracking_settings.read
                - tracking_settings.click.read
                - tracking_settings.click.update
                - tracking_settings.subscription.read
                - tracking_settings.subscription.update
                - tracking_settings.open.read
                - tracking_settings.open.update
                - tracking_settings.google_analytics.read
                - tracking_settings.google_analytics.update
                - user.webhooks.event.settings.read
                - user.webhooks.event.settings.update
                - user.webhooks.event.test.create
                - user.webhooks.parse.settings.create
                - user.webhooks.parse.settings.read
                - user.webhooks.parse.settings.update
                - user.webhooks.parse.settings.delete
                - stats.read
                - stats.global.read
                - categories.stats.read
                - categories.stats.sums.read
                - devices.stats.read
                - clients.stats.read
                - clients.phone.stats.read
                - clients.tablet.stats.read
                - clients.webmail.stats.read
                - clients.desktop.stats.read
                - geo.stats.read
                - mailbox_providers.stats.read
                - browsers.stats.read
                - subusers.stats.read
                - subusers.stats.sums.read
                - subusers.stats.monthly.read
                - user.webhooks.parse.stats.read
                - subusers.create
                - subusers.read
                - subusers.update
                - subusers.delete
                - subusers.monitor.create
                - subusers.monitor.read
                - subusers.monitor.update
                - subusers.monitor.delete
                - subusers.credits.read
                - subusers.credits.update
                - subusers.credits.remaining.update
                - subusers.reputations.read
                - subusers.summary.read
                - suppression.bounces.read
                - suppression.bounces.delete
                - suppression.blocks.read
                - suppression.blocks.delete
                - suppression.invalid_emails.read
                - suppression.invalid_emails.delete
                - suppression.spam_reports.read
                - suppression.spam_reports.delete
                - suppression.unsubscribes.create
                - suppression.unsubscribes.read
                - suppression.unsubscribes.delete
                - templates.create
                - templates.read
                - templates.update
                - templates.delete
                - templates.versions.create
                - templates.versions.read
                - templates.versions.update
                - templates.versions.delete
                - templates.versions.activate.create
                - user.account.read
                - user.credits.read
                - user.email.create
                - user.email.read
                - user.email.update
                - user.email.delete
                - user.profile.create
                - user.profile.read
                - user.profile.update
                - user.profile.delete
                - user.password.update
                - user.timezone.read
                - user.timezone.update
                - user.username.read
                - user.username.update
                - user.settings.enforced_tls.read
                - user.settings.enforced_tls.update
                - api_keys.create
                - api_keys.read
                - api_keys.update
                - api_keys.delete
                - email_activity.read
                - credentials.create
                - credentials.read
                - credentials.update
                - credentials.delete
                - categories.create
                - categories.read
                - categories.update
                - categories.delete
                - mail_settings.template.read
                - mail_settings.template.update
                - user.multifactor_authentication.create
                - user.multifactor_authentication.read
                - user.multifactor_authentication.update
                - user.multifactor_authentication.delete
                - admin.impersonate
                - newsletter.create
                - newsletter.read
                - newsletter.update
                - newsletter.delete
                - marketing_campaigns.create
                - marketing_campaigns.read
                - marketing_campaigns.update
                - marketing_campaigns.delete
                - ui.signup_complete
                - mail.batch.create
                - mail.batch.read
                - mail.batch.update
                - mail.batch.delete
                - user.scheduled_sends.create
                - user.scheduled_sends.read
                - user.scheduled_sends.update
                - user.scheduled_sends.delete
                - access_settings.whitelist.create
                - access_settings.whitelist.read
                - access_settings.whitelist.update
                - access_settings.whitelist.delete
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: A list of scopes for which that user has access.
      summary: ''
      description: ''
      security:
        - {}
  /mail_settings/bcc:
    parameters: []
    patch:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              email:
                type: string
              enabled:
                type: boolean
          examples:
            application/json:
              email: example@example.com
              enabled: false
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update BCC mail settings
      summary: ''
      description: ''
      security:
        - {}
    get:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/mail_settings_bcc'
          examples:
            application/json:
              email: example@example.com
              enabled: false
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get BCC mail settings
      summary: ''
      description: ''
      security:
        - {}
  '/whitelabel/domains/{domain_id}':
    parameters: []
    delete:
      responses:
        '204':
          description: ''
      parameters: []
      consumes:
        - application/json
      produces: []
      operationId: Delete a Domain
      summary: ''
      description: |-
        **This endpoint allows you to delete a domain whitelabel.**

        A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

        For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)

        ## URI Parameters
        | URI Parameter   | Type  | Description  |
        |---|---|---|
        | id | integer  |  The ID of the domain whose whitelabel you want to delete. |
      security:
        - {}
    get:
      responses:
        '200':
          description: ''
          schema:
            title: Retrieve a Domain response
            type: object
            properties:
              id:
                type: integer
                description: The ID of the domain whitelabel.
              domain:
                type: string
                description: The domain that this whitelabel was created for.
              subdomain:
                type: string
                description: The subdomain used for this whitelabel.
              username:
                type: string
                description: The username of the account that this whitelabel is associated with.
              user_id:
                type: integer
                description: The ID of the user that this whitelabel is associated with.
              ips:
                type: array
                description: The IPs that are included in the SPF record for this domain whitelabel.
                items:
                  type: string
              custom_spf:
                type: boolean
                description: Indicates if this domain whitelabel uses custom SPF.
              default:
                type: boolean
                description: Indicates if this is the default whitelabel.
              legacy:
                type: boolean
                description: Indicates if this whitelabel was created using the legacy whitelabel tool.
              automatic_security:
                type: boolean
                description: Indicates if this domain whitelabel uses automatic security.
              valid:
                type: boolean
                description: Indicates if this is a valid whitelabel or not.
              dns:
                type: object
                properties: {}
            required:
              - id
              - domain
              - subdomain
              - username
              - user_id
              - ips
              - custom_spf
              - default
              - legacy
              - automatic_security
              - valid
              - dns
      parameters:
        - type: integer
          description: "The ID of the domain you're whitelabeling."
          name: id
          in: query
          required: true
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Retrieve a Domain
      summary: ''
      description: |-
        **This endpoint allows you to retrieve a specific domain whitelabel.**

        A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

        For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)

        ## URI Parameters
        | URI Parameter   | Type  | Description  |
        |---|---|---|
        | id | integer  | The ID of the whitelabeled domain. |
      security:
        - {}
    patch:
      responses:
        '200':
          description: ''
          schema:
            title: Update a Domain response
            type: object
            properties:
              default false:
                description: Inidcates whether this domain whitelabel should be considered the default.  Defaults to false.
                type: boolean
              custom_spf false:
                description: Indicates whether to generate a custom SPF record for manual security.  Defaults to false.
                type: boolean
      parameters:
        - type: string
          name: default
          in: formData
          description: Indicates whether this domain whitelabel should be considered the default.
        - type: string
          name: custom_spf
          in: formData
          description: Indicates whether to generate a custom SPF record for manual security.
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update a Domain
      summary: ''
      description: |-
        **This endpoint allows you to update the settings for a domain whitelabel.**

        A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

        For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)

        ## URI Parameters
        | URI Parameter   | Type  | Description  |
        |---|---|---|
        | id | integer  | The ID of the domain you're whitelabeling. |
      security:
        - {}
  /mail_settings/address_whitelist:
    parameters: []
    patch:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/mail_settings_bounce_purge'
          examples:
            application/json:
              enabled: false
              list:
                - example.com
      parameters:
        - type: string
          name: enabled
          in: formData
          description: ''
        - type: string
          name: list
          in: formData
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update address whitelist mail settings
      summary: ''
      description: ''
      security:
        - {}
    get:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/mail_settings_address_whitelabel'
          examples:
            application/json:
              enabled: false
              list:
                - example.com
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get address whitelist mail settings
      summary: ''
      description: ''
      security:
        - {}
  '/asm/groups/{group_id}':
    parameters: []
    delete:
      responses:
        '204':
          description: ''
          schema:
            type: object
            properties: {}
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Delete a suppression group.
      summary: A single suppression group object with all its details
      description: |-
        Groups are specific types of email you would like your recipients to be able to unsubscribe from or subscribe to. For example: Daily Newsletters, Invoices, System Alerts.

        The **name** and **description** of the Group will be visible by recipients when they are managing their subscriptions.
      security:
        - {}
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              id:
                type: number
              name:
                type: string
              description:
                type: string
              last_email_sent_at:
                type: 'null'
              is_default:
                type: boolean
              unsubscribes:
                type: number
          examples:
            application/json:
              id: 100
              name: Newsletters
              description: Our monthly newsletter.
              last_email_sent_at: null
              is_default: true
              unsubscribes: 400
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get information on a single suppression group.
      summary: You can only delete groups that have not been attached to sent mail in the last 60 days. If a recipient uses the “one-cl
      description: |-
        Groups are specific types of email you would like your recipients to be able to unsubscribe from or subscribe to. For example: Daily Newsletters, Invoices, System Alerts.

        The **name** and **description** of the Group will be visible by recipients when they are managing their subscriptions.
      security:
        - {}
  /tracking_settings/open:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              enabled:
                type: boolean
          examples:
            application/json:
              enabled: true
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get Open Tracking Settings
      summary: ''
      description: ''
      security:
        - {}
    patch:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              enabled:
                type: boolean
          examples:
            application/json:
              enabled: true
      parameters:
        - type: string
          name: enabled
          in: formData
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update Open Tracking Settings
      summary: ''
      description: ''
      security:
        - {}
  '/whitelabel/links/{id}':
    parameters: []
    delete:
      responses:
        '204':
          description: ''
      parameters: []
      consumes:
        - application/json
      produces: []
      operationId: Delete a Link
      summary: ''
      description: ''
      security:
        - {}
    patch:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              id:
                type: integer
              domain:
                type: string
              subdomain:
                type: string
              username:
                type: string
              user_id:
                type: integer
              default:
                type: boolean
              valid:
                type: boolean
              legacy:
                type: boolean
              dns:
                type: object
                properties:
                  domain_cname:
                    type: object
                    properties:
                      valid:
                        type: boolean
                      type:
                        type: string
                      host:
                        type: string
                      data:
                        type: string
                  owner_cname:
                    type: object
                    properties:
                      valid:
                        type: boolean
                      type:
                        type: string
                      host:
                        type: string
                      data:
                        type: string
          examples:
            application/json:
              id: 1
              domain: example.com
              subdomain: mail
              username: john@example.com
              user_id: 7
              default: true
              valid: true
              legacy: false
              dns:
                domain_cname:
                  valid: true
                  type: cname
                  host: mail.example.com
                  data: sendgrid.net
                owner_cname:
                  valid: true
                  type: cname
                  host: 7.example.com
                  data: sendgrid.net
      parameters:
        - type: string
          name: default
          in: formData
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update a Link
      summary: ''
      description: ''
      security:
        - {}
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              id:
                type: integer
              domain:
                type: string
              subdomain:
                type: string
              username:
                type: string
              user_id:
                type: integer
              default:
                type: boolean
              valid:
                type: boolean
              legacy:
                type: boolean
              dns:
                type: object
                properties:
                  domain_cname:
                    type: object
                    properties:
                      valid:
                        type: boolean
                      type:
                        type: string
                      host:
                        type: string
                      data:
                        type: string
                  owner_cname:
                    type: object
                    properties:
                      valid:
                        type: boolean
                      type:
                        type: string
                      host:
                        type: string
                      data:
                        type: string
          examples:
            application/json:
              id: 1
              domain: example.com
              subdomain: mail
              username: john@example.com
              user_id: 7
              default: false
              valid: true
              legacy: false
              dns:
                domain_cname:
                  valid: true
                  type: cname
                  host: mail.example.com
                  data: sendgrid.net
                owner_cname:
                  valid: true
                  type: cname
                  host: 7.example.com
                  data: sendgrid.net
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Retrieve a Link
      summary: ''
      description: ''
      security:
        - {}
  /devices/stats:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                date:
                  type: string
                stats:
                  type: array
                  items:
                    properties:
                      type:
                        type: string
                      name:
                        type: string
                      metrics:
                        type: object
                        properties:
                          opens:
                            type: number
                          unique_opens:
                            type: number
          examples:
            application/json:
              - date: '2015-10-11'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-10-12'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-10-13'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-10-14'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-10-15'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-10-16'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-10-17'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-10-18'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-10-19'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-10-20'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-10-21'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 1
                      unique_opens: 1
              - date: '2015-10-22'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-10-23'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-10-24'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-10-25'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-10-26'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 2
                      unique_opens: 2
              - date: '2015-10-27'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-10-28'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-10-29'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-10-30'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-10-31'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-11-01'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-11-02'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-11-03'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-11-04'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-11-05'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-11-06'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-11-07'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-11-08'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-11-09'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
              - date: '2015-11-10'
                stats:
                  - type: device
                    name: Webmail
                    metrics:
                      opens: 0
                      unique_opens: 0
      parameters:
        - type: string
          name: end_date
          in: query
        - type: string
          name: limit
          in: query
        - type: string
          name: offset
          in: query
        - type: string
          name: aggregated_by
          in: query
        - type: string
          name: start_date
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Gets email statistics by device type.
      summary: ''
      description: ''
      security:
        - {}
  /mailbox_providers/stats:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                date:
                  type: string
                stats:
                  type: array
                  items:
                    properties:
                      type:
                        type: string
                      name:
                        type: string
                      metrics:
                        type: object
                        properties:
                          blocks:
                            type: number
                          bounces:
                            type: number
                          clicks:
                            type: number
                          deferred:
                            type: number
                          delivered:
                            type: number
                          drops:
                            type: number
                          opens:
                            type: number
                          spam_reports:
                            type: number
                          unique_clicks:
                            type: number
                          unique_opens:
                            type: number
          examples:
            application/json:
              - date: '2015-10-11'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-12'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-13'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-14'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-15'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-16'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-17'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-18'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-19'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-20'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-21'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 1
                      drops: 0
                      opens: 1
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 1
              - date: '2015-10-22'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-23'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-24'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-25'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-26'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 2
                      drops: 0
                      opens: 2
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 2
              - date: '2015-10-27'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-28'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-29'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-30'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-10-31'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-11-01'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-11-02'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-11-03'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-11-04'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-11-05'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-11-06'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-11-07'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-11-08'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-11-09'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
              - date: '2015-11-10'
                stats:
                  - type: mailbox_provider
                    name: Gmail
                    metrics:
                      blocks: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      drops: 0
                      opens: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
      parameters:
        - type: string
          name: limit
          in: query
        - type: string
          name: offset
          in: query
        - type: string
          name: aggregated_by
          in: query
        - type: string
          name: start_date
          in: query
        - type: string
          name: end_date
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Gets email statistics by mailbox provider.
      summary: ''
      description: ''
      security:
        - {}
  '/ips/{ip_address}':
    parameters: []
    get:
      responses: {}
      parameters: []
      consumes:
        - application/json
      produces: []
      operationId: See which pools an IP address belongs to.
      summary: ''
      description: ''
      security:
        - {}
  '/ips/pools/{pool_name}/ips':
    parameters: []
    post:
      responses: {}
      parameters:
        - type: string
          name: ip
          in: formData
          description: ''
      consumes:
        - application/json
      produces: []
      operationId: Assign an IP to a pool
      summary: ''
      description: ''
      security:
        - {}
  '/whitelabel/ips/{id}':
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              ip:
                type: string
              rdns:
                type: string
              users:
                type: array
                items:
                  type: object
                  properties:
                    username:
                      type: string
                    user_id:
                      type: integer
              subdomain:
                type: string
              domain:
                type: string
              valid:
                type: boolean
              legacy:
                type: boolean
              a_record:
                type: object
                properties:
                  valid:
                    type: boolean
                  type:
                    type: string
                  host:
                    type: string
                  data:
                    type: string
          examples:
            application/json:
              ip: 192.168.1.1
              rdns: o1.email.example.com
              users:
                - username: john@example.com
                  user_id: 7
              subdomain: email
              domain: example.com
              valid: true
              legacy: false
              a_record:
                valid: true
                type: a
                host: o1.email.example.com
                data: 192.168.1.1
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Retrieve an IP
      summary: ''
      description: ''
      security:
        - {}
    delete:
      responses:
        '204':
          description: ''
          schema:
            type: object
            properties: {}
      parameters: []
      consumes:
        - application/json
      produces: []
      operationId: Delete an IP
      summary: ''
      description: ''
      security:
        - {}
  /tracking_settings/click:
    parameters: []
    patch:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              enable_text:
                type: boolean
              enabled:
                type: boolean
          examples:
            application/json:
              enable_text: false
              enabled: true
      parameters:
        - type: string
          name: enabled
          in: formData
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update Click Tracking Settings
      summary: ''
      description: ''
      security:
        - {}
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              enable_text:
                type: boolean
              enabled:
                type: boolean
          examples:
            application/json:
              enable_text: false
              enabled: true
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get Click Track Settings
      summary: ''
      description: ''
      security:
        - {}
  '/api_keys/{api_key_id}':
    parameters: []
    delete:
      responses:
        '204':
          description: ''
          schema:
            type: 'null'
        '404':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: unable to find API Key
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Delete API keys
      summary: |-
        **Revoke an existing API Key**

        Authentications using this API Key will fail after this request is made, with some small
      description: |-
        **Revoke an existing API Key**

        Authentications using this API Key will fail after this request is made, with some small propogation delay.If the API Key ID does not exist an HTTP 404 will be returned.

        The API Keys feature allows customers to be able to generate an API Key credential which can be used for authentication with the SendGrid v3 Web API or the [Mail API Endpoint](https://sendgrid.com/docs/API_Reference/Web_API/mail.html).

        ## URI Parameters

        | URI Parameter   | Type  | Required?  | Description  |
        |---|---|---|---|
        |api_key_id |string | required | The ID of the API Key you are deleting.|
      security:
        - {}
    put:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/api_key_name_id_scopes'
          examples:
            application/json:
              api_key_id: qfTQ6KG0QBiwWdJ0-pCLCA
              name: A New Hope
              scopes:
                - user.profile.read
                - user.profile.update
        '400':
          description: Unexpected error in API call. See HTTP response body for details.
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: "expected JSON request body with 'name' property"
        '401':
          description: ''
          schema:
            type: object
            properties: {}
        '404':
          description: Unexpected error in API call. See HTTP response body for details.
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: unable to find API Key to update
      parameters:
        - type: string
          name: name
          in: formData
          description: ''
        - type: string
          name: scopes
          in: formData
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: 'Update the name & scopes of an API Key'
      summary: |-
        A JSON request body with a "name" property is required.
        Most provide the list of all the scopes an api key should have.
      description: |-
        A JSON request body with a "name" property is required.
        Most provide the list of all the scopes an api key should have.

        The API Keys feature allows customers to be able to generate an API Key credential which can be used for authentication with the SendGrid v3 Web API or the [Mail API Endpoint](https://sendgrid.com/docs/API_Reference/Web_API/mail.html).

        ## URI Parameters

        | Param   | Type  | Required?  | Description  |
        |---|---|---|---|
        |api_key_id |string | required | The ID of the API Key you are updating.|
      security:
        - {}
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              result:
                type: array
                _isOpen: true
                items:
                  $ref: '#/definitions/api_key_name_id_scopes'
          examples:
            application/json:
              result:
                - name: API Key Name
                  api_key_id: some-apikey-id
                - name: API Key Name 2
                  api_key_id: another-apikey-id
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '404':
          description: Unexpected error in API call. See HTTP response body for details.
          schema:
            type: object
            properties: {}
          examples:
            application/json:
              errors:
                - field: null
                  message: unable to find API Key
      parameters:
        - type: string
          name: name
          in: formData
          required: true
          description: The name you will use to describe this API Key.
        - type: string
          name: scopes
          in: formData
          required: false
          description: The individual permissions that you are giving to this API Key.
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get an existing API Key
      summary: |-
        Retrieve a single api key.
        If the API Key ID does not exist an HTTP 404 will be returned.
      description: |-
        Retrieve a single api key.
        If the API Key ID does not exist an HTTP 404 will be returned.

        ## URI Parameters

        | Param   | Type  | Required?  | Description  |
        |---|---|---|---|
        |api_key_id |string | required | The ID of the API Key for which you are requesting information.|
      security:
        - {}
    patch:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/api_key_name_id'
          examples:
            application/json:
              api_key_id: qfTQ6KG0QBiwWdJ0-pCLCA
              name: A New Hope
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters:
        - type: string
          name: name
          in: formData
          description: The new name of the API Key.
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update API keys
      summary: |-
        **Update the name of an existing API Key**

        A JSON request body with a "name" property is required.

        The API Keys featur
      description: |-
        **Update the name of an existing API Key**

        A JSON request body with a "name" property is required.

        The API Keys feature allows customers to be able to generate an API Key credential which can be used for authentication with the SendGrid v3 Web API or the [Mail API Endpoint](https://sendgrid.com/docs/API_Reference/Web_API/mail.html).

        ## URI Parameters

        | URI Parameter   | Type  | Required?  | Description  |
        |---|---|---|---|
        |api_key_id |string | required | The ID of the API Key you are updating.|
      security:
        - {}
  /user/settings/enforced_tls:
    parameters: []
    get:
      responses: {}
      parameters: []
      consumes:
        - application/json
      produces: []
      operationId: Get the current Enforced TLS settings.
      summary: ''
      description: ''
      security:
        - {}
    patch:
      responses: {}
      parameters:
        - type: string
          name: require_tls
          in: formData
          description: ''
        - type: string
          name: require_valid_cert
          in: formData
          description: ''
      consumes:
        - application/json
      produces: []
      operationId: Change the Enforced TLS settings
      summary: ''
      description: ''
      security:
        - {}
  '/templates/{template_id}/versions/{version_id}/activate':
    parameters: []
    post:
      responses: {}
      parameters: []
      consumes:
        - application/json
      produces: []
      operationId: Activate a version.
      summary: ''
      description: ''
      security:
        - {}
  /subusers/reputations:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                reputation:
                  type: number
                  description: The sender reputation this subuser has attained.
                username:
                  type: string
                  description: The subuser that has this reputation.f
              required:
                - reputation
                - username
          examples:
            application/json:
              - username: example_subuser
                reputation: 99
              - username: example_subuser2
                reputation: 95.2
        '401':
          description: ''
          schema:
            type: object
            properties: {}
      parameters:
        - type: string
          name: subuser_name
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Retrieve Subuser Reputations
      summary: ''
      description: |-
        Subuser sender reputations give a good idea how well a sender is doing with regards to how recipients and recipient servers react to the mail that is being received. When a bounce, spam report, or other negative action happens on a sent email, it will effect your sender rating.

        This endpoint allows you to request the reputations for your subusers.
      security:
        - {}
  /user/profile:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            title: GET User Profile response
            type: object
            properties:
              address:
                type: string
                description: "The user's address."
              address2:
                type: string
                description: "The second line of the user's address."
              city:
                type: string
                description: "The user's city."
              company:
                type: string
                description: "The name of the user's company."
              country:
                type: string
                description: "The user's country."
              first_name:
                type: string
                description: "The user's first name."
              last_name:
                type: string
                description: "The user's last name."
              phone:
                type: string
                description: "The user's phone number."
              state:
                type: string
                description: "The user's state."
              website:
                type: string
                description: "The user's website URL."
              zip:
                type: string
                description: "The user's zip code."
            required:
              - address
              - city
              - company
              - country
              - first_name
              - last_name
              - phone
              - state
              - website
              - zip
          examples:
            application/json:
              address: 814 West Chapman Avenue
              address2: ''
              city: Orange
              company: SendGrid
              country: US
              first_name: Test
              last_name: User
              phone: 555-555-5555
              state: CA
              website: 'http://www.sendgrid.com'
              zip: '92868'
        '401':
          description: ''
          schema:
            type: object
            properties: {}
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: "Get a user's profile"
      summary: ''
      description: |-
        Keeping your user profile up to date is important. This will help SendGrid to verify who you are as well as contact you should we need to.

        For more information about your user profile:

        * [SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)
      security:
        - {}
    patch:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/user_profile'
          examples:
            application/json:
              address: 814 West Chapman Avenue
              address2: ''
              city: Orange
              company: SendGrid
              country: US
              first_name: Example
              last_name: User
              phone: 555-555-5555
              state: CA
              website: 'http://www.sendgrid.com'
              zip: '92868'
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters:
        - type: string
          description: "You can enter a subuser name as the value for this header, in order to update the subuser's profile."
          name: on-behalf-of
          in: header
      consumes:
        - application/json
      produces:
        - application/json
      operationId: "Update a user's profile"
      summary: ''
      description: |-
        Keeping your user profile up to date is important. This will help SendGrid to verify who you are as well as contact you should we need to.

        For more information about your user profile:

        * [SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)

        It should be noted that any one or more of the parameters can be updated via the PATCH /user/profile endpoint. The only requirement is that you include at least one when you PATCH.
      security:
        - {}
  '/user/scheduled_sends/{batch_id}':
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            title: Retrieve scheduled send response
            items:
              $ref: '#/definitions/user_scheduled_send_status'
          examples:
            application/json:
              - batch_id: HkJ5yLYULb7Rj8GKSx7u025ouWVlMgAi
                status: cancel
              - batch_id: IbLdyLYULb7Rj8GKSx7u025ouWVlAiMg
                status: pause
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters:
        - type: string
          description: "The batch ID is the identifier that your scheduled mail sends share.\t"
          pattern: '^[a-zA-Z0-9]'
          name: batch_id
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Retrieve scheduled send
      summary: |-
        Get cancel/paused scheduled send information. If {batch_id} is omitted, all of the user's scheduled send cancellations
        a
      description: |-
        Get cancel/paused scheduled send information for a specific batch_id.

        The Cancel Scheduled Sends feature allows the customer to cancel a scheduled send based on a Batch ID included in the SMTPAPI header.Scheduled sends cancelled less than 10 minutes before the scheduled time are not guaranteed to be cancelled.
      security:
        - {}
    patch:
      responses:
        '204':
          description: ''
          schema:
            type: 'null'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: status
                  message: status must be either cancel or pause
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '404':
          description: '"" : "batch id not found"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: batch id not found
      parameters:
        - type: string
          name: status
          in: formData
          required: true
          description: The status you would like the scheduled send to have.
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update user scheduled send information
      summary: Update the status of a scheduled send.
      description: |-
        Update the status of a scheduled send.

        The Cancel Scheduled Sends feature allows the customer to cancel a scheduled send based on a Batch ID included in the SMTPAPI header.Scheduled sends cancelled less than 10 minutes before the scheduled time are not guaranteed to be cancelled.
      security:
        - {}
    delete:
      responses:
        '204':
          description: ''
          schema:
            type: 'null'
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '404':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: batch id not found
      parameters:
        - type: string
          description: The batch ID with the cancel or pause that you would like to delete.
          pattern: '^[a-zA-Z0-9]'
          name: batch_id
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Delete a cancellation or pause of a scheduled send
      summary: Delete the cancellation/pause of a scheduled send.
      description: |-
        Delete the cancellation/pause of a scheduled send.

        The Cancel Scheduled Sends feature allows the customer to cancel a scheduled send based on a Batch ID included in the SMTPAPI header.Scheduled sends cancelled less than 10 minutes before the scheduled time are not guaranteed to be cancelled.
      security:
        - {}
  /api_keys:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              result:
                type: array
                _isOpen: true
                items:
                  $ref: '#/definitions/api_key_name_id'
          examples:
            application/json:
              result:
                - name: API Key Name
                  api_key_id: some-apikey-id
                - name: API Key Name 2
                  api_key_id: another-apikey-id
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: List all API Keys belonging to the authenticated user
      summary: "**List all API Keys belonging to the authenticated user**\n\nThe API Keys feature allows customers to be able to generate "
      description: 'The API Keys feature allows customers to be able to generate an API Key credential which can be used for authentication with the SendGrid v3 Web API or the [Mail API Endpoint](https://sendgrid.com/docs/API_Reference/Web_API/mail.html).'
      security:
        - {}
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              result:
                type: array
                _isOpen: true
                items:
                  $ref: '#/definitions/api_key_name_id'
          examples:
            application/json:
              result:
                - name: API Key Name
                  api_key_id: some-apikey-id
                - name: API Key Name 2
                  api_key_id: another-apikey-id
        '400':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: name
                  message: missing required argument
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '403':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: Cannot create more than 100 API Keys
      parameters:
        - type: string
          name: name
          in: formData
          required: true
          description: The name you will use to describe this API Key.
        - type: string
          name: scopes
          in: formData
          required: false
          description: The individual permissions that you are giving to this API Key.
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Create API keys
      summary: |-
        **Generate a new API Key for the authenticated user**

        This will create a new random API Key for the user. A JSON reques
      description: |-
        This will create a new random API Key for the user. A JSON request body containing a "name" property is required. If number of maximum keys is reached, HTTP 403 will be returned.

        There is a limit of 100 API Keys on your account.

        The API Keys feature allows customers to be able to generate an API Key credential which can be used for authentication with the SendGrid v3 Web API or the [Mail API Endpoint](https://sendgrid.com/docs/API_Reference/Web_API/mail.html).

        See the [API Key Permissions List](https://sendgrid.com/docs/API_Reference/Web_API_v3/API_Keys/api_key_permissions_list.html) for a list of all available scopes.
      security:
        - {}
  /campaigns:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              result:
                type: array
                _isOpen: true
                items:
                  $ref: '#/definitions/campaign_response'
          examples:
            application/json:
              result:
                - id: 986724
                  title: March Newsletter
                  subject: 'New Products for Spring!'
                  sender_id: 124451
                  list_ids:
                    - 110
                    - 124
                  segment_ids:
                    - 110
                  categories:
                    - spring line
                  suppression_group_id: 42
                  custom_unsubscribe_url: ''
                  ip_pool: marketing
                  html_content: '<html><head><title></title></head><body><p>Check out our spring line!</p></body></html>'
                  plain_content: 'Check out our spring line!'
                  status: Draft
                - id: 986723
                  title: February Newsletter
                  subject: 'Final Winter Product Sale!'
                  sender_id: 124451
                  list_ids:
                    - 110
                    - 124
                  segment_ids:
                    - 110
                  categories:
                    - winter line
                  suppression_group_id: 42
                  custom_unsubscribe_url: ''
                  ip_pool: marketing
                  html_content: '<html><head><title></title></head><body><p>Last call for winter clothes!</p></body></html>'
                  plain_content: 'Last call for winter clothes!'
                  status: Sent
      parameters:
        - type: number
          default: 10
          description: The number of results you would like to receive at a time.
          name: limit
          in: query
        - type: number
          default: '0'
          description: 'The index of the first campaign to return, where 0 is the first campaign.'
          name: offset
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get all Campaigns
      summary: |-
        Returns campaigns in reverse order they were created (newest first)
        Returns an empty array if no campaigns exist
      description: |-
        Returns campaigns in reverse order they were created (newest first).

        Returns an empty array if no campaigns exist.

        For more information:

        * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
      security:
        - {}
    post:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/campaign_response'
          examples:
            application/json:
              id: 986724
              title: March Newsletter
              subject: 'New Products for Spring!'
              sender_id: 124451
              list_ids:
                - 110
                - 124
              segment_ids:
                - 110
              categories:
                - spring line
              suppression_group_id: 42
              custom_unsubscribe_url: ''
              ip_pool: marketing
              html_content: '<html><head><title></title></head><body><p>Check out our spring line!</p></body></html>'
              plain_content: 'Check out our spring line!'
              status: Draft
        '400':
          description: |-
            "title": "title can't be blank"
            "title": "title is too long (maximum is 100 characters)"
            "categories": "categories exceeds 10 category limit"
            "html_content": "html_content exceeds the 1MB limit"
            "plain_content": "plain_content exceeds the 1MB limit"
            "sender_id": "sender_id does not exist"
            "sender_id": "sender_id is not a verified sender identity"
            "list_ids": "list_ids do not all exist"
            "segment_ids": "segment_ids do not all exist"
            "ip_pool": "The ip pool you provided is invalid"
            "suppression_group_id": "suppression_group_id does not exist"
            "unsubscribes": "Either suppression_group_id or custom_unsubscribe_url may be set/used, but not both. Please remove one before setting the other."
            "": "The JSON you have submitted cannot be parsed."
            "": "You've reached your limit of 250 campaigns. Please delete one or more and try again."
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: title
                  message: "title can't be blank"
                - field: title
                  message: title is too long (maximum is 100 characters)
                - field: categories
                  message: categories exceeds 10 category limit
                - field: html_content
                  message: html_content exceeds the 1MB limit
                - field: plain_content
                  message: plain_content exceeds the 1MB limit
                - field: sender_id
                  message: sender_id does not exist
                - field: sender_id
                  message: sender_id is not a verified sender identity
                - field: list_ids
                  message: list_ids do not all exist
                - field: segment_ids
                  message: segment_ids do not all exist
                - field: ip_pool
                  message: The ip pool you provided is invalid
                - field: suppression_group_id
                  message: suppression_group_id does not exist
                - field: unsubscribes
                  message: 'Either suppression_group_id or custom_unsubscribe_url may be set/used, but not both. Please remove one before setting the other.'
                - field: null
                  message: The JSON you have submitted cannot be parsed.
                - field: null
                  message: "You've reached your limit of 250 campaigns. Please delete one or more and try again."
        '401':
          description: ''
          schema:
            type: object
            properties: {}
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Create a Campaign
      summary: |-
        {% info %}
        A campaign requires a title to be created.
        In order to send or schedule the campaign, you will be required to
      description: |-
        Our Marketing Campaigns API lets you create, manage, send, and schedule campaigns.


        Note: In order to send or schedule the campaign, you will be required to provide a subject, sender ID, content (we suggest both html and plain text), and at least one list or segment ID. This information is not required when you create a campaign.

        For more information:

        * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
      security:
        - {}
  /contactdb/reserved_fields:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            title: "List fields that are reserved and can't be used for custom field names. response"
            type: object
            properties:
              reserved_fields:
                type: array
                description: The reserved fields that are already set up within custom fields.
                items:
                  $ref: '#/definitions/contactdb_custom_field'
            required:
              - reserved_fields
          examples:
            application/json:
              reserved_fields:
                - name: first_name
                  type: text
                - name: last_name
                  type: text
                - name: email
                  type: text
                - name: created_at
                  type: date
                - name: updated_at
                  type: date
                - name: last_emailed
                  type: date
                - name: last_clicked
                  type: date
                - name: last_opened
                  type: date
                - name: my_custom_field
                  type: text
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get reserved custom fields fields.
      summary: ''
      description: |-
        List fields that are reserved and can't be used for custom field names. [GET]

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
  '/campaigns/{campaign_id}/schedules':
    parameters: []
    delete:
      responses:
        '204':
          description: ''
          schema:
            type: 'null'
        '403':
          description: |-
            "": "This campaign is already In Progress."
            "": "This campaign is already Sent."
            "": "This campaign is already Paused."
            "": "This campaign is already Canceled."
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: This campaign is already In Progress.
                - field: null
                  message: This campaign is already Sent.
                - field: null
                  message: This campaign is already Paused.
                - field: null
                  message: This campaign is already Canceled.
        '404':
          description: '"": "not found"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: not found
      parameters:
        - type: string
          name: campaign_id
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Unschedule a Scheduled Campaign
      summary: |-
        A successful unschedule will return a 204.
        If the specified campaign is in the process of being sent, the only option is
      description: |-
        A successful unschedule will return a 204.
        If the specified campaign is in the process of being sent, the only option is to cancel (a different method).

        For more information:

        * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
      security:
        - {}
    patch:
      responses:
        '200':
          description: ''
          schema:
            title: Update a Scheduled Campaign response
            type: object
            properties:
              id:
                type: integer
                description: The campaign ID
              send_at:
                type: integer
                description: The unix timestamp to send the campaign.
              status:
                type: string
                description: The status of the schedule.
            required:
              - id
              - send_at
              - status
        '400':
          description: |-
            "": "The JSON you have submitted cannot be parsed."
            "send_at": "Please choose a future time for sending your campaign."
            "":"You do not have enough credits to send this campaign. Upgrade your plan to send more: https://app.sendgrid.com/settings/billing"
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: send_at
                  message: Please choose a future time for sending your campaign.
                - field: null
                  message: The JSON you have submitted cannot be parsed.
                - field: null
                  message: 'You do not have enough credits to send this campaign. Upgrade your plan to send https://app.sendgrid.com/settings/billing'
        '403':
          description: '"send_at": "You cannot update the send_at value of non-scheduled campaign."'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: send_at
                  message: You cannot update the send_at value of non-scheduled campaign.
        '404':
          description: '"": "not found"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: not found
      parameters:
        - type: string
          name: send_at
          in: formData
          required: true
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update a Scheduled Campaign
      summary: Changes the send_at time for the specified campaign.
      description: |-
        Changes the send_at time for the specified campaign.

        For more information:

        * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
      security:
        - {}
    get:
      responses:
        '200':
          description: ''
          schema:
            title: View Scheduled Time of a Campaign response
            type: object
            properties:
              send_at:
                type: integer
                format: int64
            required:
              - send_at
          examples:
            application/json:
              send_at: 1490778528
        '404':
          description: '"": "not found"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: not found
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: View Scheduled Time of a Campaign
      summary: ''
      description: "View the time that this campaign is scheduled to be sent. \n\nFor more information:\n\n* [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)"
      security:
        - {}
    post:
      responses:
        '200':
          description: ''
          schema:
            title: Schedule a Campaign response
            type: object
            properties:
              id:
                type: integer
                description: The campaign ID.
              send_at:
                type: integer
                description: The date time you scheduled your campaign to be sent.
              status:
                type: string
                description: The status of your campaign.
                enum:
                  - Scheduled
            required:
              - id
              - send_at
              - status
          examples:
            application/json:
              id: 1234
              send_at: 1489771528
              status: Scheduled
        '400':
          description: |-
            "subject": "subject can't be blank"
            "sender_id": "sender_id can't be blank"
            "plain_content": "plain_content can't be blank, please provide plain text or html content"
            "list_ids": "You must select at least 1 segment or 1 list to send to."
            "send_at": "Please choose a future time for sending your campaign."
            "unsubscribe_tag": "An [unsubscribe] tag in both your html and plain content is required to send a campaign."
            "suppression_group_id": "Either a suppression_group_id or custom_unsubscribe_url is required to send a campaign."
            "": "The JSON you have submitted cannot be parsed."
            "":"You do not have enough credits to send this campaign. Upgrade your plan to send more: https://app.sendgrid.com/settings/billing"
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: subject
                  message: "subject can't be blank"
                - field: sender_id
                  message: "sender_id can't be blank"
                - field: plain_content
                  message: "plain_content can't be blank, please provide plain text or html content"
                - field: list_id
                  message: You must select at least 1 segment or 1 list to send to.
                - field: unsubscribe_tag
                  message: 'An [unsubscribe] tag in both your html and plain content is required to send a campaign.'
                - field: suppression_group_id
                  message: Either a suppression_group_id or custom_unsubscribe_url is required to send a campaign.
                - field: null
                  message: 'You do not have enough credits to send this campaign. Upgrade your plan to send more: https://app.sendgrid.com/settings/billing'
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '403':
          description: '"": "You cannot POST to a campaign that has already sent or scheduled. However you can update a scheduled campaign with a PATCH."'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: You cannot POST to a campaign that has already sent or scheduled. However you can update a scheduled campaign with a PATCH.
        '404':
          description: '"": "not found"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: not found
      parameters:
        - type: string
          name: send_at
          in: formData
          required: true
          description: The unix timestamp for the date and time you would like your campaign to be sent out.
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Schedule a Campaign
      summary: ''
      description: |-
        Send your campaign at a specific date and time.

        For more information:

        * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
      security:
        - {}
  '/asm/groups/{group_id}/suppressions/{email}':
    parameters: []
    delete:
      responses:
        '204':
          description: ''
          schema:
            type: 'null'
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Delete a Suppression from a Group
      summary: ''
      description: 'Suppressions are email addresses that can be added to [groups](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html) to prevent certain types of emails from being delivered to those addresses.'
      security:
        - {}
  /asm/groups:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                name:
                  type:
                    - string
                    - 'null'
                description:
                  type:
                    - string
                    - 'null'
                last_email_sent_at:
                  type:
                    - object
                    - 'null'
                  properties: {}
                is_default:
                  type: boolean
                unsubscribes:
                  type: number
          examples:
            application/json:
              - id: 1234
                name: Unsubscribe Group
                description: An Unsubscribe Group
                last_email_sent_at: null
                is_default: true
                unsubscribes: 1234
              - id: 1234
                name: Unsubscribe Group
                description: An Unsubscribe Group
                last_email_sent_at: null
                is_default: true
                unsubscribes: 1234
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Retrieve all suppression groups associated with the user.
      summary: ''
      description: |-
        Groups are specific types of email you would like your recipients to be able to unsubscribe from or subscribe to. For example: Daily Newsletters, Invoices, System Alerts.

        The **name** and **description** of the Group will be visible by recipients when they are managing their subscriptions.
      security:
        - {}
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              id:
                type: number
              name:
                type: string
              description:
                type: string
              last_email_sent_at:
                type: 'null'
              is_default:
                type: boolean
          examples:
            application/json:
              id: 1234
              name: A group name
              description: A group description
              last_email_sent_at: null
              is_default: false
      parameters:
        - type: string
          name: name
          in: formData
          required: true
          description: ''
        - type: string
          name: description
          in: formData
          required: true
          description: ''
        - type: string
          name: is_default
          in: formData
          required: true
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Create a Group
      summary: ''
      description: |-
        Groups are specific types of email you would like your recipients to be able to unsubscribe from or subscribe to. For example: Daily Newsletters, Invoices, System Alerts.

        The **name** and **description** of the Group will be visible by recipients when they are managing their subscriptions.
      security:
        - {}
  '/asm/groups/{group_id}/suppressions':
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: string
          examples:
            application/json:
              - example@example.com
              - example2@example.com
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get suppressed addresses for a given group.
      summary: ''
      description: 'Suppressions are email addresses that can be added to [groups](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html) to prevent certain types of emails from being delivered to those addresses.'
      security:
        - {}
    post:
      responses:
        '201':
          description: ''
          schema:
            type: object
            properties:
              recipient_emails:
                type: array
                items:
                  type: string
          examples:
            application/json:
              recipient_emails:
                - test1@example.com
                - test2@example.com
      parameters:
        - type: string
          name: recipient_emails
          in: formData
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Add Suppressions to a Group
      summary: ''
      description: 'Suppressions are email addresses that can be added to [groups](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html) to prevent certain types of emails from being delivered to those addresses.'
      security:
        - {}
  '/templates/{template_id}':
    parameters: []
    patch:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              versions:
                type: array
                items: {}
          examples:
            application/json:
              id: 733ba07f-ead1-41fc-933a-3976baa23716
              name: new_example_name
              versions: []
      parameters:
        - type: string
          name: name
          in: formData
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Edit a template.
      summary: ''
      description: ''
      security:
        - {}
    delete:
      responses:
        '204':
          description: ''
          schema:
            type: object
            properties: {}
      parameters: []
      consumes:
        - application/json
      produces: []
      operationId: Delete a template.
      summary: ''
      description: ''
      security:
        - {}
    get:
      responses: {}
      parameters: []
      consumes:
        - application/json
      produces: []
      operationId: Retrieve a single template.
      summary: ''
      description: ''
      security:
        - {}
  '/contactdb/lists/{list_id}/recipients':
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              recipients:
                type: array
                items:
                  $ref: '#/definitions/contactdb_recipient'
          examples:
            application/json:
              recipients:
                - created_at: 1433348344
                  custom_fields:
                    - id: 6234
                      name: age
                      type: number
                      value: null
                    - id: 6233
                      name: country
                      type: text
                      value: null
                    - id: 6235
                      name: fname
                      type: text
                      value: Example
                    - id: 6239
                      name: lname
                      type: text
                      value: User
                    - id: 6240
                      name: lname
                      type: text
                      value: null
                  email: example@example.com
                  first_name: Example
                  id: ZGVWfyZWsuYmFpbmVzQHNlbmRmCmLkLmNv==
                  last_clicked: 1438616117
                  last_emailed: 1438613272
                  last_name: User
                  last_opened: 1438616109
                  updated_at: 1438616119
        '400':
          description: |-
            "list_id" : "Returned if list_id is not a valid integer"
            "page" : "Returned if page is not a valid integer"
            "page" : "Returned if page is less than 1"
            "page_size" : "Returned if page_size is not a valid integer"
            "page_size" : "Returned if page_size is less than 1 or greater than 1000"
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: list_id
                  message: Returned if list_id is not a valid integer
                - field: page
                  message: Returned if page is not a valid integer
                - field: page
                  message: Returned if page is less than 1
                - field: page_size
                  message: Returned if page_size is not a valid integer
                - field: page_size
                  message: Returned if page_size is less than 1 or greater than 1000
        '404':
          description: '"list_id" : "Returned if list_id does not exist"'
          schema:
            type: object
            properties: {}
          examples:
            application/json:
              errors:
                - field: list_id
                  message: Returned if list_id is invalid
      parameters:
        - type: integer
          description: Page index of first recipient to return (must be a positive integer)
          name: page
          in: query
        - type: integer
          description: Number of recipients to return at a time (must be a positive integer between 1 and 1000)
          name: page_size
          in: query
        - type: number
          description: The ID of the list whose recipients you are requesting.
          name: list_id
          in: query
          required: true
      consumes:
        - application/json
      produces:
        - application/json
      operationId: List Recipients on a List
      summary: ''
      description: |-
        List all the recipients currently on a specific list.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
    post:
      responses:
        '201':
          description: ''
          schema:
            type: 'null'
        '400':
          description: |-
            "list_id" : "Returned if list_id is not a valid integer"
            "" : "Returned if no valid recipient ids were passed"
            "" : "Returned if no recipients were added"
            "" : "Returned if request body is invalid JSON"
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: list_id
                  message: list_id is invalid
                - field: recipient_id
                  message: no valid recipients were provided
                - field: null
                  message: no recipients were added
                - field: null
                  message: request body is invalid JSON
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '404':
          description: '"list_id": "Returned if list_id does not exist"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: list_id
                  message: list_id does not exist
                - field: recipient_id
                  message: recipient_id does not exist
      parameters:
        - type: number
          description: 'The list to add your recipients to. '
          name: list_id
          in: query
          required: true
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Add Multiple Recipients to a List
      summary: 'Adds existing recipients to a list, passing in the recipient IDs to add. Recipient IDs should be passed exactly as they '
      description: |-
        Adds existing recipients to a list, passing in the recipient IDs to add. Recipient IDs should be passed exactly as they are returned from recipient endpoints.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
  /mail_settings/forward_spam:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/mail_settings_forward_spam'
          examples:
            application/json:
              email: ''
              enabled: true
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get forward spam mail settings
      summary: ''
      description: ''
      security:
        - {}
    patch:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/mail_settings_forward_spam'
          examples:
            application/json:
              email: ''
              enabled: false
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update forward spam mail settings
      summary: ''
      description: ''
      security:
        - {}
  /ips/warmup:
    parameters: []
    post:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                ip:
                  type: string
                start_date:
                  type: integer
          examples:
            application/json:
              - ip: 0.0.0.0
                start_date: 1409616000
      parameters:
        - type: string
          name: ip
          in: formData
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Add an IP to warmup.
      summary: ''
      description: ''
      security:
        - {}
    get:
      responses: {}
      parameters: []
      consumes:
        - application/json
      produces: []
      operationId: Get all IPs that are currently warming up.
      summary: ''
      description: ''
      security:
        - {}
  /ips/pools:
    parameters: []
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              name:
                type: string
          examples:
            application/json:
              name: marketing
      parameters:
        - type: string
          name: name
          in: formData
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Create an IP pool.
      summary: ''
      description: ''
      security:
        - {}
    get:
      responses: {}
      parameters: []
      consumes:
        - application/json
      produces: []
      operationId: List all IP pools.
      summary: ''
      description: ''
      security:
        - {}
  /stats:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                date:
                  type: string
                stats:
                  type: array
                  items:
                    type: object
                    properties:
                      metrics:
                        type: object
                        properties:
                          blocks:
                            type: number
                          bounce_drops:
                            type: number
                          bounces:
                            type: number
                          clicks:
                            type: number
                          deferred:
                            type: number
                          delivered:
                            type: number
                          invalid_emails:
                            type: number
                          opens:
                            type: number
                          processed:
                            type: number
                          requests:
                            type: number
                          spam_report_drops:
                            type: number
                          spam_reports:
                            type: number
                          unique_clicks:
                            type: number
                          unique_opens:
                            type: number
                          unsubscribe_drops:
                            type: number
                          unsubscribes:
                            type: number
          examples:
            application/json:
              - date: '2015-11-03'
                stats:
                  - metrics:
                      blocks: 0
                      bounce_drops: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      invalid_emails: 0
                      opens: 0
                      processed: 0
                      requests: 0
                      spam_report_drops: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
                      unsubscribe_drops: 0
                      unsubscribes: 0
              - date: '2015-11-04'
                stats:
                  - metrics:
                      blocks: 0
                      bounce_drops: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      invalid_emails: 0
                      opens: 0
                      processed: 0
                      requests: 0
                      spam_report_drops: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
                      unsubscribe_drops: 0
                      unsubscribes: 0
              - date: '2015-11-05'
                stats:
                  - metrics:
                      blocks: 0
                      bounce_drops: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      invalid_emails: 0
                      opens: 0
                      processed: 0
                      requests: 0
                      spam_report_drops: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
                      unsubscribe_drops: 0
                      unsubscribes: 0
              - date: '2015-11-06'
                stats:
                  - metrics:
                      blocks: 0
                      bounce_drops: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      invalid_emails: 0
                      opens: 0
                      processed: 0
                      requests: 0
                      spam_report_drops: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
                      unsubscribe_drops: 0
                      unsubscribes: 0
              - date: '2015-11-07'
                stats:
                  - metrics:
                      blocks: 0
                      bounce_drops: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      invalid_emails: 0
                      opens: 0
                      processed: 0
                      requests: 0
                      spam_report_drops: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
                      unsubscribe_drops: 0
                      unsubscribes: 0
              - date: '2015-11-08'
                stats:
                  - metrics:
                      blocks: 0
                      bounce_drops: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      invalid_emails: 0
                      opens: 0
                      processed: 0
                      requests: 0
                      spam_report_drops: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
                      unsubscribe_drops: 0
                      unsubscribes: 0
              - date: '2015-11-09'
                stats:
                  - metrics:
                      blocks: 0
                      bounce_drops: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      invalid_emails: 0
                      opens: 0
                      processed: 0
                      requests: 0
                      spam_report_drops: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
                      unsubscribe_drops: 0
                      unsubscribes: 0
      parameters:
        - type: string
          name: limit
          in: query
        - type: string
          name: offset
          in: query
        - type: string
          name: aggregated_by
          in: query
        - type: string
          name: start_date
          in: query
        - type: string
          name: end_date
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Global Stats provide all of your user’s email statistics for a given date range.
      summary: ''
      description: Global Stats provide all of your user’s email statistics for a given date range.
      security:
        - {}
  /contactdb/recipients:
    parameters: []
    post:
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/contactdb_recipient_response'
          examples:
            application/json:
              error_count: 1
              error_indices:
                - 2
              new_count: 2
              persisted_recipients:
                - YUBh
                - bWlsbGVyQG1pbGxlci50ZXN0
              updated_count: 0
              errors:
                - message: Invalid email.
                  error_indices:
                    - 2
        '400':
          description: '"" : "Returned if request body is not valid json"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: Request body is not valid json
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Add recipients
      summary: ''
      description: |-
        Add a recipient to your contactdb. It is of note that you can add custom field data as a parameter on this endpoint. We have provided an example using some of the default custom fields SendGrid provides.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
    get:
      responses:
        '200':
          description: ''
          schema:
            title: List Recipients response
            type: object
            properties:
              recipients:
                type: array
                items:
                  type: object
            required:
              - recipients
        '400':
          description: |-
            "page" : "Returned if page is not a valid integer"
            "page" : "Returned if page is less than 1"
            "page_size" : "Returned if page_size is not a valid integer"
            "page_size" : "Returned if page_size is less than 1 or greater than 1000"
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters:
        - type: integer
          description: Page index of first recipients to return (must be a positive integer)
          name: page
          in: query
        - type: integer
          description: Number of recipients to return at a time (must be a positive integer between 1 and 1000)
          name: page_size
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: "List Recipients [waiting on Bryan Adamson's response]"
      summary: |
        {% info %}
        Batch deletion of a page makes it possible to receive an empty page of recipients before reaching the end of
      description: |-
        Batch deletion of a page makes it possible to receive an empty page of recipients before reaching the end of
        the list of recipients. To avoid this issue; iterate over pages until a 404 is retrieved.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
    patch:
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/contactdb_recipient_response'
        '400':
          description: '"" : "Returned if request body is not valid json"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: Request body is not valid json
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update Recipient
      summary: Updates one or more recipients. The body is a list of recipient objects.
      description: |-
        Updates one or more recipients. The body is an array of recipient objects.

        It is of note that you can add custom field data as parameters on recipient objects. We have provided an example using some of the default custom fields SendGrid provides.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
    delete:
      responses:
        '200':
          description: ''
        '400':
          description: |-
            "" : "Returned if no recipients are deleted"
            "" : "Returned if all of the provided recipient ids are invalid"
            "" : "Returned if request body is not valid json"
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - message: No recipient ids provided
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Delete Recipient
      summary: Deletes one or more recipients. The body is a list of recipient ids to delete.
      description: |-
        Deletes one or more recipients. The body is a list of recipient ids to delete.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
  '/templates/{template_id}/versions':
    parameters: []
    post:
      responses: {}
      parameters:
        - type: string
          name: template_id
          in: formData
          description: ''
        - type: string
          name: active
          in: formData
          description: ''
        - type: string
          name: name
          in: formData
          description: ''
        - type: string
          name: html_content
          in: formData
          description: ''
        - type: string
          name: plain_content
          in: formData
          description: ''
        - type: string
          name: subject
          in: formData
          description: ''
      consumes:
        - application/json
      produces: []
      operationId: Create a new version for a template
      summary: ''
      description: ''
      security:
        - {}
  /contactdb/recipients/billable_count:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/contactdb_recipient_count'
          examples:
            application/json:
              recipient_count: 1234
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get the count of billable recipients
      summary: ''
      description: |-
        You are billed for marketing campaigns based on the highest number of recipients you have had in your account at one time. This endpoint will allow you to know the current billable count value.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
  '/contactdb/segments/{segment_id}':
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/contactdb_segments'
          examples:
            application/json:
              id: 1
              name: Last Name Miller
              list_id: 4
              conditions:
                - field: last_name
                  value: Miller
                  operator: eq
                  and_or: ''
              recipient_count: 1
        '400':
          description: '"segment_id" : "Returned if segment_id is not valid"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - message: if segment_id is not valid
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '404':
          description: '"segment_id" : "Returned if segment_id does not exist"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - message: segment_id not found
      parameters:
        - type: number
          description: The ID of the segment you want to request.
          name: segment_id
          in: query
          required: true
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Retrieve a Segment
      summary: ''
      description: |-
        Get a single segment by ID.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
    delete:
      responses:
        '204':
          description: ''
          schema:
            type: 'null'
        '400':
          description: |-
            "segment_id" : "Returned if segment_id is not valid"
            "delete_contacts" : "Returned if delete_contacts is not a valid boolean"
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: segment_id
                  message: Returned if segment_id is not valid
                - field: delete_contacts
                  message: Returned if delete_contacts is not a valid boolean
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '404':
          description: '"segment_id" : "Returned if segment_id does not exist"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: segment_id
                  message: segment_id does not exist
      parameters:
        - type: boolean
          description: True to delete all contacts matching the segment in addition to deleting the segment
          name: delete_contacts
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Delete a Segment
      summary: ''
      description: |-
        Delete a segment from your contactdb. You also have the option to delete all the contacts from your contactdb who were in this segment.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
    patch:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/contactdb_segments'
          examples:
            application/json:
              id: 5
              name: The Millers
              list_id: 5
              conditions:
                - field: last_name
                  value: Miller
                  operator: eq
                  and_or: ''
              recipient_count: 1
        '400':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - message: request body is not valid json
                - message: invalid value is passed into one of the request body parameters
                - segment_id: segment_id
                  message: segment id is not valid
                - field: field
                  message: field and set value is not passed into the request body
                - field: value
                  message: value and set value is not passed into the request body
                - field: operator
                  message: operator and set value is not passed into the request body
                - field: and_or
                  message: and_or is not set on more than one condition and less than all conditions
                - field: and_or
                  message: and_or is set on all conditions
                - field: and_or
                  message: and_or is set on the only condition passed
                - field: and_or
                  message: and_or and set value is not passed into the request body
                - field: list_id
                  message: the list_id is not valid
                - field: name
                  message: the name is not valid
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters:
        - type: string
          description: The ID of the segment you are updating.
          name: segment_id
          in: query
        - type: string
          name: name
          in: formData
          required: true
          description: ''
        - type: string
          name: list_id
          in: formData
          required: false
          description: The list ID you would like this segment to be built from.
        - type: string
          name: conditions
          in: formData
          required: false
          description: The conditions by which this segment should be created.
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update a segment
      summary: ''
      description: |-
        Update a segment.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
  /partner_settings/new_relic:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/partner_settings_new_relic'
          examples:
            application/json:
              enable_subuser_statistics: false
              enabled: true
              license_key: ''
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get new relic partner settings
      summary: ''
      description: ''
      security:
        - {}
    patch:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/partner_settings_new_relic'
          examples:
            application/json:
              enable_subuser_statistics: true
              enabled: true
              license_key: ''
      parameters:
        - type: string
          name: license_key
          in: formData
          description: ''
        - type: string
          name: enabled
          in: formData
          description: ''
        - type: string
          name: enable_subuser_statistics
          in: formData
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update new relic partner settings
      summary: ''
      description: ''
      security:
        - {}
  /mail_settings/spam_check:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/mail_settings_spam_check'
          examples:
            application/json:
              enabled: false
              max_score: 6
              url: 'http://example.com'
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get spam check mail settings
      summary: ''
      description: ''
      security:
        - {}
    patch:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/mail_settings_spam_check'
          examples:
            application/json:
              enabled: false
              max_score: 6
              url: 'http://example.com'
      parameters:
        - type: string
          name: enabled
          in: formData
          description: ''
        - type: string
          name: url
          in: formData
          description: ''
        - type: string
          name: max_score
          in: formData
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update spam check mail settings
      summary: ''
      description: ''
      security:
        - {}
  /clients/stats:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                date:
                  type: string
                stats:
                  type: array
                  items:
                    type: object
                    properties:
                      metrics:
                        type: object
                        properties:
                          opens:
                            type: integer
                          unique_opens:
                            type: integer
                      name:
                        type: string
                      type:
                        type: string
          examples:
            application/json:
              - date: '2014-10-01'
                stats:
                  - metrics:
                      opens: 1
                      unique_opens: 1
                    name: Gmail
                    type: client
              - date: '2014-10-02'
                stats:
                  - metrics:
                      opens: 0
                      unique_opens: 0
                    name: Gmail
                    type: client
      parameters:
        - type: string
          name: start_date
          in: query
        - type: string
          name: end_date
          in: query
        - type: string
          name: aggregated_by
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Retrieve stats by client type
      summary: Gets email statistics by client type.
      description: Gets email statistics by client type.
      security:
        - {}
  '/ips/warmup/{ip_address}':
    parameters: []
    delete:
      responses:
        '204':
          description: ''
          schema:
            type: object
            properties: {}
      parameters: []
      consumes:
        - application/json
      produces: []
      operationId: Remove an IP from warmup.
      summary: ''
      description: ''
      security:
        - {}
    get:
      responses: {}
      parameters: []
      consumes:
        - application/json
      produces: []
      operationId: Get warmup status for a particular IP.
      summary: ''
      description: ''
      security:
        - {}
  '/ips/pools/{pool_name}':
    parameters: []
    delete:
      responses:
        '204':
          description: ''
          schema:
            type: object
            properties: {}
      parameters: []
      consumes:
        - application/json
      produces: []
      operationId: Delete an IP pool.
      summary: ''
      description: ''
      security:
        - {}
    put:
      responses: {}
      parameters: []
      consumes:
        - application/json
      produces: []
      operationId: Update an IP pool’s name.
      summary: ''
      description: ''
      security:
        - {}
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              pool_name:
                type: string
              ips:
                type: array
                items:
                  type: string
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: List the IPs in a specified pool.
      summary: ''
      description: ''
      security:
        - {}
  '/asm/suppressions/{email}':
    parameters: []
    delete:
      responses:
        '200':
          description: ''
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Delete a Global Suppression
      summary: ''
      description: ''
      security:
        - {}
    get:
      responses:
        '200':
          description: ''
          schema:
            title: Retrieve a Global Suppression response
            type: object
            properties:
              recipient_email:
                type: string
            required:
              - recipient_email
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Retrieve a Global Suppression
      summary: ''
      description: ''
      security:
        - {}
  /tracking_settings/subscription:
    parameters: []
    patch:
      responses:
        '200':
          description: ''
          schema:
            type: object
      parameters:
        - type: string
          name: enabled
          in: formData
          description: ''
        - type: string
          name: landing
          in: formData
          description: ''
        - type: string
          name: url
          in: formData
          description: ''
        - type: string
          name: replace
          in: formData
          description: ''
        - type: string
          name: html_content
          in: formData
          description: ''
        - type: string
          name: plain_content
          in: formData
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update Subscription Tracking Settings
      summary: ''
      description: ''
      security:
        - {}
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              enabled:
                type: boolean
              html_content:
                type: string
              landing:
                type: string
              plain_content:
                type: string
              replace:
                type: string
              url:
                type: string
          examples:
            application/json:
              enabled: true
              html_content: |
                <p>Something something unsubscribe <% %> something something</p>
              landing: |
                <p>subscribehere</p>
              plain_content: 'Something something unsubscribe <% %> something something'
              replace: thetag
              url: ''
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get Subscription Tracking Settings
      summary: ''
      description: ''
      security:
        - {}
  '/ips/pools/{pool_name}/ips/{ip}':
    parameters: []
    delete:
      responses: {}
      parameters: []
      consumes:
        - application/json
      produces: []
      operationId: Remove an IP address from a pool.
      summary: ''
      description: ''
      security:
        - {}
  /whitelabel/links/default:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              id:
                type: integer
              domain:
                type: string
              subdomain:
                type: string
              username:
                type: string
              user_id:
                type: integer
              default:
                type: boolean
              valid:
                type: boolean
              legacy:
                type: boolean
              dns:
                type: object
                properties:
                  domain_cname:
                    type: object
                    properties:
                      valid:
                        type: boolean
                      type:
                        type: string
                      host:
                        type: string
                      data:
                        type: string
                  owner_cname:
                    type: object
                    properties:
                      valid:
                        type: boolean
                      type:
                        type: string
                      host:
                        type: string
                      data:
                        type: string
          examples:
            application/json:
              id: 1
              domain: example.com
              subdomain: mail
              username: john@example.com
              user_id: 7
              default: false
              valid: true
              legacy: false
              dns:
                domain_cname:
                  valid: true
                  type: cname
                  host: mail.example.com
                  data: sendgrid.net
                owner_cname:
                  valid: true
                  type: cname
                  host: 7.example.com
                  data: sendgrid.net
      parameters:
        - type: string
          name: domain
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Default Link
      summary: 'Default link is the actual link whitelabel to be used when sending messages.  If there are multiple link whitelabels, th'
      description: |-
        Default link is the actual link whitelabel to be used when sending messages.  If there are multiple link whitelabels, the default is determined by the following order:
        <ul>
          <li>Validated link whitelabels marked as "default"</li>
          <li>Legacy link whitelabels (migrated from the whitelabel wizard)</li>
          <li>Default SendGrid link whitelabel (i.e. 100.ct.sendgrid.net)</li>
        </ul>
      security:
        - {}
  '/contactdb/lists/{list_id}/recipients/{recipient_id}':
    parameters: []
    post:
      responses:
        '201':
          description: ''
          schema:
            type: 'null'
        '400':
          description: |-
            "list_id" : "Returned if list_id is invalid"
            "recipient_id" : "Returned if recipient_id is invalid"
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: list_id
                  message: Returned if list_id is invalid
                - field: recipient_id
                  message: Returned if recipient_id is invalid
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '404':
          description: |-
            "list_id" : "Returned if list_id does not exist"
            "recipient_id" : "Returned if recipient_id does not exist"
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: list_id
                  message: Returned if list_id does not exist
                - field: recipient_id
                  message: Returned if recipient_id does not exist
      parameters:
        - type: number
          description: The ID of the list to add the recipient to.
          name: list_id
          in: query
        - type: string
          description: The recipient you are adding to the list indicated.
          name: recipient_id
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Add a Single Recipient to a List
      summary: ''
      description: |-
        Add a recipient to a list.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
    delete:
      responses:
        '204':
          description: ''
          schema:
            type: 'null'
        '400':
          description: |-
            "list_id" : "Returned if list_id is not valid"
            "recipient_id" : "Returned if recipient_id is not valid"
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: list_id
                  message: Returned if list_id is invalid
                - field: recipient_id
                  message: no valid recipients were provided
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '404':
          description: |-
            "list_id" : "Returned if list_id does not exist"
            "recipient_id" : "Returned if recipient_id does not exist"
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: list_id
                  message: Returned if list_id does not exist
                - field: recipient_id
                  message: Returned if recipient_id does not exist
      parameters:
        - type: number
          description: The ID of the list you are taking this recipient away from.
          name: list_id
          in: query
          required: true
        - type: number
          description: The ID of the recipient to take off the list.
          name: recipient_id
          in: query
          required: true
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Delete a Single Recipient from a Single List
      summary: ''
      description: |-
        Delete a single recipient from a list.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
  /ips:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                ip:
                  type: string
                subusers:
                  type: array
                  items:
                    type: string
                rdns:
                  type: string
                pools:
                  type: array
                  items:
                    type: object
                    properties: {}
                warmup:
                  type: boolean
                start_date:
                  type:
                    - number
                    - 'null'
                whitelabeled:
                  type: boolean
          examples:
            application/json:
              - ip: 127.0.0.1
                subusers:
                  - example_subuser1
                  - example_subuser2
                rdns: o1.em.example.com
                pools: []
                warmup: true
                start_date: 1250337600
                whitelabeled: true
              - ip: 127.0.0.1
                subusers: []
                pools: []
                warmup: false
                start_date: null
                whitelabeled: false
      parameters:
        - type: string
          description: The IP address to get
          name: ip
          in: query
        - type: string
          description: Should we exclude whitelabels?
          name: exclude_whitelabels
          in: query
        - type: string
          description: The subuser you are requesting for.
          name: subuser
          in: query
        - type: string
          default: 10
          description: The number of IPs you want returned at the same time.
          name: limit
          in: query
        - type: string
          default: 0
          description: The offset for the number of IPs that you are requesting.
          name: offset
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: List all IPs
      summary: |-
        See a list of all assigned and unassigned IPs.
        Response includes warm up status, pools, assigned subusers, and whitelabe
      description: |-
        See a list of all assigned and unassigned IPs.
        Response includes warm up status, pools, assigned subusers, and whitelabel info.
        The start_date field corresponds to when warmup started for that IP.
      security:
        - {}
  '/whitelabel/domains/{id}/validate':
    parameters: []
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              id:
                type: integer
                description: The ID of the domain whitelabel.
              valid:
                type: boolean
                description: Indicates if this is a valid whitelabel.
              validation_resuts:
                type: object
                properties:
                  mail_cname:
                    type: object
                    properties:
                      valid:
                        type: boolean
                      reason:
                        type: string
                  dkim1:
                    type: object
                    properties:
                      valid:
                        type: boolean
                      reason:
                        type: 'null'
                  dkim2:
                    type: object
                    properties:
                      valid:
                        type: boolean
                      reason:
                        type: 'null'
                  spf:
                    type: object
                    properties:
                      valid:
                        type: boolean
                      reason:
                        type: 'null'
          examples:
            application/json:
              id: 1
              valid: true
              validation_resuts:
                mail_cname:
                  valid: false
                  reason: 'Expected your MX record to be "mx.sendgrid.net" but found "example.com".'
                dkim1:
                  valid: true
                  reason: null
                dkim2:
                  valid: true
                  reason: null
                spf:
                  valid: true
                  reason: null
        '400':
          description: Unexpected error in API call. See HTTP response body for details.
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Validate Domain
      summary: ''
      description: |-
        **This endpoint allows you to validate a domain whitelabel. If it fails, it will return an error message describing why the whitelabel could not be validated.**

        A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

        For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)

        ## URI Parameters
        | URI Parameter   | Type   | Description  |
        |---|---|---|
        | id | integer  |ID of the domain whitelabel to validate. |
      security:
        - {}
  '/contactdb/recipients/{recipient_id}':
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/contactdb_recipient'
        '400':
          description: '"recipient_id" : "Returned if recipient_id is not valid"'
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '404':
          description: '"recipient_id" : "Returned if record for recipient id does not exist"'
      parameters:
        - type: string
          description: The ID of the created recipient.
          name: recipient_id
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Retrieve a single recipient
      summary: ''
      description: |-
        Retrieve a single recipient by ID from your contact database.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
    delete:
      responses:
        '204':
          description: ''
          schema:
            type: object
            properties: {}
        '400':
          description: '"recipient_id" : "Returned if recipient_id is not valid"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: recipient not found
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '404':
          description: '"recipient_id" : "Returned if record for recipient id does not exist"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: recipient_id is not valid
      parameters:
        - type: string
          description: The ID of the recipient to be deleted.
          name: recipient_id
          in: query
          required: true
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Delete a Recipient
      summary: ''
      description: |-
        Delete a single recipient from your contact database, by ID.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
  '/campaigns/{campaign_id}/schedules/test':
    parameters: []
    post:
      responses:
        '200':
          description: ''
          schema:
            title: Send a Test Campaign request
            type: object
            properties:
              to:
                type: string
            required:
              - to
        '400':
          description: |-
            "": "The JSON you have submitted cannot be parsed."
            "to": "Please provide an email address to which the test should be sent."
            "to": "You can only send tests to 10 addresses at a time."
            "subject": "Please add a subject to your campaign before sending a test."
            "plain_content": "Plain content and html content can't both be blank. Please set one of these values before sending a test."
            "sender_id": "Please assign a sender identity to your campaign before sending a test."
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: send_at
                  message: Please choose a future time for sending your campaign.
                - field: null
                  message: The JSON you have submitted cannot be parsed.
                - field: null
                  message: 'You do not have enough credits to send this campaign. Upgrade your plan to send more: https://app.sendgrid.com/settings/billing'
        '404':
          description: '"": "not found"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: not found
      parameters:
        - type: string
          name: campaign_id
          in: query
        - type: string
          name: to
          in: formData
          required: true
          description: The email address that should receive the test campaign.
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Send a Test Campaign
      summary: 'To send to multiple addresses, use an array for the JSON "to" value ["one@address","two@address"]'
      description: |-
        To send to multiple addresses, use an array for the JSON "to" value ["one@address","two@address"]

        For more information:

        * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
      security:
        - {}
  '/campaigns/{campaign_id}':
    parameters: []
    patch:
      responses:
        '200':
          description: ''
          schema:
            title: Update a Campaign response
            type: object
            properties:
              id:
                type: integer
                format: int64
              title:
                type: string
              subject:
                type: string
              sender_id:
                type: integer
                format: int64
              list_ids:
                type: array
                items:
                  type: integer
                  format: int64
              segment_ids:
                type: array
                items:
                  type: integer
                  format: int64
              categories:
                type: array
                items:
                  type: string
              suppression_group_id:
                type: integer
                format: int64
              custom_unsubscribe_url:
                type: string
              ip_pool:
                type: string
              html_content:
                type: string
              plain_content:
                type: string
              status:
                type: string
            required:
              - id
              - title
              - subject
              - sender_id
              - list_ids
              - segment_ids
              - categories
              - suppression_group_id
              - custom_unsubscribe_url
              - ip_pool
              - html_content
              - plain_content
              - status
          examples:
            application/json:
              id: 986724
              title: May Newsletter
              subject: 'New Products for Summer!'
              sender_id: 124451
              list_ids:
                - 110
                - 124
              segment_ids:
                - 110
              categories:
                - summer line
              suppression_group_id: 42
              custom_unsubscribe_url: ''
              ip_pool: marketing
              html_content: '<html><head><title></title></head><body><p>Check out our summer line!</p></body></html>'
              plain_content: 'Check out our summer line!'
              status: Draft
        '400':
          description: |-
            "title": "title can't be blank"
            "title": "title is too long (maximum is 100 characters)"
            "categories": "categories exceeds 10 category limit"
            "html_content": "html_content exceeds the 1MB limit"
            "plain_content": "plain_content exceeds the 1MB limit"
            "sender_id": "sender_id does not exist"
            "sender_id": "sender_id is not a verified sender identity"
            "list_ids": "list_ids do not all exist"
            "segment_ids": "segment_ids do not all exist"
            "ip_pool": "The ip pool you provided is invalid"
            "suppression_group_id": "suppression_group_id does not exist"
            "unsubscribes": "Either suppression_group_id or custom_unsubscribe_url may be set/used, but not both. Please remove one before setting the other."
            "": "The JSON you have submitted cannot be parsed."
          examples:
            application/json:
              errors:
                - field: title
                  message: "title can't be blank"
                - field: title
                  message: title is too long (maximum is 100 characters)
                - field: categories
                  message: categories exceeds 10 category limit
                - field: html_content
                  message: html_content exceeds the 1MB limit
                - field: plain_content
                  message: plain_content exceeds the 1MB limit
                - field: sender_id
                  message: sender_id does not exist
                - field: sender_id
                  message: sender_id is not a verified sender identity
                - field: list_ids
                  message: list_ids do not all exist
                - field: segment_ids
                  message: segment_ids do not all exist
                - field: ip_pool
                  message: The ip pool you provided is invalid
                - field: suppression_group_id
                  message: suppression_group_id does not exist
                - field: unsubscribes
                  message: 'Either suppression_group_id or custom_unsubscribe_url may be set/used, but not both. Please remove one before setting the other.'
                - field: null
                  message: The JSON you have submitted cannot be parsed.
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '403':
          description: '"": "You may only update a campaign when it is in draft mode."'
          schema:
            type: object
            properties: {}
          examples:
            application/json:
              errors:
                - field: null
                  message: You may only update a campaign when it is in draft mode.
        '404':
          description: '"": "not found"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: not found
      parameters:
        - type: string
          name: campaign_id
          in: query
        - type: string
          name: title
          in: formData
          required: true
          description: The title of the campaign.
        - type: string
          name: subject
          in: formData
          required: true
          description: The subject line for your campaign.
        - type: string
          name: categories
          in: formData
          required: true
          description: The categories you want to tag on this campaign.
        - type: string
          name: html_content
          in: formData
          required: true
          description: The HTML content of this campaign.
        - type: string
          name: plain_content
          in: formData
          required: true
          description: The plain content of this campaign.
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update a Campaign
      summary: ''
      description: |-
        Update a campaign. This is especially useful if you only set up the campaign using POST /campaigns, but didn't set many of the parameters.

        For more information:

        * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
      security:
        - {}
    get:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/campaign_response'
          examples:
            application/json:
              id: 986724
              title: March Newsletter
              subject: 'New Products for Spring!'
              sender_id: 124451
              list_ids:
                - 110
                - 124
              segment_ids:
                - 110
              categories:
                - spring line
              suppression_group_id: 42
              custom_unsubscribe_url: ''
              ip_pool: marketing
              html_content: '<html><head><title></title></head><body><p>Check out our spring line!</p></body></html>'
              plain_content: 'Check out our spring line!'
              status: Draft
        '401':
          description: ''
          schema:
            type: object
            properties: {}
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '404':
          description: '"": "not found"'
          examples:
            application/json:
              errors:
                - field: null
                  message: not found
      parameters:
        - type: number
          description: The id of the campaign to retrieve.
          name: campaign_id
          in: query
          required: true
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get a single campaign
      summary: ''
      description: |-
        This is a place for notes and extra information about this endpoint. It is written
        in Markdown - more info in the [documentation](/docs/designer#markdown).

        There are several special markdown helpers that automatically build tables
        and html off of your endpoint definition. You can find some examples in this content.

        Click the "Open Editor" button above to start editing this content.

        For more information:

        * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
      security:
        - {}
    delete:
      responses:
        '204':
          description: ''
          schema:
            type: 'null'
        '401':
          description: ''
          schema:
            type: object
            properties: {}
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '404':
          description: '"": "not found"'
      parameters:
        - type: string
          description: The ID of the campaign to delete.
          name: campaign_id
          in: query
          required: true
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Delete a Campaign
      summary: ''
      description: |-
        For more information:

        * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
      security:
        - {}
  '/mail/batch/{batch_id}':
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/mail_batch_id'
          examples:
            application/json:
              batch_id: HkJ5yLYULb7Rj8GKSx7u025ouWVlMgAi
        '400':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: invalid batch id
        '401':
          description: Unexpected error in API call. See HTTP response body for details.
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters:
        - type: string
          description: 'The ID you can use to associate multiple scheduled sends together, in case you might want to cancel or pause those sends.'
          pattern: '^[A-Za-z0-9]'
          name: batch_id
          in: query
          required: true
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Validate batch ID
      summary: Validate whether or not a batch id is valid
      description: "Validate whether or not a batch id is valid.\n\nIf you set the SMTPAPI header batch_id, it allows you to then associate multiple scheduled mail/send requests together with the same ID. Then at anytime up to 10 minutes before the schedule date, you can cancel all of the mail/send requests that have this batch ID by calling the Cancel Scheduled Send endpoint. \n\nMore Information:\n\n* [Scheduling Parameters > Batch ID](https://sendgrid.com/docs/API_Reference/SMTP_API/scheduling_parameters.html)"
      security:
        - {}
  /mail/batch:
    parameters: []
    post:
      responses:
        '201':
          description: ''
          schema:
            title: Generate Batch ID response
            type: object
            properties:
              batch_id:
                type: string
                pattern: "^[a-zA-Z0-9\\-\\_]"
            required:
              - batch_id
          examples:
            application/json:
              batch_id: YOUR_BATCH_ID
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Create a batch ID
      summary: Generate a new Batch ID to associate with scheduled sends
      description: "Generate a new Batch ID to associate with scheduled sends via the mail/send endpoint.\n\nIf you set the SMTPAPI header batch_id, it allows you to then associate multiple scheduled mail/send requests together with the same ID. Then at anytime up to 10 minutes before the schedule date, you can cancel all of the mail/send requests that have this batch ID by calling the Cancel Scheduled Send endpoint. \n\nMore Information:\n\n* [Scheduling Parameters > Batch ID](https://sendgrid.com/docs/API_Reference/SMTP_API/scheduling_parameters.html)"
      security:
        - {}
  /contactdb/lists:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            title: List All Lists response
            type: object
            properties:
              lists:
                type: array
                items:
                  $ref: '#/definitions/contactdb_list'
            required:
              - lists
          examples:
            application/json:
              lists:
                - id: 1
                  name: the jones
                  recipient_count: 1
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: List All Lists
      summary: Returns an empty list if you GET and no lists exist on your account.
      description: |-
        Returns an empty list if you GET and no lists exist on your account.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
    post:
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/contactdb_list'
          examples:
            application/json:
              id: 1
              name: your list name
              recipient_count: 0
        '400':
          description: |-
            "name" : "Returned if list name is a duplicate of an existing list or segment"
            "name" : "Returned if list name is not a string"
            "" : "Returned if request body is invalid JSON"
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: Returned if request body is invalid JSON
                - field: name
                  message: Returned if list name is not a string
                - field: name
                  message: Returned if list name is a duplicate of an existing list or segment
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters:
        - type: string
          name: name
          in: formData
          required: true
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Create a List
      summary: ''
      description: |-
        Create a list for your recipients.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
    delete:
      responses:
        '204':
          description: ''
          schema:
            type: 'null'
        '400':
          description: '"id" : "Returned if all list ids are not valid"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: list id was invalid
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Delete Multiple lists
      summary: ''
      description: |-
        Delete multiple lists.


        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
  /asm/suppressions/global:
    parameters: []
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              recipient_emails:
                type: array
                items:
                  type: string
          examples:
            application/json:
              recipient_emails:
                - test1@example.com
                - test2@example.com
      parameters:
        - type: string
          name: recipient_emails
          in: formData
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Add recipient addresses to the global suppression group.
      summary: ''
      description: Global Suppressions are email addresses that will not receive any emails.
      security:
        - {}
  '/asm/suppressions/global/{email_address}':
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              recipient_email:
                type: string
          examples:
            application/json:
              recipient_email: test1@example.com
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Check if a recipient address is in the global suppressions group.
      summary: ''
      description: Global Suppressions are email addresses that will not receive any emails.
      security:
        - {}
  /contactdb/recipients/count:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/contactdb_recipient_count'
          examples:
            application/json:
              recipient_count: 1234
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get a Count of Recipients
      summary: ''
      description: |-
        Get a count of the current number of recipients in your contact database.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
  /tracking_settings:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
      parameters:
        - type: string
          name: limit
          in: query
        - type: string
          name: offset
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get Tracking Settings
      summary: ''
      description: ''
      security:
        - {}
  /suppression/bounces:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                created:
                  type: number
                email:
                  type: string
                reason:
                  type: string
                status:
                  type: string
          examples:
            application/json:
              - created: 1250337600
                email: example@example.com
                reason: "550 5.1.1 The email account that you tried to reach does not exist. Please try double-checking the recipient's email address for typos or unnecessary spaces. Learn more at  https://support.google.com/mail/answer/6596 o186si2389584ioe.63 - gsmtp "
                status: 5.1.1
              - created: 1250337600
                email: example@example.com
                reason: '550 5.1.1 <testemail2@testing.com>: Recipient address rejected: User unknown in virtual alias table '
                status: 5.1.1
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters:
        - type: number
          description: Refers start of the time range in unix timestamp when a bounce was created (inclusive).
          name: start_time
          in: query
        - type: number
          description: Refers end of the time range in unix timestamp when a bounce was created (inclusive).
          name: end_time
          in: query
        - type: string
          name: Allow
          in: header
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: List all bounces
      summary: ''
      description: "Bounces are messages that are returned to the server that sent it. \n\nFor more information see: \n\n* [User Guide > Bounces](https://sendgrid.com/docs/User_Guide/Suppressions/bounces.html) for more information\n* [Glossary > Bounces](https://sendgrid.com/docs/Glossary/Bounces.html)"
      security:
        - {}
    delete:
      responses:
        '204':
          description: ''
          schema:
            type: 'null'
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters:
        - type: string
          name: delete_all
          in: formData
          description: 'This parameter allows you to delete **every** email in your bounce list. This should not be used with the emails parameter.'
        - type: string
          name: emails
          in: formData
          description: Delete multiple emails from your bounce list at the same time. This should not be used with the delete_all parameter.
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Delete bounces
      summary: ''
      description: "Bounces are messages that are returned to the server that sent it. This endpoint allows you to delete email addresses from your bounce list. \n\nFor more information see: \n\n* [User Guide > Bounces](https://sendgrid.com/docs/User_Guide/Suppressions/bounces.html) for more information\n* [Glossary > Bounces](https://sendgrid.com/docs/Glossary/Bounces.html)\n* [Classroom > List Scrubbing Guide](https://sendgrid.com/docs/Classroom/Deliver/list_scrubbing.html)\n\nNote: the 'delete_all' and 'emails' parameters should be used independently of each other as they have different purposes."
      security:
        - {}
  /subusers:
    parameters: []
    post:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/subuser_post'
          examples:
            application/json:
              username: example_subuser
              user_id: 1234
              email: example@example.com
              signup_session_token: ''
              authorization_token: ''
              credit_allocation:
                type: unlimited
        '400':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - message: username exists
                - message: unable to validate IPs at this time
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '403':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - message: you dont have permission to access this resource
        '500':
          description: ''
          schema:
            type: object
            properties: {}
          examples:
            application/json:
              errors:
                - message: unable to validate IPs at this time
      parameters:
        - type: string
          name: username
          in: formData
          required: true
          description: The username for this subuser.
        - type: string
          name: email
          in: formData
          required: true
          description: The email address of the subuser.
        - type: string
          name: password
          in: formData
          required: true
          description: The password this subuser will use when logging into SendGrid.
        - type: string
          name: ips
          in: formData
          required: true
          description: The IP addresses that should be assigned to this subuser.
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Create Subuser
      summary: ''
      description: |-
        This endpoint allows you to retrieve a list of all of your subusers. You can choose to retrieve specific subusers as well as limit the results that come back from the API.

        For more information about Subusers:

        * [User Guide > Subusers](https://sendgrid.com/docs/User_Guide/Settings/Subusers/index.html)
        * [Classroom > How do I add more subusers to my account?](https://sendgrid.com/docs/Classroom/Basics/Account/how_do_i_add_more_subusers_to_my_account.html)
      security:
        - {}
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/subuser'
          examples:
            application/json:
              - disabled: false
                email: example@example.com
                id: 1234
                username: example_subuser
              - disabled: false
                email: example2@example.com
                id: 1234
                username: example_subuser2
        '401':
          description: Unexpected error in API call. See HTTP response body for details.
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters:
        - type: string
          description: The username of this subuser.
          name: username
          in: query
        - type: number
          description: The number of results you would like to get in each request.
          name: limit
          in: query
        - type: number
          description: The number of subusers to skip.
          name: offset
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: List all Subusers
      summary: ''
      description: |-
        This endpoint allows you to retrieve a list of all of your subusers. You can choose to retrieve specific subusers as well as limit the results that come back from the API.

        For more information about Subusers:

        * [User Guide > Subusers](https://sendgrid.com/docs/User_Guide/Settings/Subusers/index.html)
        * [Classroom > How do I add more subusers to my account?](https://sendgrid.com/docs/Classroom/Basics/Account/how_do_i_add_more_subusers_to_my_account.html)
      security:
        - {}
  '/subusers/{subuser_name}/ips':
    parameters: []
    put:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              ips:
                type: array
                items:
                  type: string
                  format: ipv4
          examples:
            application/json:
              ips:
                - 127.0.0.1
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters:
        - type: string
          name: subuser_name
          in: query
          required: true
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update IPs assigned to a subuser
      summary: ''
      description: "Each subuser should be assigned to an IP address, from which all of this subuser's mail will be sent. Often, this is the same IP as the parent account, but each subuser can have their own, or multiple, IP addresses as well. \n\nMore information:\n\n* [How to request more IPs](https://sendgrid.com/docs/Classroom/Basics/Account/adding_an_additional_dedicated_ip_to_your_account.html)\n* [IPs can be whitelabeled](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/ips.html)"
  '/subusers/{subuser_name}':
    parameters: []
    patch:
      responses:
        '204':
          description: ''
          schema:
            type: object
            properties: {}
        '400':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - message: invalid username
                - message: no fields provided
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '500':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - message: unable to enable user
      parameters:
        - type: string
          name: disabled
          in: formData
          description: 'Whether or not this subuser is disabled. True means disabled, False means enabled.'
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Enable/disable a subuser
      summary: ''
      description: |-
        This endpoint allows you to enable or disable a subuser.

        For more information about Subusers:

        * [User Guide > Subusers](https://sendgrid.com/docs/User_Guide/Settings/Subusers/index.html)
        * [Classroom > How do I add more subusers to my account?](https://sendgrid.com/docs/Classroom/Basics/Account/how_do_i_add_more_subusers_to_my_account.html)
      security:
        - {}
    delete:
      responses:
        '204':
          description: ''
          schema:
            type: object
            properties: {}
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters:
        - type: string
          description: The name of the subuser.
          name: subuser_name
          in: query
          required: true
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Delete a subuser
      summary: ''
      description: |-
        This endpoint allows you to delete a subuser. This is a permanent action, once deleted a subuser cannot be retrieved.

        For more information about Subusers:

        * [User Guide > Subusers](https://sendgrid.com/docs/User_Guide/Settings/Subusers/index.html)
        * [Classroom > How do I add more subusers to my account?](https://sendgrid.com/docs/Classroom/Basics/Account/how_do_i_add_more_subusers_to_my_account.html)
      security:
        - {}
  '/subusers/{subuser_name}/monitor':
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/monitor'
          examples:
            application/json:
              email: example@example.com
              frequency: 500
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '404':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: No monitor settings for this user
      parameters:
        - type: string
          description: The name of the subuser for which to retrieve monitor settings.
          name: subuser_name
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Retrieve monitor settings for a subuser
      summary: ''
      description: Subuser monitor settings allow you to receive a sample of an outgoing message by a specific customer at a specific frequency of emails.
      security:
        - {}
    delete:
      responses:
        '204':
          description: ''
          schema:
            type: object
            properties: {}
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '404':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: No monitor settings for this user
      parameters:
        - type: string
          description: 'The name of the subuser from whom you would like to delete the monitor settings. '
          name: subuser_name
          in: query
          required: true
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Delete monitor settings
      summary: ''
      description: Subuser monitor settings allow you to receive a sample of an outgoing message by a specific customer at a specific frequency of emails.
    put:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/monitor'
          examples:
            application/json:
              email: example@example.com
              frequency: 500
        '400':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: email
                  message: Email is required
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update Monitor Settings for a subuser
      summary: ''
      description: Subuser monitor settings allow you to receive a sample of an outgoing message by a specific customer at a specific frequency of emails.
      security:
        - {}
    post:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/monitor'
          examples:
            application/json:
              email: example@example.com
              frequency: 50000
        '400':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: User already has a monitor
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Create monitor settings
      summary: ''
      description: Subuser monitor settings allow you to receive a sample of an outgoing message by a specific customer at a specific frequency of emails.
      security:
        - {}
  '/contactdb/segments/{segment_id}/recipients':
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            title: List Recipients On a Segment response
            type: object
            properties:
              recipients:
                type: array
                items:
                  type: object
                  properties: {}
            required:
              - recipients
        '400':
          description: |-
            "page" : "Returned if page is not a valid integer"
            "page" : "Returned if page is less than 1"
            "page_size" : "Returned if page_size is not a valid integer"
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '404':
          description: |-
            "segment_id" : "Returned if segment_id is not valid"
            "segment_id" : "Returned if segment_id does not exist"
      parameters:
        - type: string
          name: page
          in: query
        - type: string
          name: page_size
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: List Recipients On a Segment
      summary: ''
      description: |-
        List all of the recipients in a segment.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
  /whitelabel/ips:
    parameters: []
    post:
      responses:
        '201':
          description: ''
          schema:
            type: object
            properties:
              id:
                type: integer
              ip:
                type: string
              rnds:
                type: string
              users:
                type: array
                items: {}
              subdomain:
                type: string
              domain:
                type: string
              valid:
                type: boolean
              legacy:
                type: boolean
              a_record:
                type: object
                properties:
                  valid:
                    type: boolean
                  type:
                    type: string
                  host:
                    type: string
                  data:
                    type: string
          examples:
            application/json:
              id: 123
              ip: 192.168.1.2
              rnds: o1.email.example.com
              users: []
              subdomain: email
              domain: example.com
              valid: true
              legacy: false
              a_record:
                valid: true
                type: a
                host: o1.email.example.com
                data: 192.168.1.2
      parameters:
        - type: string
          name: ip
          in: formData
          description: ''
        - type: string
          name: subdomain
          in: formData
          description: ''
        - type: string
          name: domain
          in: formData
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Create an IP
      summary: ''
      description: ''
      security:
        - {}
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                ip:
                  type: string
                rdns:
                  type: string
                users:
                  type: array
                  items:
                    properties:
                      user_id:
                        type: number
                      username:
                        type: string
                subdomain:
                  type: string
                domain:
                  type: string
                a_record:
                  type: object
                  properties:
                    valid:
                      type: boolean
                    type:
                      type: string
                    host:
                      type: string
                    data:
                      type: string
                valid:
                  type: boolean
                legacy:
                  type: boolean
          examples:
            application/json:
              - id: 1
                ip: 192.168.1.1
                rdns: o1.email.example.com
                users:
                  - username: john@example.com
                    user_id: 7
                  - username: jane@example.com
                    user_id: 8
                subdomain: email
                domain: example.com
                valid: true
                legacy: false
                a_record:
                  valid: true
                  type: a
                  host: o1.email.example.com
                  data: 192.168.1.1
              - id: 2
                ip: 192.168.1.2
                rnds: o2.email.example.com
                users:
                  - username: john@example.com
                    user_id: 7
                  - username: jane@example2.com
                    user_id: 9
                subdomain: email
                domain: example.com
                valid: true
                legacy: false
                a_record:
                  valid: true
                  type: a
                  host: o2.email.example.com
                  data: 192.168.1.2
      parameters:
        - type: string
          name: limit
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: List all IPs
      summary: ''
      description: ''
      security:
        - {}
  /whitelabel/domains/default:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            title: Default Domain response
            type: object
            properties:
              id:
                type: integer
                description: The ID of this domain whitelabel.
              domain:
                type: string
                description: The domain that this whitelabel was created for.
              subdomain:
                type: string
                description: The subdomain that was used to create this whitelabel.
              username:
                type: string
                description: The username of the account that this whitelabel is associated with.
              user_id:
                type: integer
                description: The user_id of the account that this whitelabel is associated with.
              ips:
                type: array
                description: The IP address that are included in the SPF record of this domain whitelabel.
                items:
                  type: string
              custom_spf:
                type: boolean
                description: Indicates if this whitelabel uses custom SPF.
              default:
                type: boolean
                description: Indicates if this is the default whitelabel.
              legacy:
                type: boolean
                description: Indicates if this whitelabel was created using the legacy whitelabel tool.
              automatic_security:
                type: boolean
                description: Indicates if this whitelabel uses automatic security.
              valid:
                type: boolean
                description: Indicates if this whitelabel is valid.
              dns:
                type: object
                properties: {}
            required:
              - id
              - domain
              - subdomain
              - username
              - user_id
              - ips
              - custom_spf
              - default
              - legacy
              - automatic_security
              - valid
              - dns
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Default Domain
      summary: ''
      description: |-
        **This endpoint allows you to retrieve the default whitelabel for a domain.**

        A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

        For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)

        ## URI Parameters
        | URI Parameter   | Type   | Description  |
        |---|---|---|
        | domain | string  |The domain to find a default domain whitelabel for. |
      security:
        - {}
  /mail_settings:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  type: object
                  properties:
                    title:
                      type: string
                    enabled:
                      type: boolean
                    name:
                      type: string
                    description:
                      type: string
          examples:
            application/json:
              result:
                - title: Address Whitelist
                  enabled: false
                  name: address_whitelist
                  description: Address / domains that should never have email suppressed.
                - title: BCC
                  enabled: false
                  name: bcc
                  description: Automatically BCC an address for every e-mail sent.
                - title: Bounce Purge
                  enabled: false
                  name: bounce_purge
                  description: Allows you to automatically purge bounce records from SendGrid after a specified number of days.
                - title: Event Notification
                  enabled: true
                  name: event_notify
                  description: 'Controls notifications for events, such as bounces, clicks, and opens.'
                - title: Footer
                  enabled: false
                  name: footer
                  description: Allows you to add a custom footer to outgoing email.
                - title: Forward Bounce
                  enabled: true
                  name: forward_bounce
                  description: Allows you to forward bounces to a specific email address.
                - title: Forward Spam
                  enabled: false
                  name: forward_spam
                  description: Allows for a copy of spam reports to be forwarded to an email address.
                - title: Legacy Email Template
                  enabled: true
                  name: template
                  description: Allows you to customize your outgoing HTML emails.
                - title: Plain Content
                  enabled: false
                  name: plain_content
                  description: Convert your plain text emails to HTML.
                - title: Spam Checker
                  enabled: true
                  name: spam_check
                  description: Check outbound messages for spam content.
      parameters:
        - type: string
          name: limit
          in: query
        - type: string
          name: offset
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get all mail settings
      summary: ''
      description: ''
      security:
        - {}
  '/asm/groups/{unsubscribe_group_id}':
    parameters: []
    patch:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              id:
                type: number
              name:
                type: string
              description:
                type: string
              last_email_sent_at:
                type:
                  - string
                  - 'null'
                _isOpen: true
              is_default:
                type: boolean
          examples:
            application/json:
              id: 1234
              name: A group name
              description: A group description.
              last_email_sent_at: null
              is_default: true
      parameters:
        - type: string
          name: id
          in: formData
          description: ''
        - type: string
          name: name
          in: formData
          description: ''
        - type: string
          name: description
          in: formData
          description: ''
        - type: string
          name: is_default
          in: formData
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update unsubscribe groups
      summary: ''
      description: ''
      security:
        - {}
  /templates:
    parameters: []
    post:
      responses:
        '201':
          description: ''
          schema:
            type: object
            properties:
              templates:
                type: array
                items:
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    versions:
                      type: array
                      items:
                        properties: {}
          examples:
            application/json:
              id: 733ba07f-ead1-41fc-933a-3976baa23716
              name: example_name
              versions: []
      parameters:
        - type: string
          name: name
          in: formData
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Create a template.
      summary: ''
      description: ''
      security:
        - {}
    get:
      responses: {}
      parameters: []
      consumes:
        - application/json
      produces: []
      operationId: Retrieve all templates.
      summary: ''
      description: ''
      security:
        - {}
  '/whitelabel/ips/{id}/validate':
    parameters: []
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              id:
                type: integer
              valid:
                type: boolean
              validation_results:
                type: object
                properties:
                  a_record:
                    type: object
                    properties:
                      valid:
                        type: boolean
                      reason:
                        type: 'null'
          examples:
            application/json:
              id: 1
              valid: true
              validation_results:
                a_record:
                  valid: true
                  reason: null
        '400':
          description: Unexpected error in API call. See HTTP response body for details.
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Validate an IP
      summary: ''
      description: ''
      security:
        - {}
  /categories/stats/sums:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              date:
                type: string
              stats:
                type: array
                items:
                  type: object
                  properties: {}
          examples:
            application/json:
              date: '2009-08-15'
              stats: []
      parameters:
        - type: string
          name: sort_by_metric
          in: query
        - type: string
          name: sort_by_direction
          in: query
        - type: string
          name: start_date
          in: query
          required: true
        - type: string
          name: end_date
          in: query
        - type: string
          name: limit
          in: query
        - type: string
          name: offset
          in: query
        - type: string
          name: aggregated_by
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: "Get sums of a category's stats [Needs: Stats object defined, has category ID?]"
      summary: ''
      description: ''
      security:
        - {}
  /subusers/stats/sums:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              date:
                type: string
              stats:
                type: array
                items:
                  properties: {}
          examples:
            application/json:
              date: '2015-10-11'
              stats: []
      parameters:
        - type: string
          name: sort_by_direction
          in: query
        - type: string
          name: start_date
          in: query
        - type: string
          name: end_date
          in: query
        - type: string
          name: limit
          in: query
        - type: string
          name: offset
          in: query
        - type: string
          name: aggregated_by
          in: query
        - type: string
          name: sort_by_metric
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: ' Gets the total sums of each email statistic metric for all subusers over the given date range.'
      summary: ''
      description: ''
      security:
        - {}
  /user/account:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            title: GET User Account response
            type: object
            properties:
              type:
                type: string
                description: The type of account for this user.
                enum:
                  - free
                  - paid
              reputation:
                type: number
                description: The sender reputation for this user.
            required:
              - type
              - reputation
          examples:
            application/json:
              reputation: 100
              type: paid
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: "Get a user's account information."
      summary: ''
      description: "Your user's account information includes the user's account type and reputation."
      security:
        - {}
  /whitelabel/links/subuser:
    parameters: []
    delete:
      responses:
        '204':
          description: ''
      parameters:
        - type: string
          name: username
          in: query
      consumes:
        - application/json
      produces: []
      operationId: Disassociate Link
      summary: |-
        Link Whitelabels can be associated with subusers via parent accounts.  This functionality allows
        subusers to send mail o
      description: |-
        Link Whitelabels can be associated with subusers via parent accounts.  This functionality allows
        subusers to send mail off their parent's Whitelabels.  To associate a Whitelabel, the parent account
        must first create a Whitelabel and validate it.  Then the parent may associate the Whitelabel in
        subuser management.
      security:
        - {}
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              id:
                type: integer
              domain:
                type: string
              subdomain:
                type: string
              username:
                type: string
              user_id:
                type: integer
              default:
                type: boolean
              valid:
                type: boolean
              legacy:
                type: boolean
              dns:
                type: object
                properties:
                  domain_cname:
                    type: object
                    properties:
                      valid:
                        type: boolean
                      type:
                        type: string
                      host:
                        type: string
                      data:
                        type: string
                  owner_cname:
                    type: object
                    properties:
                      valid:
                        type: boolean
                      type:
                        type: string
                      host:
                        type: string
                      data:
                        type: string
          examples:
            application/json:
              id: 1
              domain: example.com
              subdomain: mail
              username: john@example.com
              user_id: 7
              default: false
              valid: true
              legacy: false
              dns:
                domain_cname:
                  valid: true
                  type: cname
                  host: mail.example.com
                  data: sendgrid.net
                owner_cname:
                  valid: true
                  type: cname
                  host: 7.example.com
                  data: sendgrid.net
      parameters:
        - type: string
          name: username
          in: query
          required: true
      consumes:
        - application/json
      produces:
        - application/json
      operationId: List Associated Link
      summary: ''
      description: ''
      security:
        - {}
  /categories:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                category:
                  type: string
          examples:
            application/json:
              - category: category 1
              - category: category 2
      parameters:
        - type: string
          name: limit
          in: query
        - type: string
          name: sort_by
          in: query
        - type: string
          name: order
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get categories
      summary: ''
      description: ''
      security:
        - {}
  /browsers/stats:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties: {}
      parameters:
        - type: string
          name: start_date
          in: query
        - type: string
          name: end_date
          in: query
        - type: string
          name: limit
          in: query
        - type: string
          name: offset
          in: query
        - type: string
          name: aggregated_by
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: 'Gets email statistics by browser. '
      summary: ''
      description: ''
      security:
        - {}
  /user/webhooks/parse/stats:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                date:
                  type: string
                stats:
                  type: array
                  items:
                    properties:
                      metrics:
                        type: object
                        properties:
                          received:
                            type: number
          examples:
            application/json:
              - date: '2015-10-11'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-10-12'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-10-13'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-10-14'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-10-15'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-10-16'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-10-17'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-10-18'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-10-19'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-10-20'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-10-21'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-10-22'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-10-23'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-10-24'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-10-25'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-10-26'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-10-27'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-10-28'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-10-29'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-10-30'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-10-31'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-11-01'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-11-02'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-11-03'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-11-04'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-11-05'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-11-06'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-11-07'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-11-08'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-11-09'
                stats:
                  - metrics:
                      received: 0
              - date: '2015-11-10'
                stats:
                  - metrics:
                      received: 0
      parameters:
        - type: string
          name: limit
          in: query
        - type: string
          name: offset
          in: query
        - type: string
          name: aggregated_by
          in: query
        - type: string
          name: start_date
          in: query
        - type: string
          name: end_date
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Gets statistics for Parse Webhook usage.
      summary: ''
      description: ''
      security:
        - {}
  /mail_settings/footer:
    parameters: []
    patch:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/mail_settings_footer'
          examples:
            application/json:
              enabled: true
              html_content: Example HTML content
              plain_content: Example plain content
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update footer mail settings
      summary: ''
      description: ''
      security:
        - {}
    get:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/mail_settings_footer'
          examples:
            application/json:
              enabled: true
              html_content: Example HTML content
              plain_content: Example plain content
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: 'Get footer mail settings [params can be null?]'
      summary: ''
      description: ''
      security:
        - {}
  /mail_settings/template:
    parameters: []
    patch:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              enabled:
                type: boolean
              html_content:
                type: string
          examples:
            application/json:
              enabled: false
              html_content: |
                <p><% body %>Example</p>
      parameters:
        - type: string
          name: enabled
          in: formData
          description: ''
        - type: string
          name: html_content
          in: formData
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update template mail settings
      summary: ''
      description: ''
      security:
        - {}
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              enabled:
                type: boolean
              html_content:
                type: string
          examples:
            application/json:
              enabled: false
              html_content: |
                <p><% body %>Example</p>
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get template mail settings
      summary: ''
      description: ''
      security:
        - {}
  /partner_settings:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              result:
                type: array
                _isOpen: true
                items:
                  type: object
                  properties:
                    title:
                      type: string
                    enabled:
                      type: boolean
                    name:
                      type: string
                    description:
                      type: string
          examples:
            application/json:
              result:
                - title: Partner title
                  enabled: true
                  name: partner_name
                  description: A description of a partner.
      parameters:
        - type: string
          name: limit
          in: query
        - type: string
          name: undefined
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get partner settings
      summary: ''
      description: ''
      security:
        - {}
  '/suppression/bounces/{email}':
    parameters: []
    delete:
      responses:
        '204':
          description: ''
          schema:
            type: object
            properties: {}
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters:
        - type: string
          description: The email address you would like to remove from the bounce list.
          format: email
          name: email_address
          in: query
          required: true
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Delete a bounce
      summary: ''
      description: "Bounces are messages that are returned to the server that sent it. This endpoint allows you to delete a single email addresses from your bounce list. \n\nFor more information see: \n\n* [User Guide > Bounces](https://sendgrid.com/docs/User_Guide/Suppressions/bounces.html) for more information\n* [Glossary > Bounces](https://sendgrid.com/docs/Glossary/Bounces.html)\n* [Classroom > List Scrubbing Guide](https://sendgrid.com/docs/Classroom/Deliver/list_scrubbing.html)"
      security:
        - {}
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                created:
                  type: integer
                email:
                  type: string
                reason:
                  type: string
                status:
                  type: string
          examples:
            application/json:
              - created: 1443651125
                email: bounce1@test.com
                reason: "550 5.1.1 The email account that you tried to reach does not exist. Please try double-checking the recipient's email address for typos or unnecessary spaces. Learn more at  https://support.google.com/mail/answer/6596 o186si2389584ioe.63 - gsmtp "
                status: 5.1.1
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get a Bounce
      summary: ''
      description: ''
      security:
        - {}
  /whitelabel/links:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                domain:
                  type: string
                subdomain:
                  type: string
                username:
                  type: string
                user_id:
                  type: integer
                default:
                  type: boolean
                valid:
                  type: boolean
                legacy:
                  type: boolean
                dns:
                  type: object
                  properties:
                    domain_cname:
                      type: object
                      properties:
                        valid:
                          type: boolean
                        type:
                          type: string
                        host:
                          type: string
                        data:
                          type: string
                    owner_cname:
                      type: object
                      properties:
                        valid:
                          type: boolean
                        type:
                          type: string
                        host:
                          type: string
                        data:
                          type: string
          examples:
            application/json:
              - id: 1
                domain: example.com
                subdomain: mail
                username: john@example.com
                user_id: 7
                default: true
                valid: true
                legacy: false
                dns:
                  domain_cname:
                    valid: true
                    type: cname
                    host: mail.example.com
                    data: sendgrid.net
                  owner_cname:
                    valid: true
                    type: cname
                    host: 7.example.com
                    data: sendgrid.net
              - id: 2
                domain: example2.com
                subdomain: news
                username: john@example.com
                user_id: 8
                default: false
                valid: false
                legacy: false
                dns:
                  domain_cname:
                    valid: true
                    type: cname
                    host: news.example2.com
                    data: sendgrid.net
                  owner_cname:
                    valid: false
                    type: cname
                    host: 8.example2.com
                    data: sendgrid.net
      parameters:
        - type: string
          name: limit
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: List all Links
      summary: ''
      description: ''
      security:
        - {}
    post:
      responses:
        '201':
          description: ''
          schema:
            type: object
            properties:
              id:
                type: integer
              domain:
                type: string
              subdomain:
                type: string
              username:
                type: string
              user_id:
                type: integer
              default:
                type: boolean
              valid:
                type: boolean
              legacy:
                type: boolean
              dns:
                type: object
                properties:
                  domain_cname:
                    type: object
                    properties:
                      valid:
                        type: boolean
                      type:
                        type: string
                      host:
                        type: string
                      data:
                        type: string
                  owner_cname:
                    type: object
                    properties:
                      valid:
                        type: boolean
                      type:
                        type: string
                      host:
                        type: string
                      data:
                        type: string
          examples:
            application/json:
              id: 1
              domain: example.com
              subdomain: mail
              username: john@example.com
              user_id: 7
              default: false
              valid: true
              legacy: false
              dns:
                domain_cname:
                  valid: true
                  type: cname
                  host: mail.example.com
                  data: sendgrid.net
                owner_cname:
                  valid: true
                  type: cname
                  host: 7.example.com
                  data: sendgrid.net
      parameters:
        - type: number
          description: Number of domains to return. Defaults to 50.
          name: limit
          in: query
        - type: number
          description: Paging offset. Defaults to 0.
          name: offset
          in: query
        - type: string
          name: domain
          in: formData
          description: ''
        - type: string
          name: subdomain
          in: formData
          description: ''
        - type: string
          name: default
          in: formData
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Create a Link
      summary: ''
      description: |-
        This is a place for notes and extra information about this endpoint. It is written
        in Markdown - more info in the [documentation](/docs/designer#markdown).

        There are several special markdown helpers that automatically build tables
        and html off of your endpoint definition. You can find some examples in this content.

        Click the "Open Editor" button above to start editing this content.
      security:
        - {}
  /tracking_settings/google_analytics:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              enabled:
                type: boolean
              utm_campaign:
                type: string
              utm_content:
                type: string
              utm_medium:
                type: string
              utm_source:
                type: string
              utm_term:
                type: string
          examples:
            application/json:
              enabled: true
              utm_campaign: ''
              utm_content: lotsandlotsofcontent
              utm_medium: ''
              utm_source: ''
              utm_term: ''
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get Google Analytics Settings
      summary: ''
      description: ''
      security:
        - {}
    patch:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              enabled:
                type: boolean
              utm_campaign:
                type: string
              utm_content:
                type: string
              utm_medium:
                type: string
              utm_source:
                type: string
              utm_term:
                type: string
          examples:
            application/json:
              enabled: false
              utm_campaign: ''
              utm_content: lotsandlotsofcontent
              utm_medium: ''
              utm_source: ''
              utm_term: ''
      parameters:
        - type: string
          name: enabled
          in: formData
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update Google Analytics Settings
      summary: ''
      description: ''
      security:
        - {}
  /user/scheduled_sends:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/user_scheduled_send_status'
          examples:
            application/json:
              - batch_id: YzJlNTkxMmEtOWM3Ny0xMWU1LTkwM2UtNTI1NDAwNmQzZmYzLTVlM2NhNWIwYg
                status: cancel
              - batch_id: UtNTI1NDAwNmQzZmYzLTVlM2NhNWIwYgYzJlNTkxMmEtOWM3Ny0xMWU1LTkwM2
                status: cancel
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get all scheduled sends
      summary: ''
      description: |-
        Get all cancel/paused scheduled send information.

        The Cancel Scheduled Sends feature allows the customer to cancel a scheduled send based on a Batch ID included in the SMTPAPI header.Scheduled sends cancelled less than 10 minutes before the scheduled time are not guaranteed to be cancelled.
      security:
        - {}
    post:
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/user_scheduled_send_status'
        '400':
          description: |-
            "" : "max limit reached"
            "batch_id" : "invalid batch id"
            "batch_id" : "a status for this batch id exists, try PATCH to update the status"
          schema:
            type: object
            properties: {}
          examples:
            application/json:
              errors:
                - field: null
                  message: max limit reached
                - field: batch_id
                  message: invalid batch id
                - field: batch_id
                  message: 'a status for this batch id exists, try PATCH to update the status'
        '401':
          description: ''
          schema:
            type: object
            properties: {}
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters:
        - type: string
          name: batch_id
          in: formData
          required: true
          description: The batch ID is the identifier that your scheduled mail sends share.
        - type: string
          name: status
          in: formData
          required: true
          description: 'The status of the send you would like to implement. This can be pause or cancel. To delete a pause or cancel status see DELETE /v3/user/scheduled_sends/{batch_id}'
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Cancel or pause a scheduled send
      summary: |-
        Cancel or pause a scheduled send. If the maximum number of cancellations/pauses are added, HTTP 400 will
        be returned.
      description: |-
        Cancel or pause a scheduled send. If the maximum number of cancellations/pauses are added, HTTP 400 will
        be returned.

        The Cancel Scheduled Sends feature allows the customer to cancel a scheduled send based on a Batch ID included in the SMTPAPI header.Scheduled sends cancelled less than 10 minutes before the scheduled time are not guaranteed to be cancelled.
      security:
        - {}
  /mail_settings/plain_content:
    parameters: []
    patch:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/mail_settings::patch'
          examples:
            application/json:
              enabled: false
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update plain content mail settings
      summary: ''
      description: ''
      security:
        - {}
    get:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/mail_settings::patch'
          examples:
            application/json:
              enabled: false
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get plain content mail settings
      summary: ''
      description: ''
      security:
        - {}
  /categories/stats:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                date:
                  type: string
                stats:
                  type: array
                  items:
                    properties:
                      type:
                        type: string
                      name:
                        type: string
                      metrics:
                        type: object
                        properties:
                          blocks:
                            type: number
                          bounce_drops:
                            type: number
                          bounces:
                            type: number
                          clicks:
                            type: number
                          deferred:
                            type: number
                          delivered:
                            type: number
                          invalid_emails:
                            type: number
                          opens:
                            type: number
                          processed:
                            type: number
                          requests:
                            type: number
                          spam_report_drops:
                            type: number
                          spam_reports:
                            type: number
                          unique_clicks:
                            type: number
                          unique_opens:
                            type: number
                          unsubscribe_drops:
                            type: number
                          unsubscribes:
                            type: number
          examples:
            application/json:
              - date: '2015-10-01'
                stats:
                  - type: category
                    name: docs
                    metrics:
                      blocks: 0
                      bounce_drops: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      invalid_emails: 0
                      opens: 0
                      processed: 0
                      requests: 0
                      spam_report_drops: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
                      unsubscribe_drops: 0
                      unsubscribes: 0
                  - type: category
                    name: mattscategory
                    metrics:
                      blocks: 0
                      bounce_drops: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      invalid_emails: 0
                      opens: 0
                      processed: 0
                      requests: 0
                      spam_report_drops: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
                      unsubscribe_drops: 0
                      unsubscribes: 0
              - date: '2015-11-01'
                stats:
                  - type: category
                    name: docs
                    metrics:
                      blocks: 0
                      bounce_drops: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      invalid_emails: 0
                      opens: 0
                      processed: 0
                      requests: 0
                      spam_report_drops: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
                      unsubscribe_drops: 0
                      unsubscribes: 0
                  - type: category
                    name: mattscategory
                    metrics:
                      blocks: 0
                      bounce_drops: 0
                      bounces: 0
                      clicks: 0
                      deferred: 0
                      delivered: 0
                      invalid_emails: 0
                      opens: 0
                      processed: 0
                      requests: 0
                      spam_report_drops: 0
                      spam_reports: 0
                      unique_clicks: 0
                      unique_opens: 0
                      unsubscribe_drops: 0
                      unsubscribes: 0
      parameters:
        - type: string
          name: start_date
          in: query
          required: true
        - type: string
          name: end_date
          in: query
        - type: string
          name: categories
          in: query
          required: true
        - type: string
          name: limit
          in: query
        - type: string
          name: offset
          in: query
        - type: string
          name: aggregated_by
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Category Stats provide all of your user’s email statistics for your categories.
      summary: ''
      description: ''
      security:
        - {}
  '/whitelabel/links/{id}/validate':
    parameters: []
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              id:
                type: integer
              valid:
                type: boolean
              validation_results:
                type: object
                properties:
                  domain_cname:
                    type: object
                    properties:
                      valid:
                        type: boolean
                      reason:
                        type: string
                  owner_cname:
                    type: object
                    properties:
                      valid:
                        type: boolean
                      reason:
                        type: 'null'
          examples:
            application/json:
              id: 1
              valid: true
              validation_results:
                domain_cname:
                  valid: false
                  reason: 'Expected CNAME to match "sendgrid.net." but found "example.com.".'
                owner_cname:
                  valid: true
                  reason: null
        '400':
          description: Unexpected error in API call. See HTTP response body for details.
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Validate a Link
      summary: ''
      description: ''
      security:
        - {}
  '/clients/{client_type}/stats':
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/stats'
      parameters:
        - type: string
          name: start_date
          in: query
        - type: string
          name: end_date
          in: query
        - type: string
          name: aggregated_by
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Retrieve stats by a specific client type
      summary: Gets email statistics by a single client type.
      description: Gets email statistics by a single client type.
      security:
        - {}
  /ips/assigned:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            title: List all assigned IPs response
            type: object
            properties:
              ip:
                type: string
              pools:
                type: array
                items:
                  type: string
              warmup:
                type: boolean
              start_date:
                type: integer
                format: int64
            required:
              - ip
              - pools
              - warmup
              - start_date
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: List all assigned IPs
      summary: See only assigned IPs.
      description: Retrieve a list of your IP addresses.
      security:
        - {}
  /whitelabel/domains/subuser:
    parameters: []
    delete:
      responses:
        '204':
          description: ''
      parameters: []
      consumes:
        - application/json
      produces: []
      operationId: Disassociate Domain
      summary: |-
        Domain Whitelabels can be associated with subusers via parent accounts.  This functionality allows
        subusers to send mail
      description: |-
        **This endpoint allows you to disassociate a specific whitelabel from a subuser.**

        A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

        Domain whitelabels can be associated with (i.e. assigned to) subusers from a parent account. This functionality allows subusers to send mail using their parent's whitelabels. To associate a whitelabel with a subuser, the parent account must first create the whitelabel and validate it. The the parent may then associate the whitelabel via the subuser management tools.

        For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)

        ## URI Parameters
        | URI Parameter   | Type  | Required?  | Description  |
        |---|---|---|---|
        | username | string  | required  | Username for the subuser to find associated whitelabels for. |
      security:
        - {}
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              id:
                type: integer
                description: The ID of the domain whitelabel.
              domain:
                type: string
                description: The domain that this whitelabel was created for.
              subdomain:
                type: string
                description: The subdomain that was used to create this whitelabel.
              username:
                type: string
                description: The username of the account that this whitelabel is associated with.
              user_id:
                type: integer
                description: The user_id of the account that this whitelabel is associated with.
              ips:
                type: array
                description: The IPs that are included in the SPF record of this whitelabel.
                items: {}
              custom_spf:
                type: boolean
                description: Indicates if this whitelabel uses custom SPF.
              default:
                type: boolean
                description: Indicates if this is the default whitelabel.
              legacy:
                type: boolean
                description: Indicates if this whitelabel was created using the legacy whitelabel tool.
              automatic_security:
                type: boolean
                description: Indicates if this whitelabel uses automated security.
              valid:
                type: boolean
                description: Indicates if this is a valid whitelabel.
              dns:
                type: object
                properties:
                  mail_server:
                    type: object
                    properties:
                      host:
                        type: string
                      type:
                        type: string
                      data:
                        type: string
                      valid:
                        type: boolean
                  subdomain_spf:
                    type: object
                    properties:
                      host:
                        type: string
                      type:
                        type: string
                      data:
                        type: string
                      valid:
                        type: boolean
                  domain_spf:
                    type: object
                    properties:
                      host:
                        type: string
                      type:
                        type: string
                      data:
                        type: string
                      valid:
                        type: boolean
                  dkim:
                    type: object
                    properties:
                      host:
                        type: string
                      type:
                        type: string
                      data:
                        type: string
                      valid:
                        type: boolean
          examples:
            application/json:
              id: 1
              domain: example.com
              subdomain: mail
              username: mail@example.com
              user_id: 7
              ips: []
              custom_spf: true
              default: false
              legacy: false
              automatic_security: false
              valid: false
              dns:
                mail_server:
                  host: mail.example.com
                  type: mx
                  data: sendgrid.net
                  valid: false
                subdomain_spf:
                  host: mail.example.com
                  type: txt
                  data: 'v=spf1 ip4:192.168.1.1 ip4:192.168.0.1 -all'
                  valid: false
                domain_spf:
                  host: example.com
                  type: txt
                  data: 'v=spf1 include:mail.example.com -all'
                  valid: false
                dkim:
                  host: s1._domainkey.example.com
                  type: txt
                  data: k=rsa; t=s; p=publicKey
                  valid: false
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: List Associated Domain
      summary: ''
      description: |-
        **This endpoint allows you to retrieve all of the whitelabels that have been assigned to a specific subuser.**

        A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

        Domain whitelabels can be associated with (i.e. assigned to) subusers from a parent account. This functionality allows subusers to send mail using their parent's whitelabels. To associate a whitelabel with a subuser, the parent account must first create the whitelabel and validate it. The the parent may then associate the whitelabel via the subuser management tools.

        For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)

        ## URI Parameters
        | URI Parameter   | Type  | Description  |
        |---|---|---|
        | username | string  | Username of the subuser to find associated whitelabels for. |
      security:
        - {}
  '/campaigns/{campaign_id}/schedules/now':
    parameters: []
    post:
      responses:
        '201':
          description: ''
          schema:
            title: Send a Campaign response
            type: object
            properties:
              id:
                type: integer
                format: int64
              status:
                type: string
            required:
              - id
              - status
          examples:
            application/json:
              id: 1234
              status: Scheduled
        '400':
          description: |-
            "subject": "subject can't be blank"
            "sender_id": "sender_id can't be blank"
            "plain_content": "plain_content can't be blank, please provide plain text or html content"
            "list_ids": "You must select at least 1 segment or 1 list to send to."
            "unsubscribe_tag": "An [unsubscribe] tag in both your html and plain content is required to send a campaign."
            "suppression_group_id": "Either a suppression_group_id or custom_unsubscribe_url is required to send a campaign."
            "": "You do not have enough credits to send this campaign. Upgrade your plan to send more: https://app.sendgrid.com/settings/billing"
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: subject
                  message: "subject can't be blank"
                - field: sender_id
                  message: "sender_id can't be blank"
                - field: plain_content
                  message: "plain_content can't be blank, please provide plain text or html content"
                - field: list_id
                  message: You must select at least 1 segment or 1 list to send to.
                - field: unsubscribe_tag
                  message: 'An [unsubscribe] tag in both your html and plain content is required to send a campaign.'
                - field: suppression_group_id
                  message: Either a suppression_group_id or custom_unsubscribe_url is required to send a campaign.
                - field: null
                  message: 'You do not have enough credits to send this campaign. Upgrade your plan to send more: https://app.sendgrid.com/settings/billing'
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '403':
          description: '"": "You may only send a campaign when it is in draft mode."'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: You may only send a campaign when it is in draft mode.
        '404':
          description: '"": "not found"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: not found
      parameters:
        - type: number
          description: The id of the campaign
          name: campaign_id
          in: query
          required: true
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Send a Campaign
      summary: ''
      description: |-
        Send your campaign right now. Normally a POST would have a request body, but since this endpoint is telling us to send a resource that is already created, we don't need a body.

        For more information:

        * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
      security:
        - {}
  /contactdb/custom_fields:
    parameters: []
    post:
      responses:
        '201':
          description: ''
          schema:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              type:
                type: string
          examples:
            application/json:
              id: 1
              name: pet
              type: text
        '400':
          description: |-
            "" : "Returned if request body is invalid JSON"
            "type" : "Returned if custom field type is invalid or not provided"
            "name" : "Returned if custom field name is not provided"
          examples:
            application/json:
              errors:
                - field: null
                  message: Returned if request body is invalid JSON
                - field: type
                  message: Returned if custom field type is invalid or not provided
                - field: name
                  message: Returned if custom field name is not provided
      parameters:
        - type: string
          name: name
          in: formData
          description: ''
        - type: string
          name: type
          in: formData
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Create a Custom Field
      summary: ''
      description: |-
        Create a custom field.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
    get:
      responses:
        '200':
          description: ''
          schema:
            title: List All Custom Fields response
            type: object
            properties:
              custom_fields:
                type: array
                items:
                  $ref: '#/definitions/contactdb_custom_field_with_id'
            required:
              - custom_fields
          examples:
            application/json:
              lists:
                - id: 1
                  name: the jones
                  recipient_count: 1
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: List All Custom Fields
      summary: ''
      description: "Get all custom fields. \n\nThe contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)."
      security:
        - {}
  '/contactdb/custom_fields/{custom_field_id}':
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/contactdb_custom_field_with_id'
          examples:
            application/json:
              id: 1
              name: pet
              type: text
        '400':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - message: invalid id
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '404':
          description: '"custom_field_id" : "Returned if custom_field_id does not exist"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - message: Custom field ID does not exist
      parameters:
        - type: number
          description: The ID of the custom field you would like to retrieve
          name: custom_field_id
          in: query
          required: true
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get a Custom Field
      summary: ''
      description: |-
        Get a custom field by ID.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
    delete:
      responses:
        '202':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              message: Custom Field delete is processing.
        '400':
          description: '"id" : "Returned if custom_field_id is not valid"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - message: Custom field in use by one or more segment conditions
                - message: Custom field ID does not exist
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '404':
          description: '"custom_field_id" : "Returned if custom_field_id does not exist"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - message: Custom field ID does not exist
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Delete a Custom Field
      summary: ''
      description: |-
        Delete a custom field by ID.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
  '/contactdb/lists/{list_id}':
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/contactdb_list'
          examples:
            application/json:
              id: 1
              name: listname
              recipient_count: 0
        '400':
          description: '"list_id" : "Returned if list_id is not valid"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - message: invalid id
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '404':
          description: '"list_id" : "Returned if list_id does not exist"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: List ID does not exist
      parameters:
        - type: number
          description: The ID of the list to retrieve.
          name: list_id
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get a single list.
      summary: ''
      description: "Get a single list. \n\nThe contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)."
      security:
        - {}
    patch:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties: {}
        '400':
          description: |-
            "name" : "Returned if list name is a duplicate of existing list or segment"
            "name" : "Returned if list name is invalid or not provided"
            "list_id" : "Returned if list_id is not valid"
            "" : "Returned if request body is invalid JSON"
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - message: invalid id
        '404':
          description: '"list_id" : "Returned if list_id does not exist"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - message: List ID does not exist
      parameters:
        - type: number
          description: The ID of the list you are updating.
          name: list_id
          in: query
          required: true
        - type: string
          name: name
          in: formData
          required: true
          description: 'The new name for your list. '
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Update a List
      summary: ''
      description: |-
        Update the name of a list.


        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
    delete:
      responses:
        '202':
          description: ''
          schema:
            type: 'null'
        '400':
          description: |-
            "list_id" : "Returned if list_id is not valid"
            "delete_contacts" : "Returned if delete_contacts is not valid"
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: delete_contacts
                  message: delete_contacts not a bool
                - field: list_id
                  message: Returned if list_id is not valid
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '404':
          description: '"list_id" : "Returned if list_id does not exist"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - message: 'List not found: 5'
      parameters:
        - type: boolean
          description: Adds the ability to delete all contacts on the list in addition to deleting the list.
          enum:
            - true
            - false
          name: delete_contacts
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Delete a List
      summary: ''
      description: |-
        Delete a list by ID.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
  /contactdb/recipients/search:
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              recipients:
                type: array
                items:
                  $ref: '#/definitions/contactdb_recipient'
          examples:
            application/json:
              recipients:
                - created_at: 1422313607
                  email: jones@example.com
                  first_name: null
                  id: YUBh
                  last_clicked: null
                  last_emailed: null
                  last_name: Jones
                  last_opened: null
                  updated_at: 1422313790
                  custom_fields:
                    - id: 23
                      name: pet
                      value: Fluffy
                      type: text
        '400':
          description: |-
            "" : "Returned if no search params are specified"
            "field" : "Returned if the provided field is invalid or does not exist"
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - message: 'The following parameters are not custom fields or reserved fields: [{field_name}]'
                - message: No search params are specified
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters:
        - type: string
          name: '{field_name}'
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get Recipients Matching Search Criteria
      summary: |-
        {% info %}
        "field_name"* is a variable that is substituted for your actual custom field name from your recipient.
        Text f
      description: |-
        Search the recipients in your contactdb.

        field_name:

        * is a variable that is substituted for your actual custom field name from your recipient.
        * Text fields must be url-encoded. Date fields are searchable only by unix timestamp (e.g. 2/2/2015 becomes 1422835200)
        * If field_name is a 'reserved' date field, such as created_at or updated_at, the system will internally convert
        your epoch time to a date range encompassing the entire day. For example, an epoch time of 1422835600 converts to
        Mon, 02 Feb 2015 00:06:40 GMT, but internally the system will search from Mon, 02 Feb 2015 00:00:00 GMT through
        Mon, 02 Feb 2015 23:59:59 GMT.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
  '/contactdb/recipients/{recipient_id}/lists':
    parameters: []
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              lists:
                type: array
                items:
                  $ref: '#/definitions/contactdb_list'
          examples:
            application/json:
              lists:
                - id: 1234
                  name: Example list
                  recipient_count: 42
        '400':
          description: '"recipient_id" : "Returned if recipient_id is not valid"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: recipient ID is invalid
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
        '404':
          description: '"recipient_id" : "Returned if record for the recipient id does not exist"'
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: recipient id not found
      parameters:
        - type: string
          description: The ID of the recipient you are requesting lists for.
          name: recipient_id
          in: query
          required: true
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Get the Lists the Recipient Is On
      summary: ''
      description: |-
        Each recipient can be on many lists. This endpoint gives you the lists this recipient is associated to.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
  /contactdb/segments:
    parameters: []
    post:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/contactdb_segments_with_id'
          examples:
            application/json:
              id: 1
              name: Last Name Miller
              list_id: 4
              conditions:
                - field: last_name
                  value: Miller
                  operator: eq
                  and_or: ''
                - field: last_clicked
                  value: 01/02/2015
                  operator: gt
                  and_or: and
                - field: clicks.campaign_identifier
                  value: '513'
                  operator: eq
                  and_or: or
              recipient_count: 0
        '400':
          description: |-
            "name" : "Returned if the name is not valid"
            "list_id" : "Returned if the list_id is not valid"
            "and_or" : "Returned if and_or and set value is not passed into the request body"
            "and_or" : "Returned if and_or is set on the only condition passed"
            "and_or" : "Returned if and_or is set on all conditions"
            "and_or" : "Returned if and_or is not set on more than one condition and less than all conditions"
            "operator" : "Returned if operator and set value is not passed into the request body"
            "value" : "Returned if value and set value is not passed into the request body"
            "field" : "Returned if field and set value is not passed into the request body"
            "" : "Returned if request body is not valid json"
            "" : "Returned if invalid value is passed into one of the request body parameters"
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - message: request body is not valid json
                - message: invalid value is passed into one of the request body parameters
                - field: field
                  message: field and set value is not passed into the request body
                - field: value
                  message: value and set value is not passed into the request body
                - field: operator
                  message: operator and set value is not passed into the request body
                - field: and_or
                  message: and_or is not set on more than one condition and less than all conditions
                - field: and_or
                  message: and_or is set on all conditions
                - field: and_or
                  message: and_or is set on the only condition passed
                - field: and_or
                  message: and_or and set value is not passed into the request body
                - field: list_id
                  message: the list_id is not valid
                - field: name
                  message: the name is not valid
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Create a Segment
      summary: ''
      description: "Create a segment. All recipients in your contactdb will be added or removed automatically depending on whether they match the criteria for this segment.\n\nList Id:\n\n* Send this to segment from an existing list\n* Don't send this in order to segment from your entire contactdb.\n\nValid operators for create and update depend on the type of the field you are segmenting: \n\n* **Dates:** \"eq\", \"ne\", \"lt\" (before), \"gt\" (after) \n* **Text:** \"contains\", \"eq\" (is - matches the full field), \"ne\" (is not - matches any field where the entire field is not the condition value) \n* **Numbers:** \"eq\", \"lt\", \"gt\" \n* **Email Clicks and Opens:** \"eq\" (opened), \"ne\" (not opened) \n\nSegment conditions using \"eq\" or \"ne\" for email clicks and opens should provide a \"field\" of either *clicks.campaign_identifier* or *opens.campaign_identifier*. The condition value should be a string containing the id of a completed campaign. \n\nSegments may contain multiple condtions, joined by an \"and\" or \"or\" in the \"and_or\" field. The first condition in the conditions list must have an empty \"and_or\", and subsequent conditions must all specify an \"and_or\".\n\nThe contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)."
      security:
        - {}
    get:
      responses:
        '200':
          description: ''
          schema:
            title: List All Segments response
            type: object
            properties:
              segments:
                type: array
                items:
                  $ref: '#/definitions/contactdb_segments'
            required:
              - segments
          examples:
            application/json:
              segments:
                - id: 1234
                  name: Age segments < 25
                  conditions:
                    - field: age
                      value: '25'
                      operator: lt
                  recipient_count: 8
                - id: 2345
                  name: email address - gmail
                  conditions:
                    - field: email
                      value: '@gmail.com'
                      operator: contains
                  recipient_count: 0
        '401':
          description: ''
          schema:
            $ref: '#/definitions/global:ErrorResponse'
          examples:
            application/json:
              errors:
                - field: null
                  message: authorization required
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: List All Segments
      summary: ''
      description: |-
        Get all your segments.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      security:
        - {}
  '/whitelabel/links/{link_id}/subuser':
    parameters: []
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              id:
                type: integer
              domain:
                type: string
              subdomain:
                type: string
              username:
                type: string
              user_id:
                type: integer
              default:
                type: boolean
              valid:
                type: boolean
              legacy:
                type: boolean
              dns:
                type: object
                properties:
                  domain_cname:
                    type: object
                    properties:
                      valid:
                        type: boolean
                      type:
                        type: string
                      host:
                        type: string
                      data:
                        type: string
                  owner_cname:
                    type: object
                    properties:
                      valid:
                        type: boolean
                      type:
                        type: string
                      host:
                        type: string
                      data:
                        type: string
          examples:
            application/json:
              id: 1
              domain: example.com
              subdomain: mail
              username: john@example.com
              user_id: 7
              default: false
              valid: true
              legacy: false
              dns:
                domain_cname:
                  valid: true
                  type: cname
                  host: mail.example.com
                  data: sendgrid.net
                owner_cname:
                  valid: true
                  type: cname
                  host: 7.example.com
                  data: sendgrid.net
      parameters:
        - type: string
          name: username
          in: formData
          description: ''
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Associate Link
      summary: ''
      description: ''
      security:
        - {}
  /whitelabel/domains:
    parameters: []
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              id:
                type: number
                description: The ID of the domain whitelabel.
              user_id:
                type: number
                description: The ID of the user that this whitelabel will be associated with.
              subdomain:
                type: string
                description: The subdomain to use for this domain whitelabel.
              domain:
                type: string
                description: The domain that this whitelabel is being created for.
              username:
                type: string
                description: The username that this whitelabel will be associated with.
              ips:
                type: array
                description: The IPs to be included in the custom SPF record for this domain whitelabel.
                items:
                  type: object
                  properties: {}
              custom_spf:
                type: boolean
                description: Indicates whether this domain whitelabel will use custom SPF.
              default:
                type: boolean
                description: Indicates if this domain whitelabel is the default whitelabel.
              legacy:
                type: boolean
                description: Indicates if this domain whitelabel was created using the legacy whitelabel tool.
              automatic_security:
                type: boolean
                description: Indicates if this domain whitelabel uses automated security.
              valid:
                type: boolean
                description: Indicates if this is a valid whitelabel.
              dns:
                type: object
                description: The DNS records for this whitelabel that are used to authenticate the sending domain.
                properties:
                  mail_cname:
                    type: object
                    description: The CNAME for your sending domain that points to sendgrid.net.
                    properties:
                      valid:
                        type: boolean
                        description: Indicates if this is a valid CNAME.
                      type:
                        type: string
                        description: The type of DNS record.
                      host:
                        type: string
                        description: The domain that this CNAME is created for.
                        format: hostname
                      data:
                        type: string
                        description: The CNAME record.
                  dkim1:
                    type: object
                    description: A DNS record.
                    properties:
                      valid:
                        type: boolean
                        description: Indicates if this is a valid DNS record.
                      type:
                        type: string
                        description: The type of DNS record.
                      host:
                        type: string
                        description: The domain that this DNS record was created for.
                      data:
                        type: string
                        description: The DNS record.
                  dkim2:
                    type: object
                    description: A DNS record.
                    properties:
                      valid:
                        type: boolean
                        description: Indicates if this is a valid DNS record.
                      type:
                        type: string
                        description: The type of DNS record.
                      host:
                        type: string
                        description: The domain that this DNS record was created for.
                      data:
                        type: string
                        description: The DNS record.
          examples:
            application/json:
              id: 302183
              user_id: 1446226
              subdomain: example
              domain: example.com
              username: mbernier
              ips: []
              custom_spf: false
              default: true
              legacy: false
              automatic_security: true
              valid: false
              dns:
                mail_cname:
                  valid: false
                  type: cname
                  host: example.example.com
                  data: u1446226.wl.sendgrid.net
                dkim1:
                  valid: false
                  type: cname
                  host: s1._domainkey.example.com
                  data: s1.domainkey.u1446226.wl.sendgrid.net
                dkim2:
                  valid: false
                  type: cname
                  host: s2._domainkey.example.com
                  data: s2.domainkey.u1446226.wl.sendgrid.net
      parameters:
        - type: string
          name: domain
          in: formData
          required: true
          description: Domain being whitelabeled.
        - type: string
          name: subdomain
          in: formData
          required: true
          description: The subdomain to use for this domain whitelabel.
        - type: string
          name: username
          in: formData
          required: false
          description: The username that this whitelabel will be associated with.
        - type: string
          name: ips
          in: formData
          required: false
          description: The IP addresses that will be included in the custom SPF record for this whitelabel.
        - type: string
          name: custom_spf
          in: formData
          required: false
          description: Specify whether to use a custom SPF or allow SendGrid to manage your SPF. This option is only available to domain whitelabels setup for manual security.
        - type: string
          name: default
          in: formData
          required: false
          description: "Whether to use this whitelabel as the fallback if no domain whitelabels match the sender's domain."
        - type: string
          name: automatic_security
          in: formData
          required: false
          description: 'Whether to allow SendGrid to manage your SPF records, DKIM keys, and DKIM key rotation.'
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Create a Domain
      summary: |-
        When creating a whitelabel for a subuser, there are two options available:
            Use the "username" parameter. This allows
      description: |-
        **This endpoint allows you to create a whitelabel for one of your domains.**

        If you are creating a domain whitelabel that you would like a subuser to use, you have two options:
        1. Use the "username" parameter. This allows you to create a whitelabel on behalf of your subuser. This means the subuser is able to see and modify the created whitelabel.
        2. Use the Association workflow (see Associate Domain section). This allows you to assign a whitelabel created by the parent to a subuser. This means the subuser will default to the assigned whitelabel, but will not be able to see or modify that whitelabel. However, if the subuser creates their own whitelabel it will overwrite the assigned whitelabel.

        A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

        For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)
      security:
        - {}
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                  description: The ID of the domain whitelabel.
                user_id:
                  type: number
                  description: The ID of the user that this whitelabel will be associated with.
                subdomain:
                  type: string
                  description: The subdomain created for this domain whitelabel.
                domain:
                  type: string
                  description: The domain that this whitelabel was created for.
                username:
                  type: string
                  description: The username that this whitelabel is associated with.
                ips:
                  type: array
                  description: The IPs that will be included in the custom SPF record.
                  items:
                    type: string
                custom_spf:
                  type: boolean
                  description: Indicates if this whitelabel has custom SPF.
                default:
                  type: boolean
                  description: Indicates if this whitelabel has been set as the default whitelabel.
                legacy:
                  type: boolean
                  description: Indicates if this is whitelabel was created with the legacy whitelabel tool.
                automatic_security:
                  type: boolean
                  description: Indicates if this whitelabel uses automated security.
                valid:
                  type: boolean
                  description: Indicates if this is a valid whitelabel or not.
                dns:
                  type: object
                  description: The DNS records for this whitelabel that are used for authenticating the sending domain.
                  properties:
                    mail_server:
                      type: object
                      description: Designates which mail server is responsible for accepting messages from a domain.
                      properties:
                        valid:
                          type: boolean
                          description: Indicates if this is a valid DNS record with no conflicts.
                        type:
                          type: string
                          description: The type of DNS record.
                        host:
                          type: string
                          description: The domain sending the messages.
                        data:
                          type: string
                          description: The mail server responsible for accepting messages.
                    subdomain_spf:
                      type: object
                      description: The SPF record for the subdomain used to create this whitelabel.
                      properties:
                        valid:
                          type: boolean
                          description: Indicates if the SPF record is valid.
                        type:
                          type: string
                          description: The type of data in the SPF record.
                        host:
                          type: string
                          description: The domain that this SPF record will be used to authenticate.
                        data:
                          type: string
                          description: The SPF record.
                    dkim:
                      type: object
                      description: The DNS record used when creating the DKIM signature.
                      properties:
                        valid:
                          type: boolean
                          description: Indicates if this DNS record is valid.
                        type:
                          type: string
                          description: The type of DNS record.
                          enum:
                            - cname
                            - mx
                            - txt
                        host:
                          type: string
                          description: The domain that these DNS records will be applied to.
                          format: hostname
                        data:
                          type: string
                          description: The DNS record.
          examples:
            application/json:
              - id: 1
                domain: example.com
                subdomain: mail
                username: john@example.com
                user_id: 7
                ips:
                  - 192.168.1.1
                  - 192.168.1.2
                custom_spf: true
                default: true
                legacy: false
                automatic_security: true
                valid: true
                dns:
                  mail_cname:
                    host: mail.example.com
                    type: cname
                    data: u7.wl.sendgrid.net
                    valid: true
                  spf:
                    host: example.com
                    type: txt
                    data: 'v=spf1 include:u7.wl.sendgrid.net -all'
                    valid: true
                  dkim1:
                    host: s1._domainkey.example.com
                    type: cname
                    data: s1._domainkey.u7.wl.sendgrid.net
                    valid: true
                  dkim2:
                    host: s2._domainkey.example.com
                    type: cname
                    data: s2._domainkey.u7.wl.sendgrid.net
                    valid: true
              - id: 2
                domain: example2.com
                subdomain: news
                username: jane@example2.com
                user_id: 8
                ips: []
                custom_spf: false
                default: true
                legacy: false
                automatic_security: true
                valid: false
                dns:
                  mail_server:
                    host: news.example2.com
                    type: mx
                    data: sendgrid.net
                    valid: false
                  subdomain_spf:
                    host: news.example2.com
                    type: txt
                    data: 'v=spf1 include:sendgrid.net ~all'
                    valid: false
                  domain_spf:
                    host: example2.com
                    type: txt
                    data: 'v=spf1 include:news.example2.com -all'
                    valid: false
                  dkim:
                    host: example2.com
                    type: txt
                    data: k=rsa; t=s; p=publicKey
                    valid: false
      parameters:
        - type: integer
          description: Number of domains to return.
          name: limit
          in: query
        - type: integer
          description: Paging offset.
          name: offset
          in: query
        - type: boolean
          description: Exclude subuser domains from the result.
          name: exclude_subusers
          in: query
        - type: string
          description: The username associated with a whitelabel.
          name: username
          in: query
        - type: string
          description: Search for domain whitelabels that match the given domain.
          name: domain
          in: query
      consumes:
        - application/json
      produces:
        - application/json
      operationId: List all domains.
      summary: ''
      description: |
        **This endpoint allows you to retrieve a list of all domain whitelabels you have created.**

        A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

        For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)
      security:
        - {}
  '/whitelabel/domains/{id}/ips':
    parameters: []
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              id:
                type: integer
                description: The ID of the domain whitelabel.
              domain:
                type: string
                description: The domain that this whitelabel was created for.
              subdomain:
                type: string
                description: The subdomain used to create this whitelabel.
              username:
                type: string
                description: The username of the account that this whitelabel is associated with.
              user_id:
                type: integer
                description: The user_id of the account that this whitelabel is associated with.
              ips:
                type: array
                description: The IP addresses that are included in the SPF record for this whitelabel.
                items: {}
              custom_spf:
                type: boolean
                description: Indicates if this whitelabel uses custom SPF.
              default:
                type: boolean
                description: Indicates if this is the default whitelabel.
              legacy:
                type: boolean
                description: Indicates if this whitelabel was created using the legacy whitelabel tool.
              automatic_security:
                type: boolean
                description: Indicates if this whitelabel uses automated security.
              valid:
                type: boolean
                description: Indicates if this is a valid whitelabel.
              dns:
                type: object
                description: The DNS records for this whitelabel.
                properties:
                  mail_server:
                    type: object
                    description: Designates which mail server is responsible for accepting messages from a domain.
                    properties:
                      host:
                        type: string
                        description: The domain sending the messages.
                      type:
                        type: string
                        description: The type of DNS record.
                      data:
                        type: string
                        description: The mail server responsible for accepting messages from the sending domain.
                      valid:
                        type: boolean
                        description: Indicates if this is a valid DNS record.
                  subdomain_spf:
                    type: object
                    description: The SPF record for the subdomain used to create this whitelabel.
                    properties:
                      host:
                        type: string
                        description: The domain that this SPF record will be used to authenticate.
                      type:
                        type: string
                        description: The type of data in the SPF record.
                      data:
                        type: string
                        description: The SPF record.
                      valid:
                        type: boolean
                        description: Indicates if this SPF record is valid.
                  domain_spf:
                    type: object
                    description: The SPF record for the sending domain.
                    properties:
                      host:
                        type: string
                        description: The root domain that this SPF record will be used to authenticate.
                      type:
                        type: string
                        description: The type of data in the SPF record.
                      data:
                        type: string
                        description: The SPF record.
                      valid:
                        type: boolean
                        description: Indicates if this is a valid SPF record.
                  dkim:
                    type: object
                    description: The DKIM record for messages sent using this whitelabel.
                    properties:
                      host:
                        type: string
                        description: The DNS labels for the DKIM signature.
                      type:
                        type: string
                        description: The type of data in the DKIM record.
                      data:
                        type: string
                        description: The DKIM record.
                      valid:
                        type: boolean
                        description: Indicates if the DKIM record is valid.
          examples:
            application/json:
              id: 1
              domain: example.com
              subdomain: mail
              username: john@example.com
              user_id: 7
              ips: []
              custom_spf: true
              default: false
              legacy: false
              automatic_security: false
              valid: false
              dns:
                mail_server:
                  host: mail.example.com
                  type: mx
                  data: sendgrid.net
                  valid: false
                subdomain_spf:
                  host: mail.example.com
                  type: txt
                  data: 'v=spf1 ip4:192.168.1.1 ip4:192.168.0.1 -all'
                  valid: false
                domain_spf:
                  host: example.com
                  type: txt
                  data: 'v=spf1 include:mail.example.com -all'
                  valid: false
                dkim:
                  host: s1._domainkey.example.com
                  type: txt
                  data: k=rsa; t=s; p=publicKey
                  valid: false
      parameters:
        - type: string
          name: ip
          in: formData
          required: true
          description: IP to associate with the domain. Used for manually specifying IPs for custom SPF.
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Add an IP to a Domain
      summary: ''
      description: |-
        **This endpoint allows you to add an IP address to a domain whitelabel.**

        A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

        For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)

        ## URI Parameters
        | URI Parameter   | Type  |  Description  |
        |---|---|---|
        | id | integer  | ID of the domain to which you are adding an IP |
      security:
        - {}
  '/whitelabel/domains/{domain_id}/subuser':
    parameters: []
    post:
      responses:
        '201':
          description: ''
          schema:
            type: object
            properties:
              id:
                type: integer
                description: The ID of the domain whitelabel.
              domain:
                type: string
                description: The domain that this whitelabel was created for.
              subdomain:
                type: string
                description: The subdomain that was used to create this whitelabel.
              username:
                type: string
                description: The username of the account that this whitelabel is associated with.
              user_id:
                type: integer
                description: The user_id of the account that this whitelabel is associated with.
              ips:
                type: array
                description: The IP addresses that are included in the SPF record for this whitelabel.
                items: {}
              custom_spf:
                type: boolean
                description: Indicates if this whitelabel uses custom SPF.
              default:
                type: boolean
                description: Indicates if this is the default whitelabel.
              legacy:
                type: boolean
                description: Indicates if this whitelabel was created using the legacy whitelabel tool.
              automatic_security:
                type: boolean
                description: Indicates if this whitelabel uses automated security.
              valid:
                type: boolean
                description: Indicates if this is a valid whitelabel.
              dns:
                type: object
                properties:
                  mail_server:
                    type: object
                    properties:
                      host:
                        type: string
                      type:
                        type: string
                      data:
                        type: string
                      valid:
                        type: boolean
                  subdomain_spf:
                    type: object
                    properties:
                      host:
                        type: string
                      type:
                        type: string
                      data:
                        type: string
                      valid:
                        type: boolean
                  domain_spf:
                    type: object
                    properties:
                      host:
                        type: string
                      type:
                        type: string
                      data:
                        type: string
                      valid:
                        type: boolean
                  dkim:
                    type: object
                    properties:
                      host:
                        type: string
                      type:
                        type: string
                      data:
                        type: string
                      valid:
                        type: boolean
          examples:
            application/json:
              id: 1
              domain: example.com
              subdomain: mail
              username: mail@example.com
              user_id: 7
              ips: []
              custom_spf: true
              default: false
              legacy: false
              automatic_security: false
              valid: false
              dns:
                mail_server:
                  host: mail.example.com
                  type: mx
                  data: sendgrid.net
                  valid: false
                subdomain_spf:
                  host: mail.example.com
                  type: txt
                  data: 'v=spf1 ip4:192.168.1.1 ip4:192.168.0.1 -all'
                  valid: false
                domain_spf:
                  host: example.com
                  type: txt
                  data: 'v=spf1 include:mail.example.com -all'
                  valid: false
                dkim:
                  host: s1._domainkey.example.com
                  type: txt
                  data: k=rsa; t=s; p=publicKey
                  valid: false
      parameters:
        - type: string
          name: username
          in: formData
          required: true
          description: Username to associate with the domain whitelabel.
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Associate Domain
      summary: ''
      description: |-
        **This endpoint allows you to associate a specific domain whitelabel with a subuser.**

        A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

        Domain whitelabels can be associated with (i.e. assigned to) subusers from a parent account. This functionality allows subusers to send mail using their parent's whitelabels. To associate a whitelabel with a subuser, the parent account must first create the whitelabel and validate it. The the parent may then associate the whitelabel via the subuser management tools.

        For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)

        ## URI Parameters
        | URI Parameter   | Type   | Description  |
        |---|---|---|
        | domain_id | integer   | ID of the domain whitelabel to associate with the subuser. |
      security:
        - {}
  '/whitelabel/domains/{id}/ips/{ip}':
    parameters: []
    delete:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              id:
                type: integer
                description: The ID of the domain whitelabel.
              domain:
                type: string
                description: The domain that the whitelabel was created for.
              subdomain:
                type: string
                description: The subdomain that was used to create the whitelabel.
              username:
                type: string
                description: The username of the account that this whitelabel is associated with.
              user_id:
                type: integer
                description: The user_id of the account that this whitelabel is associated with.
              ips:
                type: array
                description: The IPs that are included in the SPF record for this whitelabel.
                items: {}
              custom_spf:
                type: boolean
                description: Indicates if this whitelabel uses custom SPF.
              default:
                type: boolean
                description: Indicates if this is the default whitelabel.
              legacy:
                type: boolean
                description: Indicates if this whitelabel was created using the legacy whitelabel tool.
              automatic_security:
                type: boolean
                description: Indicates if this whitelabel uses automated security.
              valid:
                type: boolean
                description: Indicates if this is a valid whitelabel.
              dns:
                type: object
                description: The DNS records for this whitelabel.
                properties:
                  mail_server:
                    type: object
                    description: Designates which mail server is responsible for accepting messages from a domain.
                    properties:
                      host:
                        type: string
                        description: The domain sending the messages.
                      type:
                        type: string
                        description: The type of DNS record.
                      data:
                        type: string
                        description: The mail server responsible for accepting messages from the sending domain.
                      valid:
                        type: boolean
                        description: Indicates if this is a valid DNS record.
                  subdomain_spf:
                    type: object
                    description: The SPF record for the subdomain used to create this whitelabel.
                    properties:
                      host:
                        type: string
                        description: The domain that this SPF record will be used to authenticate.
                      type:
                        type: string
                        description: The type of data in the SPF record.
                      data:
                        type: string
                        description: The SPF record.
                      valid:
                        type: boolean
                        description: Indicates if the SPF record is valid.
                  domain_spf:
                    type: object
                    description: The SPF record for the sending domain.
                    properties:
                      host:
                        type: string
                        description: The root domain that this SPF record will be used to authenticate.
                      type:
                        type: string
                        description: The type of data in the SPF record.
                      data:
                        type: string
                        description: The SPF record.
                      valid:
                        type: boolean
                        description: Indicates if this SPF record is valid.
                  dkim:
                    type: object
                    description: The DKIM record for messages sent using this whitelabel.
                    properties:
                      host:
                        type: string
                        description: 'The DNS labels for the DKIM signature. '
                      type:
                        type: string
                        description: The type of data in the DKIM record.
                      data:
                        type: string
                        description: The DKIM record.
                      valid:
                        type: boolean
                        description: Indicates if the DKIM record is valid.
          examples:
            application/json:
              id: 1
              domain: example.com
              subdomain: mail
              username: mail@example.com
              user_id: 7
              ips: []
              custom_spf: true
              default: false
              legacy: false
              automatic_security: false
              valid: false
              dns:
                mail_server:
                  host: mail.example.com
                  type: mx
                  data: sendgrid.net
                  valid: false
                subdomain_spf:
                  host: mail.example.com
                  type: txt
                  data: 'v=spf1 ip4:192.168.1.1 ip4:192.168.0.1 -all'
                  valid: false
                domain_spf:
                  host: example.com
                  type: txt
                  data: 'v=spf1 include:mail.example.com -all'
                  valid: false
                dkim:
                  host: s1._domainkey.example.com
                  type: txt
                  data: k=rsa; t=s; p=publicKey
                  valid: false
      parameters: []
      consumes:
        - application/json
      produces:
        - application/json
      operationId: Remove an IP from a Domain
      summary: ''
      description: |-
        **This endpoint allows you to remove a domain's IP address from that domain's whitelabel.**

        A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

        For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)

        ## URI Parameters
        | URI Parameter   | Type  | Description  |
        |---|---|---|
        | id | integer  | ID of the domain whitelabel to delete the IP from. |
        | ip | string | IP to remove from the domain whitelabel. |
      security:
        - {}
definitions:
  user_scheduled_send_status:
    allOf:
      - $ref: '#/definitions/mail_batch_id'
      - type: object
        description: The status of the scheduled send.
        properties:
          status:
            type: string
            description: The status of the scheduled send.
            enum:
              - cancel
              - pause
        required:
          - status
  contacts:
    type: object
    properties:
      address:
        type: string
      address2: {}
      city:
        type: string
      company:
        type: string
      country:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone:
        type: string
      state:
        type: string
      zip:
        type: string
  mail_settings_footer:
    type: object
    properties:
      enabled:
        type: boolean
      html_content:
        type: string
      plain_content:
        type: string
  subuser:
    title: List all Subusers for a parent response
    type: object
    properties:
      disabled:
        type: boolean
        description: Whether or not the user is enabled or disabled.
      id:
        type: number
        description: The ID of this subuser.
      username:
        type: string
        description: The name by which this subuser will be referred.
      email:
        type: string
        description: The email address to contact this subuser.
        format: email
    required:
      - disabled
      - id
      - username
      - email
  stats:
    type: object
    properties: {}
  contactdb_recipient_count:
    type: object
    properties:
      recipient_count:
        type: number
        description: The count of recipients.
    required:
      - recipient_count
  contactdb_segments_conditions:
    type: object
    properties:
      field:
        type: string
      value:
        type: string
      operator:
        type: string
        enum:
          - eq
          - ne
          - lt
          - gt
          - contains
      and_or:
        type: string
        enum:
          - and
          - or
          - ''
    required:
      - field
      - value
      - operator
  subuser_post:
    type: object
    properties:
      username:
        type: string
        description: The username of the subuser.
      user_id:
        type: number
        description: The user ID for this subuser.
      email:
        type: string
        description: The email address for this subuser.
        format: email
      signup_session_token:
        type: string
      authorization_token:
        type: string
      credit_allocation:
        type: object
        properties:
          type:
            type: string
    required:
      - username
      - user_id
      - email
  campaign_request:
    type: object
    properties:
      title:
        type: string
        description: The display title of your campaign. This will be viewable by you in the Marketing Campaigns UI.
      subject:
        type:
          - string
          - 'null'
        description: The subject of your campaign that your recipients will see.
      sender_id:
        type:
          - number
          - 'null'
        description: 'The ID of the "sender" identity that you have created. Your recipients will see this as the "from" on your marketing emails.'
      list_ids:
        type:
          - array
          - 'null'
        description: The IDs of the lists you are sending this campaign to. You can have both segment IDs and list IDs
        items:
          type: number
      segment_ids:
        type:
          - array
          - 'null'
        description: The segment IDs that you are sending this list to. You can have both segment IDs and list IDs.
        items:
          type: number
      categories:
        type:
          - array
          - 'null'
        description: The categories you would like associated to this campaign.
        items:
          type: string
      suppression_group_id:
        type:
          - number
          - 'null'
        description: 'The suppression group that this marketing email belongs to, allowing recipients to opt-out of emails of this type.'
      custom_unsubscribe_url:
        type:
          - string
          - 'null'
        description: This is the url of the custom unsubscribe page that you provide for customers to unsubscribe from your suppression groups.
      ip_pool:
        type:
          - string
          - 'null'
        description: The pool of IPs that you would like to send this email from.
      html_content:
        type:
          - string
          - 'null'
        description: The HTML of your marketing email.
      plain_content:
        type:
          - string
          - 'null'
        description: The plain text content of your emails.
    required:
      - title
  contactdb_custom_field:
    title: ContactDB Custom field schema.
    type: object
    properties:
      name:
        type: string
        description: The name of the field
      type:
        type: string
        description: The type of the field.
        enum:
          - date
          - text
          - number
  contactdb_custom_field_with_id:
    allOf:
      - $ref: '#/definitions/contactdb_custom_field'
      - type: object
        properties:
          id:
            type: number
            description: The ID of the custom field.
    title: ContactDB Custom field schema with ID.
  contactdb_custom_field_with_id_value:
    allOf:
      - $ref: '#/definitions/contactdb_custom_field_with_id'
      - type: object
        properties:
          value:
            type:
              - string
              - 'null'
            description: "The value of this recipient's custom field"
    title: ContactDB Custom field schema.
  contactdb_recipient_response:
    type: object
    properties:
      error_count:
        type: number
        default: '0'
        description: The number of errors found while adding recipients.
      error_indices:
        type: array
        default: '[]'
        description: 'The indices of the recipient(s) sent that caused the error. '
        items:
          type: number
      new_count:
        type: number
        default: '0'
        description: The count of new recipients added to the contactdb.
      persisted_recipients:
        type: array
        default: '[]'
        description: The recipient IDs of the recipients that already existed from this request.
        items:
          type: string
      updated_count:
        type: number
        default: '0'
        description: The recipients who were updated from this request.
      errors:
        type: array
        items:
          type: object
          properties:
            message:
              type: string
            error_indices:
              type: array
              items:
                type: number
    required:
      - error_count
      - new_count
      - persisted_recipients
      - updated_count
  contactdb_segments:
    title: Create a Segment request
    type: object
    properties:
      name:
        type: string
        description: The name of this segment.
      list_id:
        type: integer
        description: The list id from which to make this segment. Not including this ID will mean your segment is created from the main contactdb rather than a list.
      conditions:
        type: array
        description: The conditions for a recipient to be included in this segment.
        items:
          $ref: '#/definitions/contactdb_segments_conditions'
      recipient_count:
        type: number
        description: The count of recipients in this list. This is not included on creation of segments.
    required:
      - name
      - conditions
  contactdb_segments_with_id:
    allOf:
      - type: object
        properties:
          id:
            type: number
            description: The ID of the segment.
        required:
          - id
      - $ref: '#/definitions/contactdb_segments'
  api_key_name_id_scopes:
    allOf:
      - type: object
        properties:
          scopes:
            type: array
            description: The permissions this API Key has access to.
            items:
              type: string
      - $ref: '#/definitions/api_key_name_id'
  campaign_response:
    allOf:
      - $ref: '#/definitions/campaign_request'
      - type: object
        properties:
          status:
            type: string
            description: The status of your campaign.
        required:
          - status
  'global:id':
    type: integer
  mail_batch_id:
    type: object
    properties:
      batch_id:
        type: string
        pattern: "^[a-zA-Z0-9\\-\\_]"
    required:
      - batch_id
  'global:empty_request':
    type: 'null'
  downloads:
    type: object
    properties:
      download_url:
        type: string
  credentials:
    type: object
    properties:
      permissions:
        type: object
        properties:
          api:
            type: string
          mail:
            type: string
          web:
            type: string
      username:
        type: string
  mail_settings_address_whitelabel:
    type: object
    properties:
      enabled:
        type: boolean
      list:
        type: array
        items:
          type: string
  mail_settings_bcc:
    type: object
    properties:
      email:
        type: string
      enabled:
        type: boolean
  mail_settings_bounce_purge:
    type: object
    properties:
      enabled:
        type: boolean
      soft_bounces:
        type:
          - integer
          - 'null'
      hard_bounces:
        type:
          - integer
          - 'null'
  'mail_settings::patch':
    type: object
    properties:
      enabled:
        type: boolean
  mail_settings_forward_spam:
    type: object
    properties:
      email:
        type:
          - string
          - 'null'
      enabled:
        type: boolean
  mail_settings_spam_check:
    type: object
    properties:
      enabled:
        type: boolean
      max_score:
        type: number
      url:
        type: string
  mail_settings_template:
    type: object
    properties:
      enabled:
        type: boolean
      html_content:
        type: string
  partner_settings_new_relic:
    type: object
    properties:
      enable_subuser_statistics:
        type: boolean
      enabled:
        type: boolean
      license_key:
        type: string
  contactdb_list:
    title: ContactDB lists
    type: object
    properties:
      id:
        type: integer
        description: The reference ID of your list.
      name:
        type: string
        description: The name of your list.
      recipient_count:
        type: integer
        description: The count of recipients currently in the list.
    required:
      - id
      - name
      - recipient_count
  user_profile:
    type: object
    properties:
      address:
        type: string
      address2:
        type: string
      city:
        type: string
      company:
        type: string
      country:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone:
        type: string
      state:
        type: string
      website:
        type: string
      zip:
        type: string
  monitor:
    title: Create monitor settings request
    type: object
    properties:
      email:
        type: string
        description: The email address to send emails at the frequency specified for monitoring.
        format: email
      frequency:
        type: number
        description: 'The frequency by which to send the emails. An email will be sent, every time your subuser sends this {frequency} emails. '
    required:
      - email
      - frequency
  api_key_name_id:
    type: object
    properties:
      api_key_id:
        type: string
        description: 'The ID of your API Key. '
      name:
        type: string
        description: The name of your API Key.
  mail_settings_forward_bounce:
    type: object
    properties:
      email:
        type:
          - string
          - 'null'
      enabled:
        type: boolean
  'global:ErrorResponse':
    type: object
    properties:
      errors:
        type: array
        items:
          type: object
          properties:
            field:
              type:
                - string
                - 'null'
              description: The field that generated the error.
            message:
              type: string
              description: The error message.
          required:
            - message
  suppression_bounce:
    type: object
    properties:
      created:
        type: number
        description: The unix timestamp for when the bounce record was created at SendGrid.
      email:
        type: string
      reason:
        type: string
        description: 'The reason for the bounce. This typically will be a bounce code, an enhanced code, and a description.'
      status:
        type: string
        description: Enhanced SMTP bounce response
  contactdb_recipient:
    type: object
    properties:
      recipients:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              description: The ID of this recipient.
            created_at:
              type: number
              description: 'The time this record was created in your contactdb, in unixtime.'
            custom_fields:
              type: array
              description: The custom fields assigned to this recipient and their values.
              items:
                $ref: '#/definitions/contactdb_custom_field_with_id_value'
            email:
              type: string
              description: The email address of this recipient. This is a default custom field that SendGrid provides.
              format: email
            first_name:
              type:
                - string
                - 'null'
              description: The first name of this recipient. This is a default custom field that SendGrid provides.
            last_name:
              type:
                - string
                - 'null'
              description: The last name of the recipient.
            last_clicked:
              type:
                - number
                - 'null'
              description: 'The last time this recipient clicked a link from one of your campaigns, in unixtime.'
            last_emailed:
              type:
                - number
                - 'null'
              description: 'The last time this user was emailed by one of your campaigns, in unixtime.'
            last_opened:
              type:
                - number
                - 'null'
              description: 'The last time this recipient opened an email from you, in unixtime.'
            updated_at:
              type: number
              description: "The last update date for this recipient's record."
          required:
            - email
basePath: /v3
host: 'https://api.sendgrid.com'
schemes:
  - http
  - https
produces:
  - application/json
consumes:
  - application/json