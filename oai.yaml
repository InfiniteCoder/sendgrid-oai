#%RAML 0.8
title: SendGrid v3 API Documentation
version: v3.0
baseUri: 'https://api.sendgrid.com/v3'
documentation:
  - title: SendGrid v3 API Documentation
    content: |-
      # The SendGrid Web API V3 Documentation

      This is the entirety of the documented v3 endpoints. We have updated all the descriptions, parameters, requests, and responses.

      ## Authentication 

      Every endpoint requires Authentication in the form of an Authorization Header:

      Authorization: Bearer API_KEY # Title
      No Description
  - title: Limitations
    content: |-
      There are several rate limitations and restrictions that you should be aware of when using the v3 Mail Send endpoint.

      * The total size of your email, including attachments, must be less than 30MB.
      * The total number of recipients must be less than 1000. This includes all recipients defined within the `to`, `cc`, and `bcc` parameters, across each object that you include in the `personalizations` array.
      * 3000 requests/sec is the maximum rate at which you may call v3 Mail endpoint.
      * The total length of custom arguments must be less than 10000 bytes.
      * Unicode encoding is not supported for the `from` field within the `personalizations` array.
      * The `to.name`, `cc.name`, and `bcc.name` personalizations cannot include either the `;` or `,` characters.

      For more specific, parameter level requirements and limitatiosn, please refer to the [v3/mail/send documentation](https://sendgrid.com/docs/API_Reference/api_v3.html).
  - title: Rate Limits
    content: |-
      ## Rate Limit Response Header

      All calls within the Web API are allotted a specific number of requests per refresh period.

      Each Web API request returns the following header information regarding rate limits and number of requests left.

      Depending on the endpoint you are trying to reach, it will have a specific number of allowed requests per refresh period. Once this threshold has been reached, we will return a status code `429` response.

      ### Example

      ```bash
      GET https://api.sendgrid.com/v3/resource HTTP/1.1
      ```

      ```json
      HTTP/1.1 200 OK
      Content-Type: application/json
      X-RateLimit-Limit: 500
      X-RateLimit-Remaining: 499
      X-RateLimit-Reset: 1392815263

      {
        "foo": "bar"
      }
      ```

      ## When You Reach a Rate Limit

      You will no longer be able to make request against that endpoint for the duration of that refresh period.

      ### Example

      ```bash
      GET https://api.sendgrid.com/v3/resource/ HTTP/1.1
      ```

      ```json
      HTTP/1.1 429 TOO MANY REQUESTS
      Content-Type: application/json
      X-RateLimit-Limit: 150
      X-RateLimit-Remaining: 0
      X-RateLimit-Reset: 1392815263

      {
        "errors": [
          {
            "field": null,
             "message": "too many requests"
          },
        ]
      }
      ```
  - title: Errors
    content: |-
      Sometimes your API call will generate an error. Here you will find additional information about what to expect if you don’t format your request properly, or we fail to properly process your request.

      ## Response Codes

      | **Status Code** | **Description** |
      |---|---|
      | 400 | Bad request|
      | 401 | Requires authentication |
      | 406 | Missing Accept header. For example: `Accept: application/json` |
      | 429 | Too many requests/Rate limit exceeded |
      | 500 | Internal server error |

      ## Failed Requests

      The general format guidelines are displayed when the accompanying status code is returned.

      ```bash
      GET https://api.sendgrid.com/v3/resource HTTP/1.1
      ```

      ```json
      HTTP/1.1 400 BAD REQUEST
      Content-Type: application/json

      {
          "errors": [
            {"field": "identifier1", "message": "error message explained"},
            {"field": "identifier2", "message": "error message explained"},
            {"field": "identifier3", "message": "error message explained"},
          ]
      }
      ```
  - title: On Behalf of Subuser
    content: |-
      Use the *on-behalf-of* header to make calls for a particular subuser through the parent account. Use this header to automate bulk updates, or to administer a subuser without changing the authentication in your code.

      To use the feature, add the *on-behalf-of* header:

      `on-behalf-of: subuser_<username>`

      This header generates the API call as if the subuser account was making the call.

      When authenticating using the *on-behalf-of* header, you need to use the API key credentials of the **parent account**. For example:

      ```curl -X GET \
        'https://api.sendgrid.com/v3/stats?start_date=2016-01-01&end_date=2017-01-01&aggregated_by=month' \
        -H 'authorization: <Parent API Key>' \
        -H 'on-behalf-of: subuser_<username>' \
        ```

      **Note**: The *on-behalf-of* header does not work with the mail.send API.
  - title: Validation
    content: 'Whenever you make a request to the v3 Mail Send endpoint, your JSON payload is validated before your email is sent. If there are any errors, SendGrid will attempt to identify and return as many issues as possible for each request. For more information, please read our [error documentation](https://sendgrid.com/docs/API_Reference/Web_API_v3/Mail/errors.html).'
  - title: Responses
    content: |-
      ## Content-Type Header

      All responses are returned in JSON format. We specify this by sending the `Content-Type` header.

      ```bash
      GET https://api.sendgrid.com/v3/resource HTTP/1.1
      ```

      ```json
      HTTP/1.1 200 OK
      Content-Type: application/json

      {
        "foo": "bar"
      }
      ```

      ## Status Codes

      Below is a table containing descriptions of the various status codes we currently support against various resources.

      | **Status Code** | **Description** |
      |---|---|
      | 200 | No error |
      | 201 | Successfully created |
      | 204 | Successfully deleted |
      | 400 | Bad request|
      | 401 | Requires authentication |
      | 406 | Missing Accept header. For example: `Accept: application/json` |
      | 429 | Too many requests/Rate limit exceeded |
      | 500 | Internal server error |

      ## Pagination

      When a request is made with a pagination query, the following data is included in the header to allow for easy traversal of previous, current, first, and last page of the data set.

      ```bash
      GET https://api.sendgrid.com/v3/resource?limit=5&offset=0 HTTP/1.1
      ```

      ```json
      HTTP/1.1 200 OK
      Content-Type: application/json

      Link: <http://api.sendgrid.com/v3/resource?limit=5&offset=5>; rel="next"; title="2",
            <http://api.sendgrid.com/v3/resource?limit=5&offset=0>; rel="prev"; title="1",
            <http://api.sendgrid.com/v3/resource?limit=5&offset=10>; rel="last"; title="3",
            <http://api.sendgrid.com/v3/resource?limit=5&offset=0>; rel="first"; title="1"

      ```
  - title: Authentication
    content: |-
      ## Authorization Header

      To authenticate, add an `Authorization` header to your API request that contains an [API Key](https://sendgrid.com/docs/API_Reference/Web_API_v3/API_Keys/index.html).

      ## API Keys

      SendGrid’s Web API v3 supports the use of API Keys. API Keys allow you to use another method of authentication separate from your account username and password. API Keys add an additional layer of security for your account and can be assigned [specific permissions](https://sendgrid.com/docs/API_Reference/Web_API_v3/API_Keys/api_key_permissions_list.html) to limit which areas of your account they may be used to access. [API Keys can be generated in your account](https://app.sendgrid.com/settings/api_keys). To use keys, you must set a plain text header named “Authorization” with the contents of the header being “Bearer XXX” where XXX is your API Secret Key.

      ### Example Header

      ```bash
      GET https://api.sendgrid.com/v3/resource HTTP/1.1
      Authorization: Bearer Your.API.Key-HERE
      ```

      ```bash
      curl -X "GET" "https://api.sendgrid.com/v3/templates" -H "Authorization: Bearer Your.API.Key-HERE" -H "Content-Type: application/json"
      ```
  - title: API Key Permissions
    content: |-
      API Keys can be used to authenticate the use of SendGrid’s v3 API, or the [Mail API endpoint](#v3-mail-send). API Keys may be assigned certain permissions, or scopes, that limit which API endpoints they are able to access. For a more detailed explanation of how you can use API Key permissions, please visit our [Classroom](https://sendgrid.com/docs/Classroom/Basics/API/api_key_permissions.html). 

      The following is a complete list of all possible permissions that you may assign to an API Key.

      * [Admin API Key Permissions](#Admin-API-Key-Permissions)
      * [Alerts](#Alerts)
      * [API Keys](#API-Keys)
      * [ASM Groups](#ASM-Groups)
      * [Billing](#Billing)
      * [Categories](#Categories)
      * [Clients](#Clients)
      * [Credentials](#Credentials)
      * [IPs](#IPs)
      * [Mail Settings](#Mail-Settings)
      * [Mail](#Mail)
      * [Marketing Campaigns](#Marketing-Campaigns)
      * [Partner Settings](#Partner-Settings)
      * [Scheduled Sends](#Scheduled-Sends)
      * [Stats](#Stats)
      * [Subusers](#Subusers)
      * [Suppressions](#Suppressions)
      * [Templates](#Templates)
      * [Tracking](#Tracking)
      * [User Settings](#User-Settings)
      * [Webhook](#Webhook)
      * [Whitelabel](#Whitelabel)
      * [Whitelist](#Whitelist)

      <h2>
        <a name="Admin-API-Key-Permissions" href="#Admin-API-Key-Permissions">
          Admin API Key Permissions
        </a>
      </h2>

      Below is a complete list of every API Key permission that should be given to an admin level API Key.

      ```json
      "scopes": [
        "access_settings.activity.read",
        "access_settings.whitelist.create",
        "access_settings.whitelist.delete",
        "access_settings.whitelist.read",
        "access_settings.whitelist.update",
        "alerts.create",
        "alerts.delete",
        "alerts.read",
        "alerts.update",
        "api_keys.create",
        "api_keys.delete",
        "api_keys.read",
        "api_keys.update",
        "asm.groups.create",
        "asm.groups.delete",
        "asm.groups.read",
        "asm.groups.update",
        "billing.create",
        "billing.delete",
        "billing.read",
        "billing.update",
        "browsers.stats.read",
        "categories.create",
        "categories.delete",
        "categories.read",
        "categories.stats.read",
        "categories.stats.sums.read",
        "categories.update",
        "clients.desktop.stats.read",
        "clients.phone.stats.read",
        "clients.stats.read",
        "clients.tablet.stats.read",
        "clients.webmail.stats.read",
        "credentials.create",
        "credentials.delete",
        "credentials.read",
        "credentials.update",
        "devices.stats.read",
        "email_activity.read",
        "geo.stats.read",
        "ips.assigned.read",
        "ips.pools.create",
        "ips.pools.delete",
        "ips.pools.ips.create",
        "ips.pools.ips.delete",
        "ips.pools.ips.read",
        "ips.pools.ips.update",
        "ips.pools.read",
        "ips.pools.update",
        "ips.read",
        "ips.warmup.create",
        "ips.warmup.delete",
        "ips.warmup.read",
        "ips.warmup.update",
        "mail_settings.address_whitelist.read",
        "mail_settings.address_whitelist.update",
        "mail_settings.bcc.read",
        "mail_settings.bcc.update",
        "mail_settings.bounce_purge.read",
        "mail_settings.bounce_purge.update",
        "mail_settings.footer.read",
        "mail_settings.footer.update",
        "mail_settings.forward_bounce.read",
        "mail_settings.forward_bounce.update",
        "mail_settings.forward_spam.read",
        "mail_settings.forward_spam.update",
        "mail_settings.plain_content.read",
        "mail_settings.plain_content.update",
        "mail_settings.read",
        "mail_settings.spam_check.read",
        "mail_settings.spam_check.update",
        "mail_settings.template.read",
        "mail_settings.template.update",
        "mail.batch.create",
        "mail.batch.delete",
        "mail.batch.read",
        "mail.batch.update",
        "mail.send",
        "mailbox_providers.stats.read",
        "marketing_campaigns.create",
        "marketing_campaigns.delete",
        "marketing_campaigns.read",
        "marketing_campaigns.update",
        "newsletter.create",
        "newsletter.delete",
        "newsletter.read",
        "newsletter.update",
        "partner_settings.new_relic.read",
        "partner_settings.new_relic.update",
        "partner_settings.read",
        "partner_settings.sendwithus.read",
        "partner_settings.sendwithus.update",
        "stats.global.read",
        "stats.read",
        "subusers.create",
        "subusers.credits.create",
        "subusers.credits.delete",
        "subusers.credits.read",
        "subusers.credits.remaining.create",
        "subusers.credits.remaining.delete",
        "subusers.credits.remaining.read",
        "subusers.credits.remaining.update",
        "subusers.credits.update",
        "subusers.delete",
        "subusers.monitor.create",
        "subusers.monitor.delete",
        "subusers.monitor.read",
        "subusers.monitor.update",
        "subusers.read",
        "subusers.reputations.read",
        "subusers.stats.monthly.read",
        "subusers.stats.read",
        "subusers.stats.sums.read",
        "subusers.summary.read",
        "subusers.update",
        "suppression.blocks.create",
        "suppression.blocks.delete",
        "suppression.blocks.read",
        "suppression.blocks.update",
        "suppression.bounces.create",
        "suppression.bounces.delete",
        "suppression.bounces.read",
        "suppression.bounces.update",
        "suppression.create",
        "suppression.delete",
        "suppression.invalid_emails.create",
        "suppression.invalid_emails.delete",
        "suppression.invalid_emails.read",
        "suppression.invalid_emails.update",
        "suppression.read",
        "suppression.spam_reports.create",
        "suppression.spam_reports.delete",
        "suppression.spam_reports.read",
        "suppression.spam_reports.update",
        "suppression.unsubscribes.create",
        "suppression.unsubscribes.delete",
        "suppression.unsubscribes.read",
        "suppression.unsubscribes.update",
        "suppression.update",
        "templates.create",
        "templates.delete",
        "templates.read",
        "templates.update",
        "templates.versions.activate.create",
        "templates.versions.activate.delete",
        "templates.versions.activate.read",
        "templates.versions.activate.update",
        "templates.versions.create",
        "templates.versions.delete",
        "templates.versions.read",
        "templates.versions.update",
        "tracking_settings.click.read",
        "tracking_settings.click.update",
        "tracking_settings.google_analytics.read",
        "tracking_settings.google_analytics.update",
        "tracking_settings.open.read",
        "tracking_settings.open.update",
        "tracking_settings.read",
        "tracking_settings.subscription.read",
        "tracking_settings.subscription.update",
        "user.account.read",
        "user.credits.read",
        "user.email.create",
        "user.email.delete",
        "user.email.read",
        "user.email.update",
        "user.multifactor_authentication.create",
        "user.multifactor_authentication.delete",
        "user.multifactor_authentication.read",
        "user.multifactor_authentication.update",
        "user.password.read",
        "user.password.update",
        "user.profile.read",
        "user.profile.update",
        "user.scheduled_sends.create",
        "user.scheduled_sends.delete",
        "user.scheduled_sends.read",
        "user.scheduled_sends.update",
        "user.settings.enforced_tls.read",
        "user.settings.enforced_tls.update",
        "user.timezone.read",
        "user.username.read",
        "user.username.update",
        "user.webhooks.event.settings.read",
        "user.webhooks.event.settings.update",
        "user.webhooks.event.test.create",
        "user.webhooks.event.test.read",
        "user.webhooks.event.test.update",
        "user.webhooks.parse.settings.create",
        "user.webhooks.parse.settings.delete",
        "user.webhooks.parse.settings.read",
        "user.webhooks.parse.settings.update",
        "user.webhooks.parse.stats.read",
        "whitelabel.create",
        "whitelabel.delete",
        "whitelabel.read",
        "whitelabel.update"
      ]
      ```

      <h2>
        <a name="Alerts" href="#Alerts">
          Alerts
        </a>
      </h2>

      ```json
      "scopes": [
        "alerts.create",
        "alerts.delete",
        "alerts.read",
        "alerts.update"
      ]
      ```

      <h2>
        <a name="API-Keys" href="#API-Keys">
          API Keys
        </a>
      </h2>

      ```json
      "scopes": [
        "api_keys.create",
        "api_keys.delete",
        "api_keys.read",
        "api_keys.update"
      ]
      ```

      <h2>
        <a name="ASM-Groups" href="#ASM-Groups">
          ASM Groups
        </a>
      </h2>

      ```json
      "scopes": [
        "asm.groups.create",
        "asm.groups.delete",
        "asm.groups.read",
        "asm.groups.update"
      ]
      ```

      <h2>
        <a name="Billing" href="#Billing">
          Billing
        </a>
      </h2>

      **As explained in the [Classroom](https://sendgrid.com/docs/Classroom/Basics/API/api_key_permissions.html), Billing permissions are mutually exclusive from all other permissions. An API key can _either_ Billing permissions, or any other set of permissions, but not _both_.**

      ```json
      "scopes": [
        "billing.create",
        "billing.delete",
        "billing.read",
        "billing.update"
      ]
      ```

      <h2>
        <a name="Categories" href="#Categories">
          Categories
        </a>
      </h2>

      ```json
      "scopes": [
        "categories.create",
        "categories.delete",
        "categories.read",
        "categories.update",
        "categories.stats.read",
        "categories.stats.sums.read"
      ]
      ```

      <h2>
        <a name="Clients" href="#Clients">
          Clients
        </a>
      </h2>

      ```json
      "scopes": [
        "clients.desktop.stats.read",
        "clients.phone.stats.read",
        "clients.stats.read",
        "clients.tablet.stats.read",
        "clients.webmail.stats.read"
      ]
      ```


      <h2>
        <a name="Credentials" href="#Credentials">
          Credentials
        </a>
      </h2>

      ```json
      "scopes": [
        "credentials.create",
        "credentials.delete",
        "credentials.read",
        "credentials.update"
      ]
      ```

      <h2>
        <a name="IPs" href="#IPs">
          IPs
        </a>
      </h2>

      ```json
      "scopes": [
        "ips.assigned.read",
        "ips.read",
        "ips.pools.create",
        "ips.pools.delete",
        "ips.pools.read",
        "ips.pools.update",
        "ips.pools.ips.create",
        "ips.pools.ips.delete",
        "ips.pools.ips.read",
        "ips.pools.ips.update",
        "ips.warmup.create",
        "ips.warmup.delete",
        "ips.warmup.read",
        "ips.warmup.update"
      ]
      ```

      <h2>
        <a name="Mail-Settings" href="#Mail-Settings">
          Mail Settings
        </a>
      </h2>

      ```json
      "scopes": [
        "mail_settings.address_whitelist.read",
        "mail_settings.address_whitelist.update",
        "mail_settings.bcc.read",
        "mail_settings.bcc.update",
        "mail_settings.bounce_purge.read",
        "mail_settings.bounce_purge.update",
        "mail_settings.footer.read",
        "mail_settings.footer.update",
        "mail_settings.forward_bounce.read",
        "mail_settings.forward_bounce.update",
        "mail_settings.forward_spam.read",
        "mail_settings.forward_spam.update",
        "mail_settings.plain_content.read",
        "mail_settings.plain_content.update",
        "mail_settings.read",
        "mail_settings.spam_check.read",
        "mail_settings.spam_check.update",
        "mail_settings.template.read",
        "mail_settings.template.update"
      ]
      ```

      <h2>
        <a name="Mail" href="#Mail">
          Mail
        </a>
      </h2>

      ```json
      "scopes": [
        "mail.batch.create",
        "mail.batch.delete",
        "mail.batch.read",
        "mail.batch.update",
        "mail.send"
      ]
      ```

      <h2>
        <a name="Marketing-Campaigns" href="#Marketing-Campaigns">
          Marketing Campaigns
        </a>
      </h2>

      ```json
      "scopes": [
        "marketing_campaigns.create",
        "marketing_campaigns.delete",
        "marketing_campaigns.read",
        "marketing_campaigns.update"
      ]
      ```

      <h2>
        <a name="Newsletter" href="#Newsletter">
          Newsletter
        </a>
      </h2>

      ```json
      "scopes": [
        "newsletter.create",
        "newsletter.delete",
        "newsletter.read",
        "newsletter.update"
      ]
      ```

      <h2>
        <a name="Partner-Settings" href="#Partner-Settings">
          Partner-Settings
        </a>
      </h2>

      ```json
      "scopes": [
        "partner_settings.new_relic.read",
        "partner_settings.new_relic.update",
        "partner_settings.read",
        "partner_settings.sendwithus.read",
        "partner_settings.sendwithus.update"
      ]
      ```

      <h2>
        <a name="Scheduled-Sends" href="#Scheduled-Sends">
          Scheduled Sends
        </a>
      </h2>

      ```json
      "scopes": [
        "user.scheduled_sends.create",
        "user.scheduled_sends.delete",
        "user.scheduled_sends.read",
        "user.scheduled_sends.update"
      ]
      ```

      <h2>
        <a name="Stats" href="#Stats">
          Stats
        </a>
      </h2>

      ```json
      "scopes": [
        "email_activity.read",
        "stats.read",
        "stats.global.read",
        "browsers.stats.read",
        "devices.stats.read",
        "geo.stats.read",
        "mailbox_providers.stats.read",
        "clients.desktop.stats.read",
        "clients.phone.stats.read",
        "clients.stats.read",
        "clients.tablet.stats.read",
        "clients.webmail.stats.read"
      ]
      ```

      <h2>
        <a name="Subusers" href="#Subusers">
          Subusers
        </a>
      </h2>

      ```json
      "scopes": [
        "subusers.create",
        "subusers.delete",
        "subusers.read",
        "subusers.update",
        "subusers.credits.create",
        "subusers.credits.delete",
        "subusers.credits.read",
        "subusers.credits.update",
        "subusers.credits.remaining.create",
        "subusers.credits.remaining.delete",
        "subusers.credits.remaining.read",
        "subusers.credits.remaining.update",
        "subusers.monitor.create",
        "subusers.monitor.delete",
        "subusers.monitor.read",
        "subusers.monitor.update",
        "subusers.reputations.read",
        "subusers.stats.read",
        "subusers.stats.monthly.read",
        "subusers.stats.sums.read"
        "subusers.summary.read"
      ]
      ```

      <h2>
        <a name="Suppressions" href="#Suppressions">
          Suppressions
        </a>
      </h2>

      ```json
      "scopes": [
        "suppression.create",
        "suppression.delete",
        "suppression.read",
        "suppression.update",
        "suppression.bounces.create",
        "suppression.bounces.read",
        "suppression.bounces.update",
        "suppression.bounces.delete",
        "suppression.blocks.create",
        "suppression.blocks.read",
        "suppression.blocks.update",
        "suppression.blocks.delete",
        "suppression.invalid_emails.create",
        "suppression.invalid_emails.read",
        "suppression.invalid_emails.update",
        "suppression.invalid_emails.delete",
        "suppression.spam_reports.create",
        "suppression.spam_reports.read",
        "suppression.spam_reports.update",
        "suppression.spam_reports.delete",
        "suppression.unsubscribes.create",
        "suppression.unsubscribes.read",
        "suppression.unsubscribes.update",
        "suppression.unsubscribes.delete"
      ]
      ```


      <h2>
        <a name="Templates" href="#Templates">
          Templates
        </a>
      </h2>

      ```json
      "scopes": [
        "templates.create",
        "templates.delete",
        "templates.read",
        "templates.update",
        "templates.versions.activate.create",
        "templates.versions.activate.delete",
        "templates.versions.activate.read",
        "templates.versions.activate.update",
        "templates.versions.create",
        "templates.versions.delete",
        "templates.versions.read",
        "templates.versions.update"
      ]
      ```

      <h2>
        <a name="Tracking" href="#Tracking">
          Tracking
        </a>
      </h2>

      ```json
      "scopes": [
        "tracking_settings.click.read",
        "tracking_settings.click.update",
        "tracking_settings.google_analytics.read",
        "tracking_settings.google_analytics.update",
        "tracking_settings.open.read",
        "tracking_settings.open.update",
        "tracking_settings.read",
        "tracking_settings.subscription.read",
        "tracking_settings.subscription.update"
      ]
      ```

      <h2>
        <a name="User-Settings" href="#User-Settings">
          User Settings
        </a>
      </h2>

      ```json
      "scopes": [
        "user.account.read",
        "user.credits.read",
        "user.email.create",
        "user.email.delete",
        "user.email.read",
        "user.email.update",
        "user.multifactor_authentication.create",
        "user.multifactor_authentication.delete",
        "user.multifactor_authentication.read",
        "user.multifactor_authentication.update",
        "user.password.read",
        "user.password.update",
        "user.profile.read",
        "user.profile.update",
        "user.settings.enforced_tls.read",
        "user.settings.enforced_tls.update",
        "user.timezone.read",
        "user.timezone.update",
        "user.username.read",
        "user.username.update"
      ]
      ```


      <h2>
        <a name="Webhook" href="#Webhook">
          Webhook
        </a>
      </h2>

      ```json
      "scopes": [
        "user.webhooks.event.settings.read",
        "user.webhooks.event.settings.update",
        "user.webhooks.event.test.create",
        "user.webhooks.event.test.read",
        "user.webhooks.event.test.update",
        "user.webhooks.parse.settings.create",
        "user.webhooks.parse.settings.delete",
        "user.webhooks.parse.settings.read",
        "user.webhooks.parse.settings.update",
        "user.webhooks.parse.stats.read"
      ]
      ```

      <h2>
        <a name="Whitelabel" href="#Whitelabel">
          Whitelabel
        </a>
      </h2>

      ```json
      "scopes": [
        "whitelabel.create",
        "whitelabel.delete",
        "whitelabel.read",
        "whitelabel.update"
      ]
      ```

      <h2>
        <a name="Whitelist" href="#Whitelist">
          Whitelist
        </a>
      </h2>

      ```json
      "scopes": [
        "access_settings.activity.read",
        "access_settings.whitelist.create",
        "access_settings.whitelist.delete",
        "access_settings.whitelist.read",
        "access_settings.whitelist.update"
      ]
      ```
  - title: Authorization
    content: |-
      # API Key Permissions List

      [API Keys](https://sendgrid.com/docs/API_Reference/Web_API_v3/API_Keys/index.html) can be used to authenticate the use of SendGrid’s v3 Web API, or the [Mail API endpoint](https://sendgrid.com/docs/API_Reference/api_v3.html). API Keys may be assigned certain permissions, or scopes, that limit which API endpoints they are able to access. For a more detailed explanation of how you can use API Key permissions, please visit our [Classroom](https://sendgrid.com/docs/Classroom/Basics/API/api_key_permissions.html). 

      The following is a complete list of all possible permissions that you may assign to an API Key.

      ## Table of Contents

      <table>
      <tr><td><a href="#Alerts">Alerts</a></h3></td><td><a href="#Mail-Settings">Mail Settings</a></td><td><a href="#Teammates">Teammates</a></td></tr>
      <tr><td><a href="#API-Keys">API Keys</a></td><td><a href="#Mail">Mail</a></td><td><a href="#Templates">Templates</a></td></tr>
      <tr><td><a href="#ASM-Groups">ASM Groups</a></td><td><a href="#Marketing-Campaigns">Marketing Campaigns</a></td><td><a href="#Suppressions">Suppressions</a></td></tr>
      <tr><td><a href="#Billing">Billing</a></td><td><a href="#Partner-Settings">Partner Settings</a></td><td><a href="#Tracking">Tracking</a></td></tr>
      <tr><td><a href="#Categories">Categories</a></td><td><a href="#Scheduled-Sends">Scheduled Sends</a></td><td><a href="#User-Settings">User Settings</a></td></tr>
      <tr><td><a href="#Stats">Stats</a></td><td><a href="#Webhook">Webhook</a></td><td><a href="#-IPs">IPs</a></td></tr>
      <tr><td><a href="#Subusers">Subusers</a></td><td><a href="#Whitelabel">Whitelabel</a></td><td><a href="#Whitelist">Whitelist</a></td></tr>
      <tr><td><a href="#Admin-API-Key-Scopes">Admin API Key Scopes</a></td></tr>
      </table>


      <h2 class="anchor-wrap"><a name="Alerts" class="anchor"><span class="anchor-icon"><i class="icon-link"></i></span></a>Alerts</h2>

      ```json
      "scopes": [
        "alerts.create",
        "alerts.delete",
        "alerts.read",
        "alerts.update"
      ]
      ```

      <h2 class="anchor-wrap"><a name="API-Keys" class="anchor"><span class="anchor-icon"><i class="icon-link"></i></span></a>API Keys</h2>

      ```json
      "scopes": [
        "api_keys.create",
        "api_keys.delete",
        "api_keys.read",
        "api_keys.update"
      ]
      ```

      <h2 class="anchor-wrap"><a name="ASM-Groups" class="anchor"><span class="anchor-icon"><i class="icon-link"></i></span></a>ASM Groups</h2>

      ```json
      "scopes": [
        "asm.groups.create",
        "asm.groups.delete",
        "asm.groups.read",
        "asm.groups.update"
      ]
      ```


      <h2 class="anchor-wrap"><a name="Billing" class="anchor"><span class="anchor-icon"><i class="icon-link"></i></span></a>Billing</h2>

      ```json
      "scopes": [
        "billing.create",
        "billing.delete",
        "billing.read",
        "billing.update"
      ]
      ```


      **As explained in the <a href="{{root_url}}/Classroom/Basics/API/api_key_permissions.html">Classroom</a>, Billing permissions are mutually exclusive from all others. An API Key can *either* have Billing Permissions, or any other set of Permissions.**


      <h2 class="anchor-wrap"><a name="Categories" class="anchor"><span class="anchor-icon"><i class="icon-link"></i></span></a>Categories</h2>

      ```json
      "scopes": [
        "categories.create",
        "categories.delete",
        "categories.read",
        "categories.update",
        "categories.stats.read",
        "categories.stats.sums.read"
      ]
      ```

      <h2 class="anchor-wrap"><a name="Stats" class="anchor"><span class="anchor-icon"><i class="icon-link"></i></span></a>Stats</h2>

      ```json
      "scopes": [
        "email_activity.read",
        "stats.read",
        "stats.global.read",
        "browsers.stats.read",
        "devices.stats.read",
        "geo.stats.read",
        "mailbox_providers.stats.read",
        "clients.desktop.stats.read",
        "clients.phone.stats.read",
        "clients.stats.read",
        "clients.tablet.stats.read",
        "clients.webmail.stats.read"
      ]
      ```

      <h2 class="anchor-wrap"><a name="IPs" class="anchor"><span class="anchor-icon"><i class="icon-link"></i></span></a>IPs</h2>

      ```json
      "scopes": [
        "ips.assigned.read",
        "ips.read",
        "ips.pools.create",
        "ips.pools.delete",
        "ips.pools.read",
        "ips.pools.update",
        "ips.pools.ips.create",
        "ips.pools.ips.delete",
        "ips.pools.ips.read",
        "ips.pools.ips.update",
        "ips.warmup.create",
        "ips.warmup.delete",
        "ips.warmup.read",
        "ips.warmup.update"
      ]
      ```

      <h2 class="anchor-wrap"><a name="Mail-Settings" class="anchor"><span class="anchor-icon"><i class="icon-link"></i></span></a>Mail Settings</h2>

      ```json
      "scopes": [
        "mail_settings.address_whitelist.read",
        "mail_settings.address_whitelist.update",
        "mail_settings.bcc.read",
        "mail_settings.bcc.update",
        "mail_settings.bounce_purge.read",
        "mail_settings.bounce_purge.update",
        "mail_settings.footer.read",
        "mail_settings.footer.update",
        "mail_settings.forward_bounce.read",
        "mail_settings.forward_bounce.update",
        "mail_settings.forward_spam.read",
        "mail_settings.forward_spam.update",
        "mail_settings.plain_content.read",
        "mail_settings.plain_content.update",
        "mail_settings.read",
        "mail_settings.spam_check.read",
        "mail_settings.spam_check.update",
        "mail_settings.template.read",
        "mail_settings.template.update"
      ]
      ```

      <h2 class="anchor-wrap"><a name="Mail" class="anchor"><span class="anchor-icon"><i class="icon-link"></i></span></a>Mail</h2>

      ```json
      "scopes": [
        "mail.batch.create",
        "mail.batch.delete",
        "mail.batch.read",
        "mail.batch.update",
        "mail.send"
      ]
      ```

      <h2 class="anchor-wrap"><a name="Marketing-Campaigns" class="anchor"><span class="anchor-icon"><i class="icon-link"></i></span></a>Marketing Campaigns</h2>

      ```json
      "scopes": [
        "marketing_campaigns.create",
        "marketing_campaigns.delete",
        "marketing_campaigns.read",
        "marketing_campaigns.update"
      ]
      ```

      <h2 class="anchor-wrap"><a name="Newsletter" class="anchor"><span class="anchor-icon"><i class="icon-link"></i></span></a>Newsletter</h2>

      ```json
      "scopes": [
        "newsletter.create",
        "newsletter.delete",
        "newsletter.read",
        "newsletter.update"
      ]
      ```

      <h2 class="anchor-wrap"><a name="Partner-Settings" class="anchor"><span class="anchor-icon"><i class="icon-link"></i></span></a>Partner Settings</h2>

      ```json
      "scopes": [
        "partner_settings.new_relic.read",
        "partner_settings.new_relic.update",
        "partner_settings.read",
        "partner_settings.sendwithus.read",
        "partner_settings.sendwithus.update"
      ]
      ```

      <h2 class="anchor-wrap"><a name="Scheduled Sends" class="anchor"><span class="anchor-icon"><i class="icon-link"></i></span></a>Scheduled Sends</h2>

      ```json
      "scopes": [
        "user.scheduled_sends.create",
        "user.scheduled_sends.delete",
        "user.scheduled_sends.read",
        "user.scheduled_sends.update"
      ]
      ```

      <h2 class="anchor-wrap"><a name="Subusers" class="anchor"><span class="anchor-icon"><i class="icon-link"></i></span></a>Subusers</h2>

      ```json
      "scopes": [
        "subusers.create",
        "subusers.delete",
        "subusers.read",
        "subusers.update",
        "subusers.credits.create",
        "subusers.credits.delete",
        "subusers.credits.read",
        "subusers.credits.update",
        "subusers.credits.remaining.create",
        "subusers.credits.remaining.delete",
        "subusers.credits.remaining.read",
        "subusers.credits.remaining.update",
        "subusers.monitor.create",
        "subusers.monitor.delete",
        "subusers.monitor.read",
        "subusers.monitor.update",
        "subusers.reputations.read",
        "subusers.stats.read",
        "subusers.stats.monthly.read",
        "subusers.stats.sums.read"
        "subusers.summary.read"
      ]
      ```

      <h2 class="anchor-wrap"><a name="Suppressions" class="anchor"><span class="anchor-icon"><i class="icon-link"></i></span></a>Suppressions</h2>

      ```json
      "scopes": [
        "suppression.create",
        "suppression.delete",
        "suppression.read",
        "suppression.update",
        "suppression.bounces.create",
        "suppression.bounces.read",
        "suppression.bounces.update",
        "suppression.bounces.delete",
        "suppression.blocks.create",
        "suppression.blocks.read",
        "suppression.blocks.update",
        "suppression.blocks.delete",
        "suppression.invalid_emails.create",
        "suppression.invalid_emails.read",
        "suppression.invalid_emails.update",
        "suppression.invalid_emails.delete",
        "suppression.spam_reports.create",
        "suppression.spam_reports.read",
        "suppression.spam_reports.update",
        "suppression.spam_reports.delete",
        "suppression.unsubscribes.create",
        "suppression.unsubscribes.read",
        "suppression.unsubscribes.update",
        "suppression.unsubscribes.delete"
      ]
      ```

      <h2 class="anchor-wrap"><a name="Teammates" class="anchor"><span class="anchor-icon"><i class="icon-link"></i></span></a>Teammates</h2>

      ```json
      "scopes": [
        "teammates.create",
        "teammates.read",
        "teammates.update",
        "teammates.delete"
      ]
      ```

      <h2 class="anchor-wrap"><a name="Templates" class="anchor"><span class="anchor-icon"><i class="icon-link"></i></span></a>Templates</h2>

      ```json
      "scopes": [
        "templates.create",
        "templates.delete",
        "templates.read",
        "templates.update",
        "templates.versions.activate.create",
        "templates.versions.activate.delete",
        "templates.versions.activate.read",
        "templates.versions.activate.update",
        "templates.versions.create",
        "templates.versions.delete",
        "templates.versions.read",
        "templates.versions.update"
      ]
      ```

      <h2 class="anchor-wrap"><a name="Tracking" class="anchor"><span class="anchor-icon"><i class="icon-link"></i></span></a>Tracking</h2>

      ```json
      "scopes": [
        "tracking_settings.click.read",
        "tracking_settings.click.update",
        "tracking_settings.google_analytics.read",
        "tracking_settings.google_analytics.update",
        "tracking_settings.open.read",
        "tracking_settings.open.update",
        "tracking_settings.read",
        "tracking_settings.subscription.read",
        "tracking_settings.subscription.update"
      ]
      ```

      <h2 class="anchor-wrap"><a name="User-Settings" class="anchor"><span class="anchor-icon"><i class="icon-link"></i></span></a>User Settings</h2>

      ```json
      "scopes": [
        "user.account.read",
        "user.credits.read",
        "user.email.create",
        "user.email.delete",
        "user.email.read",
        "user.email.update",
        "user.multifactor_authentication.create",
        "user.multifactor_authentication.delete",
        "user.multifactor_authentication.read",
        "user.multifactor_authentication.update",
        "user.password.read",
        "user.password.update",
        "user.profile.read",
        "user.profile.update",
        "user.settings.enforced_tls.read",
        "user.settings.enforced_tls.update",
        "user.timezone.read",
        "user.timezone.update",
        "user.username.read",
        "user.username.update"
      ]
      ```

      <h2 class="anchor-wrap"><a name="Webhook" class="anchor"><span class="anchor-icon"><i class="icon-link"></i></span></a>Webhook</h2>

      ```json
      "scopes": [
        "user.webhooks.event.settings.read",
        "user.webhooks.event.settings.update",
        "user.webhooks.event.test.create",
        "user.webhooks.event.test.read",
        "user.webhooks.event.test.update",
        "user.webhooks.parse.settings.create",
        "user.webhooks.parse.settings.delete",
        "user.webhooks.parse.settings.read",
        "user.webhooks.parse.settings.update",
        "user.webhooks.parse.stats.read"
      ]
      ```

      <h2 class="anchor-wrap"><a name="Whitelabel" class="anchor"><span class="anchor-icon"><i class="icon-link"></i></span></a>Whitelabel</h2>

      ```json
      "scopes": [
        "whitelabel.create",
        "whitelabel.delete",
        "whitelabel.read",
        "whitelabel.update"
      ]
      ```

      <h2 class="anchor-wrap"><a name="Whitelist" class="anchor"><span class="anchor-icon"><i class="icon-link"></i></span></a>Whitelist</h2>

      ```json
      "scopes": [
        "access_settings.activity.read",
        "access_settings.whitelist.create",
        "access_settings.whitelist.delete",
        "access_settings.whitelist.read",
        "access_settings.whitelist.update"
      ]
      ```

      <h2 class="anchor-wrap"><a name="Admin-API-Key-Scopes" class="anchor"><span class="anchor-icon"><i class="icon-link"></i></span></a>Admin API Key Scopes</h2>

      Below is a complete list of every API Key scope to be given to an admin level API Key.

      ```json
      "scopes": [
        "access_settings.activity.read",
        "access_settings.whitelist.create",
        "access_settings.whitelist.delete",
        "access_settings.whitelist.read",
        "access_settings.whitelist.update",
        "alerts.create",
        "alerts.delete",
        "alerts.read",
        "alerts.update",
        "api_keys.create",
        "api_keys.delete",
        "api_keys.read",
        "api_keys.update",
        "asm.groups.create",
        "asm.groups.delete",
        "asm.groups.read",
        "asm.groups.update",
        "billing.create",
        "billing.delete",
        "billing.read",
        "billing.update",
        "browsers.stats.read",
        "categories.create",
        "categories.delete",
        "categories.read",
        "categories.stats.read",
        "categories.stats.sums.read",
        "categories.update",
        "clients.desktop.stats.read",
        "clients.phone.stats.read",
        "clients.stats.read",
        "clients.tablet.stats.read",
        "clients.webmail.stats.read",
        "devices.stats.read",
        "email_activity.read",
        "geo.stats.read",
        "ips.assigned.read",
        "ips.pools.create",
        "ips.pools.delete",
        "ips.pools.ips.create",
        "ips.pools.ips.delete",
        "ips.pools.ips.read",
        "ips.pools.ips.update",
        "ips.pools.read",
        "ips.pools.update",
        "ips.read",
        "ips.warmup.create",
        "ips.warmup.delete",
        "ips.warmup.read",
        "ips.warmup.update",
        "mail_settings.address_whitelist.read",
        "mail_settings.address_whitelist.update",
        "mail_settings.bcc.read",
        "mail_settings.bcc.update",
        "mail_settings.bounce_purge.read",
        "mail_settings.bounce_purge.update",
        "mail_settings.footer.read",
        "mail_settings.footer.update",
        "mail_settings.forward_bounce.read",
        "mail_settings.forward_bounce.update",
        "mail_settings.forward_spam.read",
        "mail_settings.forward_spam.update",
        "mail_settings.plain_content.read",
        "mail_settings.plain_content.update",
        "mail_settings.read",
        "mail_settings.spam_check.read",
        "mail_settings.spam_check.update",
        "mail_settings.template.read",
        "mail_settings.template.update",
        "mail.batch.create",
        "mail.batch.delete",
        "mail.batch.read",
        "mail.batch.update",
        "mail.send",
        "mailbox_providers.stats.read",
        "marketing_campaigns.create",
        "marketing_campaigns.delete",
        "marketing_campaigns.read",
        "marketing_campaigns.update",
        "newsletter.create",
        "newsletter.delete",
        "newsletter.read",
        "newsletter.update",
        "partner_settings.new_relic.read",
        "partner_settings.new_relic.update",
        "partner_settings.read",
        "partner_settings.sendwithus.read",
        "partner_settings.sendwithus.update",
        "stats.global.read",
        "stats.read",
        "subusers.create",
        "subusers.credits.create",
        "subusers.credits.delete",
        "subusers.credits.read",
        "subusers.credits.remaining.create",
        "subusers.credits.remaining.delete",
        "subusers.credits.remaining.read",
        "subusers.credits.remaining.update",
        "subusers.credits.update",
        "subusers.delete",
        "subusers.monitor.create",
        "subusers.monitor.delete",
        "subusers.monitor.read",
        "subusers.monitor.update",
        "subusers.read",
        "subusers.reputations.read",
        "subusers.stats.monthly.read",
        "subusers.stats.read",
        "subusers.stats.sums.read",
        "subusers.summary.read",
        "subusers.update",
        "suppression.blocks.create",
        "suppression.blocks.delete",
        "suppression.blocks.read",
        "suppression.blocks.update",
        "suppression.bounces.create",
        "suppression.bounces.delete",
        "suppression.bounces.read",
        "suppression.bounces.update",
        "suppression.create",
        "suppression.delete",
        "suppression.invalid_emails.create",
        "suppression.invalid_emails.delete",
        "suppression.invalid_emails.read",
        "suppression.invalid_emails.update",
        "suppression.read",
        "suppression.spam_reports.create",
        "suppression.spam_reports.delete",
        "suppression.spam_reports.read",
        "suppression.spam_reports.update",
        "suppression.unsubscribes.create",
        "suppression.unsubscribes.delete",
        "suppression.unsubscribes.read",
        "suppression.unsubscribes.update",
        "suppression.update",
        "teammates.create",
        "teammates.read",
        "teammates.update",
        "teammates.delete",
        "templates.create",
        "templates.delete",
        "templates.read",
        "templates.update",
        "templates.versions.activate.create",
        "templates.versions.activate.delete",
        "templates.versions.activate.read",
        "templates.versions.activate.update",
        "templates.versions.create",
        "templates.versions.delete",
        "templates.versions.read",
        "templates.versions.update",
        "tracking_settings.click.read",
        "tracking_settings.click.update",
        "tracking_settings.google_analytics.read",
        "tracking_settings.google_analytics.update",
        "tracking_settings.open.read",
        "tracking_settings.open.update",
        "tracking_settings.read",
        "tracking_settings.subscription.read",
        "tracking_settings.subscription.update",
        "user.account.read",
        "user.credits.read",
        "user.email.create",
        "user.email.delete",
        "user.email.read",
        "user.email.update",
        "user.multifactor_authentication.create",
        "user.multifactor_authentication.delete",
        "user.multifactor_authentication.read",
        "user.multifactor_authentication.update",
        "user.password.read",
        "user.password.update",
        "user.profile.read",
        "user.profile.update",
        "user.scheduled_sends.create",
        "user.scheduled_sends.delete",
        "user.scheduled_sends.read",
        "user.scheduled_sends.update",
        "user.settings.enforced_tls.read",
        "user.settings.enforced_tls.update",
        "user.timezone.read",
        "user.username.read",
        "user.username.update",
        "user.webhooks.event.settings.read",
        "user.webhooks.event.settings.update",
        "user.webhooks.event.test.create",
        "user.webhooks.event.test.read",
        "user.webhooks.event.test.update",
        "user.webhooks.parse.settings.create",
        "user.webhooks.parse.settings.delete",
        "user.webhooks.parse.settings.read",
        "user.webhooks.parse.settings.update",
        "user.webhooks.parse.stats.read",
        "whitelabel.create",
        "whitelabel.delete",
        "whitelabel.read",
        "whitelabel.update"
      ]
      ```
  - title: Requests
    content: |-
      ## Making a Request

      ### Host

      The host for Web API v3 requets is always `https://sendgrid.com/v3/`

      **All requests must be made over HTTPS. HTTP is not supported.**

      ### Authorization Header

      You must provide an authorization header as described in [Authentication]().

      ### HTTP Verbs

      | **Verb** | **Description** |
      | --- | --- |
      | GET |  Retrieve a resource or gropu of resources |
      | POST| Create a new resource |
      | PUT | Update an existing resource |
      | DELTE | Delete an existing resource |
      | OPTIONS | View allowed verbs against a specific resource |

      ### Accept Header

      The API provides JSON responses. The [accept header](http://www.soapui.org/Best-Practices/understanding-rest-headers-and-parameters.html) is not currently required, though it may be required in the future. If not set, the API will use `application/json`.

      ```bash
      GET https://api.sendgrid.com/v3/endpoint HTTP/1.1
      Accept: application/json
      ```

      ### Arrays of Data

      When you send an array of data in a `GET` request, you will include the parameter multiple times on the URL. We do not require that you add brackets to the parameter name.

      #### Example Array in a GET request\

      ```bash
      GET https://api.sendgrid.com/v3/endpoint?parameter=data1&parameter=data2 HTTP/1.1
      ```

      ## Formatting Your Request

      ### Request Body

      When submitting data to a resource via `POST` or `PUT`, you must submit your payload in JSON.

      ```bash
      POST https://api.sendgrid.com/v3/templates/ HTTP/1.1
      Content-Type: application/json
      ```

      ```json
      {
        "name": "new template name"
      }
      ```

      ### Pagination

      Some `GET` resources allow for retrieval of information in batches. We will provide the query args in the resource documentation when available to consume.

      When requesting multiple items, we will default the request limit to 500 items. You can specify a different limit but cannot not exceed the default limit.

      Resources documented will display a bolded list of available paginated parameters if available.

      Below is a basic pagination example. In the resource documentation, we will only provide the bolded list of available parameters.

      **When information is batched, a [Link Header](http://tools.ietf.org/html/rfc5988) will be provided in the response.**

      ```bash
      GET https://api.sendgrid.com/v3/resource?limit=300&offset=10 HTTP/1.1
      ```

      | **Parameter** | **Description** |
      |---|---|
      | limit | The number of records to return |
      | offset | The number of records to skip |

      ### Search & Paramters

      Some resources allow for you to search by a specific field. Other resources require you ot append a paramter to the URI.

      In this example, we will display a paginated URI example, searching for resources where the email contains `foo`.

      ```bash
      GET https://api.sendgrid.com/v3/resource?email=foo&bar=baz HTTP/1.1
      ```

      ## Successful Requests

      Below is a general overview of what resource objects are returned on successful Web API requets.

      | **Verb** | **Resource object returned** |
      |---|---|
      | GET | A single resoruce object or array of resource objects |
      | PATCH | The updated resource object is returned |
      | PUT | The updated resource object is returned |
      | DELETE | No content is returned |
      | POST | The newly created resource object is returned |
  - title: Errors
    content: |-
      <ul>
      <li><a href="#-Personalizations-Errors">Personalizations Errors</a></li>
      <li><a href="#-ASM-Errors">ASM Errors</a></li>
      <li><a href="#-Attachment-Errors">Attachment Errors</a></li>
      <li><a href="#-Batch-ID-Errors">Batch ID Errors</a></li>
      <li><a href="#-Categories-Errors">Categories Errors</a></li>
      <li><a href="#-Content-Errors">Content Errors</a></li>
      <li><a href="#-Encoding-Errors">Encoding Errors</a></li>
      <li><a href="#-From-Address-Errors">From Address Errors</a></li>
      <li><a href="#-Headers-Errors">Headers Errors</a></li>
      <li><a href="#-IP-Pool-Errors">IP Pool Errors</a></li>
      <li><a href="#-Reply-To-Errors">Reply To Errors</a></li>
      <li><a href="#-Sections-Errors">Sections Errors</a></li>
      <li><a href="#-Send-At-Errors">Send At Errors</a></li>
      <li><a href="#-Subject-Line-Errors">Subject Line Errors</a></li>
      <li><a href="#-Template-Errors">Template Errors</a></li>
      <li><a href="#-Mail-Settings-Errors">Mail Settings Errors</a></li>
      <li><a href="#-Tracking-Settings-Errors">Tracking Settings Errors</a></li>
      </ul>


      <h2 class="anchor-wrap"><a name="-Personalizations-Errors" class="anchor" href="#-Personalizations-Errors"><span class="anchor-icon"><i class="icon-link"></i></span></a>Personalizations Errors</h2>




      <h3 class="anchor-wrap"><a name="message.personalizations" class="anchor" href="#message.personalizations"><span class="anchor-icon"><i class="icon-link"></i></span></a>personalizations</h3>




      <table class="apitable" name="personalizations">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-open">
        <td colspan="3" class="param">The personalization block is limited to 1000 personalizations per API request. You have provided X personalizations. Please consider splitting this into multiple requests and resending your request.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">The v3 Mail Send endpoint is only capable of processing 1000 individual <code>personalizations</code> objects per request. If you need to send your email to more than 1000 different recipients, we recommend that you simply make more than once call. For more information about the <code>personalizations</code> array, and how you can use it to define who you would like you send your email to, and how you would like your email to be processed, please visit our <a href="//sendgrid.com/docs/Classroom/Send/v3_Mail_Send/personalizations.html">Classroom</a>.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">You must have at least one personalization.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">Every email you send must have at least one recipient email address included. Recipients are defined in the <code>personalizations</code> array. For more information on how to use <code>personalizations</code> to define who you want to send your email to, please visit our <a href="//sendgrid.com/docs/Classroom/Send/v3_Mail_Send/personalizations.html">Classroom</a>.</td>
      </tr>


      <tr class="depth-2 details-closed">
        <td colspan="3" class="param">There is a limit of 1000 total recipients (to + cc + bcc) per request.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">The combined, total number of email recipients may never exceed 1000. This includes recipients defined within the <code>to</code>, <code>cc</code>, and <code>bcc</code> parameters. For more information on how you may specify your recipients, please visit our <a href="//sendgrid.com/docs/Classroom/Send/v3_Mail_Send/personalizations.html">Classroom</a>.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">Each "to" object must at least have an email address and may also contain a name. e.g. <code>{"email": "example@example.com"}</code> or <code>{"email": "example@example.com", "name": "Example Recipient"}</code></td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">For every recipient that you define within a <code>personalizations.to</code> parameter, you must include one, valid email address. You are not required to include a name.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">Each unique email address in the <code>personalizations</code> array should only be included once. You have included [email address] more than once.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">To prevent the same email from being delivered to one recipient multiple times, SendGrid will confirm that you do not duplicate an email address in your request. For more information on how you may specify your recipients, please visit our <a href="//sendgrid.com/docs/Classroom/Send/v3_Mail_Send/personalizations.html">Classroom</a>.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The to parameter is required for all personalization objects.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">For every single object that you include within the <code>personalizations</code> array, you must include at least one <code>to</code> email object with a valid email address. For more information on how you may specify your recipients, please visit our <a href="//sendgrid.com/docs/Classroom/Send/v3_Mail_Send/personalizations.html">Classroom</a>.</td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.personalizations.bcc" class="anchor" href="#message.personalizations.bcc"><span class="anchor-icon"><i class="icon-link"></i></span></a>personalizations.bcc</h3>




      <table class="apitable" name="personalizations_bcc">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The bcc array, when used, must at least have an <code>email</code> parameter with a valid email address and it may also contain a <code>name</code> parameter. e.g. <code>{"email": "example@example.com"}</code> or <code>{"email": "example@example.com", "name": "Example Recipient"}</code></td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">For every blind carbon copy of your email, you must include one, valid recipient email address. However, you are not required to include a corresponding name with the recipient email address. For more information on how to use <code>personalizations</code> to define who you want to send your email to, please visit our <a href="//sendgrid.com/docs/Classroom/Send/v3_Mail_Send/personalizations.html">Classroom</a>.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">Each recipient object must at least have an email address and may also contain a name. e.g. <code>{"email": "example@example.com"}</code> or <code>{"email": "example@example.com", "name": "Example Recipient"}</code></td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">Every recipient that you define within the <code>personalizations.cc</code> array must be in the form of an email object including one, valid email address. You are not required to include a name.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">Each unique email address in the personalization block should only be included once. You have included [email address] more than once.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">To prevent the same email from being delivered to one recipient multiple times, SendGrid will confirm that you do not duplicate an email address in your request. For more information on how you may specify your recipients, please visit our <a href="//sendgrid.com/docs/Classroom/Send/v3_Mail_Send/personalizations.html">Classroom</a>.</td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.personalizations.cc" class="anchor" href="#message.personalizations.cc"><span class="anchor-icon"><i class="icon-link"></i></span></a>personalizations.cc</h3>




      <table class="apitable" name="personalizations_cc">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The cc array, when used, must at least have an <code>email</code> parameter with a valid email address and it may also contain a <code>name</code> parameter. e.g. <code>{"email": "example@example.com"}</code> or <code>{"email": "example@example.com", "name": "Example Recipient"}</code></td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">For every carbon copy of your email, you must include one, valid recipient email address. However, you are not required to include a corresponding name with the recipient email address. For more information on how to use <code>personalizations</code> to define who you want to send your email to, please visit our <a href="//sendgrid.com/docs/Classroom/Send/v3_Mail_Send/personalizations.html">Classroom</a>.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">Each recipient object must at least have an email address and may also contain a name. e.g. <code>{"email": "example@example.com"}</code> or <code>{"email": "example@example.com", "name": "Example Recipient"}</code></td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">Every recipient that you define within the <code>personalizations.cc</code> array must be in the form of an email object including one, valid email address. You are not required to include a name.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">Each unique email address in the personalization block should only be included once. You have included [email address] more than once.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">To prevent the same email from being delivered to one recipient multiple times, SendGrid will confirm that you do not duplicate an email address in your request. For more information on how you may specify your recipients, please visit our <a href="//sendgrid.com/docs/Classroom/Send/v3_Mail_Send/personalizations.html">Classroom</a>.</td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.personalizations.custom_args" class="anchor" href="#message.personalizations.custom_args"><span class="anchor-icon"><i class="icon-link"></i></span></a>personalizations.custom_args</h3>




      <table class="apitable" name="personalizations_custom_args">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">All values of custom arguments object must be strings</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">Custom argument values must always be strings. You cannot define arrays, integers, or booleans as custom argument values. Click <a href="//sendgrid.com/docs/API_Reference/SMTP_API/unique_arguments.html">here</a> more information about how to use custom arguments.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param"><code>custom_args</code> cannot be empty.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">If you include the <code>custom_args</code> parameter, you must include at least one value. If you do not want to use any custom arguments, simply omit the <code>custom_arg</code> param from your request. Click <a href="//sendgrid.com/docs/API_Reference/SMTP_API/unique_arguments.html">here</a> more information about how to use custom arguments.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The combined size of both global and personalization custom arguments may not exceed 10,000 bytes per personalization.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"><code>personalizations[x].custom_args</code> will be merged with message level <code>custom_args</code>, overriding any conflicting keys. The combined total size of the resulting custom arguments, after merging, for each personalization may not exceed 10,000 bytes. Click <a href="//sendgrid.com/docs/API_Reference/SMTP_API/unique_arguments.html">here</a> more information about how to use custom arguments.</td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.personalizations.headers" class="anchor" href="#message.personalizations.headers"><span class="anchor-icon"><i class="icon-link"></i></span></a>personalizations.headers</h3>




      <table class="apitable" name="personalizations_headers">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">All values of the headers object must be strings.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">The object type of every header that you include must be a string. You cannot include headers that are integers, booleans, or arrays.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The headers cannot contain duplicate keys.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">You may not include the same header more than once.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">Header keys cannot contain non-ASCII characters or empty spaces.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">When defining the headers that you would like to use, you must make sure that the string contains only ASCII characters.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">Header cannot be one of the reserved keys.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">Some header keys are reserved. You may not include any of the following reserved keys: <code>x-sg-id</code>, <code>x-sg-eid</code>, <code>received</code>, <code>dkim-signature</code>, <code>Content-Type</code>, <code>Content-Transfer-Encoding</code>, <code>To</code>, <code>From</code>, <code>Subject</code>, <code>Reply-To</code>, <code>CC</code>, <code>BCC</code>.</td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.personalizations.send_at" class="anchor" href="#message.personalizations.send_at"><span class="anchor-icon"><i class="icon-link"></i></span></a>personalizations.send_at</h3>




      <table class="apitable" name="personalizations_send_at">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The <code>send_at</code> parameter is expecting a Unix timestamp as an integer. We will send immediately if you include a <code>send_at</code> timestamp that is in the past.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"><code>send_at</code> accepts a unix timestamp representing when you want your email to be sent from SendGrid. If you want the email to be sent at the time of your API request, simply omit the <code>send_at</code> parameter.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">Scheduling more than 72 hours in advance is forbidden.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">The <code>send_at</code> parameter allows you to schedule your email to be sent up to 72 hours in advance, but due to our constraints, we cannot schedule emails more than 72 hours in the future. For more information on scheduling parameters, please see our <a href="//sendgrid.com/docs/API_Reference/SMTP_API/scheduling_parameters.html">API Reference</a>.</td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.personalizations.subject" class="anchor" href="#message.personalizations.subject"><span class="anchor-icon"><i class="icon-link"></i></span></a>personalizations.subject</h3>




      <table class="apitable" name="personalizations_subject">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The subject of your email must be a string at least one character in length.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">You are required to include a subject for every email you send, and you may not include an empty subject. The minimum length of your subject is one character.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The subject is required. You can get around this requirement if you use a template with a subject defined.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">Every email must have a subject. This can be accomplished 3 ways: you include a template that has a subject, you define a global subject, or every single personalizations object has a subject.</td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.personalizations.substitutions" class="anchor" href="#message.personalizations.substitutions"><span class="anchor-icon"><i class="icon-link"></i></span></a>personalizations.substitutions</h3>




      <table class="apitable" name="personalizations_substitutions">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The substitution values must be an object of key/value pairs, where the values are all strings.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">Substitutions must always follow the pattern <code>"substitution_tag": "value to substitute"</code>. The value to substitute for the "substitution_tag" must always be a string.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">You are limited to 10,000 substitutions.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">You may not make more than 10,000 substitutions per request. Substitutions will apply to the content of your email, in addition to the <code>subject</code> and <code>reply_to</code> parameters</td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.personalizations.to" class="anchor" href="#message.personalizations.to"><span class="anchor-icon"><i class="icon-link"></i></span></a>personalizations.to</h3>




      <table class="apitable" name="personalizations_to">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The to array must at least have an <code>email</code> parameter with a valid email address and it may also contain a <code>name</code> parameter. e.g. <code>{"email": "example@example.com"}</code> or <code>{"email": "example@example.com", "name": "Example Recipient"}</code></td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">Every email you send must have at least one, valid recipient email address included. However, you are not required to include a corresponding name with the recipient email address. For more information on how to use <code>personalizations</code> to define who you want to send your email to, please visit our <a href="//sendgrid.com/docs/Classroom/Send/v3_Mail_Send/personalizations.html">Classroom</a>.</td>
      </tr>


        </tbody>
      </table>




      <h2 class="anchor-wrap"><a name="-ASM-Errors" class="anchor" href="#-ASM-Errors"><span class="anchor-icon"><i class="icon-link"></i></span></a>ASM Errors</h2>




      <h3 class="anchor-wrap"><a name="message.asm.group_id" class="anchor" href="#message.asm.group_id"><span class="anchor-icon"><i class="icon-link"></i></span></a>asm.group_id</h3>




      <table class="apitable" name="asm_group_id">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The ASM group ID must be an integer.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">Suppression Groups, or unsubscribe groups, are a great way to record which emails your recipients want to receive. Including the <code>asm.group_id</code> in your request allows you to group your email with other, similar sends. However, these group IDs are always generated as integers, and so you must ensure that <code>asm.group_id</code> is defined as an integer. For more information please read our <a href="//sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html">Unsubscribe Groups</a> documentation.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The ASM group ID must be a valid Group ID on your account. You provided [YOUR ASM GROUP ID].</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.asm.groups_to_display" class="anchor" href="#message.asm.groups_to_display"><span class="anchor-icon"><i class="icon-link"></i></span></a>asm.groups_to_display</h3>




      <table class="apitable" name="asm_groups_to_display">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The ASM Group IDs to display must be an array of integers.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">All ASM groups to display must be valid ASM groups IDs on your account. You provided {invalid IDs}.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">There is a limit of 25 unsubscribe groups that can be displayed to a user at a time.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h2 class="anchor-wrap"><a name="-Attachment-Errors" class="anchor" href="#-Attachment-Errors"><span class="anchor-icon"><i class="icon-link"></i></span></a>Attachment Errors</h2>




      <h3 class="anchor-wrap"><a name="message.attachments.content" class="anchor" href="#message.attachments.content"><span class="anchor-icon"><i class="icon-link"></i></span></a>attachments.content</h3>




      <table class="apitable" name="attachments_content">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The attachment content must be base64 encoded.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The attachment content must be a string at least one character in length.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.attachments.content_id" class="anchor" href="#message.attachments.content_id"><span class="anchor-icon"><i class="icon-link"></i></span></a>attachments.content_id</h3>




      <table class="apitable" name="attachments_content_id">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The content ID of your attachment must be a string. You provided [YOUR CONTENT ID].</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">The <code>content_id</code> is a unique id that you specify for the attachment. This is used when the disposition is set to "inline" and the attachment is an image, allowing the file to be displayed within the body of your email. For example, <code>&lt;img src="cid:ii_139db99fdb5c3704"&gt;&lt;/img&gt;</code></td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The content ID of your attachment cannot contain CRLF characters.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">When defining your <code>content_id</code>, you may not include the characters <code>;</code>, <code>,</code>, <code>n</code>, or <code>r</code>.</td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.attachments.disposition" class="anchor" href="#message.attachments.disposition"><span class="anchor-icon"><i class="icon-link"></i></span></a>attachments.disposition</h3>




      <table class="apitable" name="attachments_disposition">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The disposition of your attachment can be either "inline" or "attachment". You provided [YOUR DISPOSITION].</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">The content-disposition of your attachment defines how you would like the attachment to be displayed. For example, "inline" results in the attached file being displayed automatically within the message while "attachment" results in the attached file requiring some action to be taken before it is displayed (e.g. opening or downloading the file). <code>attachments.disposition</code> always defaults to "attachment". Can be either "attachment" or "inline".</td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.attachments.filename" class="anchor" href="#message.attachments.filename"><span class="anchor-icon"><i class="icon-link"></i></span></a>attachments.filename</h3>




      <table class="apitable" name="attachments_filename">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The filename of your attachment must be a string.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The filename of your attachment cannot contain CRLF characters.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">When defining the filename of your attachment, you may not include the characters <code>;</code>, <code>,</code>, <code>n</code>, or <code>r</code>.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">filename is required.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">You must always include a filename for your attachment.</td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.attachments.type" class="anchor" href="#message.attachments.type"><span class="anchor-icon"><i class="icon-link"></i></span></a>attachments.type</h3>




      <table class="apitable" name="attachments_type">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The attachment type must be a string and at least one character in length.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The type cannot contain ‘;’, or CRLF characters.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">When defining the type of your attachment content, you may not include the characters <code>;</code>, <code>,</code>, <code>n</code>, or <code>r</code>.</td>
      </tr>


        </tbody>
      </table>




      <h2 class="anchor-wrap"><a name="-Batch-ID-Errors" class="anchor" href="#-Batch-ID-Errors"><span class="anchor-icon"><i class="icon-link"></i></span></a>Batch ID Errors</h2>




      <h3 class="anchor-wrap"><a name="message.batch_id" class="anchor" href="#message.batch_id"><span class="anchor-icon"><i class="icon-link"></i></span></a>batch_id</h3>




      <table class="apitable" name="batch_id">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The batch_id must be a string.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">Batch IDs are always generated as strings, so when you choose to include a batch ID in your send, you must make sure that <code>batch_id</code> is defined as a string. For more information about batch IDs, and how you can use them to group sends together, please visit our <a href="//sendgrid.com/docs/API_Reference/Web_API_v3/cancel_schedule_send.html">API Reference</a>.</td>
      </tr>


        </tbody>
      </table>




      <h2 class="anchor-wrap"><a name="-Categories-Errors" class="anchor" href="#-Categories-Errors"><span class="anchor-icon"><i class="icon-link"></i></span></a>Categories Errors</h2>




      <h3 class="anchor-wrap"><a name="message.categories" class="anchor" href="#message.categories"><span class="anchor-icon"><i class="icon-link"></i></span></a>categories</h3>




      <table class="apitable" name="categories">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">There is a limit of 10 categories for each email that is sent. You provided X categories.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">For more information on how you can use categories to organize your email analytics, please visit our <a href="//sendgrid.com/docs/User_Guide/Statistics/categories.html">User Guide</a>.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">Categories must be an array of strings.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">Every object that you include within the categories array must be a string. For more information on how you can use categories to organize your email analytics, please visit our <a href="//sendgrid.com/docs/User_Guide/Statistics/categories.html">User Guide</a>.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">Each category must not be longer than 255 characters. [YOUR CATEGORY] exceeds this limit</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">he maximum length of a category is 255 characters. For more information on how you can use categories to organize your email analytics, please visit our <a href="//sendgrid.com/docs/User_Guide/Statistics/categories.html">User Guide</a>.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The categories must be a unique list, and you have included [YOUR CATEGORY] more than once. </td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">You cannot include the same category more than once within the categories array. For more information on how you can use categories to organize your email analytics, please visit our <a href="//sendgrid.com/docs/User_Guide/Statistics/categories.html">User Guide</a>.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">Categories can not contain non-ASCII characters.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">Each category name must only be comprised of ASCII characters. For more information on how you can use categories to organize your email analytics, please visit our <a href="//sendgrid.com/docs/User_Guide/Statistics/categories.html">User Guide</a>.</td>
      </tr>


        </tbody>
      </table>




      <h2 class="anchor-wrap"><a name="-Content-Errors" class="anchor" href="#-Content-Errors"><span class="anchor-icon"><i class="icon-link"></i></span></a>Content Errors</h2>




      <h3 class="anchor-wrap"><a name="message.content" class="anchor" href="#message.content"><span class="anchor-icon"><i class="icon-link"></i></span></a>content</h3>




      <table class="apitable" name="content">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The content param is required unless you are using a transactional template and have defined a template_ID.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">You may not send an email without the content parameter unless you are using a transactional template. This is to prevent you from sending an empty email to your recipients.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">There must be at least one defined content block. We typically suggest both text/plain and text/html blocks are included, but only one block is required.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">You must specify at least one content type and value for every email you send. We recommend that you include both text/plain and text/html to ensure that all of your recipients are able to read your email, but you are only required to define one type of content.</td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.content.type" class="anchor" href="#message.content.type"><span class="anchor-icon"><i class="icon-link"></i></span></a>content.type</h3>




      <table class="apitable" name="content_type">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">A content type is required, this tells email clients how to display the email.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">You must always specify the MIME type of content you are including in your email, and if you are including the text/plain type, it must be specified first, followed by text/html, and then any other MIME types you would like to specify.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The content value must be a string at least one character in length.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">You may not send an email with no content.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">Your content type must be a string with length of at least one character.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">The content of your email must always be contained within a string when you make your request.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">Cannot contain ‘;’, or CRLF characters.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">When defining the type of your content, you may not include the characters <code>;</code>, <code>,</code>, <code>n</code>, or <code>r</code>.</td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.content.value" class="anchor" href="#message.content.value"><span class="anchor-icon"><i class="icon-link"></i></span></a>content.value</h3>




      <table class="apitable" name="content_value">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">A content value is required, this is the content of the email you are sending.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">We do not allow you to send an empty email to your recipients. You must always include a value for your content.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The content value must be a string at least one character in length.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">We do not allow you to send an empty email to your recipients. Even if you include the <code>content.value</code> parameter, it must include at least one character.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">Following RFC 1341, section 7.2, if either text/html or text/plain are to be sent in your email: text/plain needs to be first, followed by text/html, followed by any other content.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">The order in which you specify the MIME types of your content must always be text/plain first, if you choose to include it, followed by text/html, and then any other MIME types you wish to include.</td>
      </tr>


        </tbody>
      </table>




      <h2 class="anchor-wrap"><a name="-Encoding-Errors" class="anchor" href="#-Encoding-Errors"><span class="anchor-icon"><i class="icon-link"></i></span></a>Encoding Errors</h2>




      <h3 class="anchor-wrap"><a name="Encoding" class="anchor" href="#Encoding"><span class="anchor-icon"><i class="icon-link"></i></span></a>Encoding</h3>




      <table class="apitable" name="Encoding">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">415</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">Invalid UTF8 in request</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">Your payload must be encoded in UTF-8. This includes any attachments.</td>
      </tr>


        </tbody>
      </table>




      <h2 class="anchor-wrap"><a name="-From-Address-Errors" class="anchor" href="#-From-Address-Errors"><span class="anchor-icon"><i class="icon-link"></i></span></a>From Address Errors</h2>




      <h3 class="anchor-wrap"><a name="message.from" class="anchor" href="#message.from"><span class="anchor-icon"><i class="icon-link"></i></span></a>from</h3>




      <table class="apitable" name="from">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The from object must at least have an <code>email</code> parameter with a valid email address and may also contain a <code>name</code> parameter. e.g. <code>{"email": "example@example.com"}</code> or <code>{"email": "example@example.com", "name": "Example Recipient"}</code></td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">While every <code>from</code> parameter must include a valid email address, you are not required to include a name.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The <code>from</code> object must be provided for every email send. It is an object that requires the <code>email</code> parameter, but may also contain a <code>name</code> parameter.  e.g. <code>{"email": "example@example.com"}</code> or <code>{"email": "example@example.com", "name": "Example Recipient"}</code></td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">You are required to provide a from address whenever you send an email through SendGrid. This is used for authentication purposes and helps to build a positive sending reputation with your recipients' ISPs. You are not required to include a name within the <code>from</code> parameter.</td>
      </tr>


        </tbody>
      </table>




      <h2 class="anchor-wrap"><a name="-Headers-Errors" class="anchor" href="#-Headers-Errors"><span class="anchor-icon"><i class="icon-link"></i></span></a>Headers Errors</h2>




      <h3 class="anchor-wrap"><a name="message.headers" class="anchor" href="#message.headers"><span class="anchor-icon"><i class="icon-link"></i></span></a>headers</h3>




      <table class="apitable" name="headers">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The header values must be strings.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">The object type of every header that you include must be a string. You cannot include headers that are integers, booleans, or arrays.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The headers cannot contain duplicate keys.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">You may not include the same header more than once.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">Header keys cannot contain non-ASCII characters and empty spaces.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">When defining the headers that you would like to use, you must make sure that the string contains only ASCII characters.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">Header can not be one of the reserved keys.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">Some header keys are reserved. You may not include any of the following reserved headers: <code>x-sg-id</code>, <code>x-sg-eid</code>, <code>received</code>, <code>dkim-signature</code>, <code>Content-Type</code>, <code>Content-Transfer-Encoding</code>, <code>To</code>, <code>From</code>, <code>Subject</code>, <code>Reply-To</code>, <code>CC</code>, <code>BCC</code>.</td>
      </tr>


        </tbody>
      </table>




      <h2 class="anchor-wrap"><a name="-IP-Pool-Errors" class="anchor" href="#-IP-Pool-Errors"><span class="anchor-icon"><i class="icon-link"></i></span></a>IP Pool Errors</h2>




      <h3 class="anchor-wrap"><a name="message.ip_pool_name" class="anchor" href="#message.ip_pool_name"><span class="anchor-icon"><i class="icon-link"></i></span></a>ip_pool_name</h3>




      <table class="apitable" name="ip_pool_name">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The name of your IP pool must be a string.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The IP Pool name must be a valid pool name for your account. You provided [YOUR IP POOL NAME].</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h2 class="anchor-wrap"><a name="-Reply-To-Errors" class="anchor" href="#-Reply-To-Errors"><span class="anchor-icon"><i class="icon-link"></i></span></a>Reply To Errors</h2>




      <h3 class="anchor-wrap"><a name="message.reply_to" class="anchor" href="#message.reply_to"><span class="anchor-icon"><i class="icon-link"></i></span></a>reply_to</h3>




      <table class="apitable" name="reply_to">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The <code>reply_to</code> object, when used, must at least have an <code>email</code> parameter with a valid email address and it may also contain a <code>name</code> parameter. e.g. <code>{"email": "example@example.com"}</code> or <code>{"email": "example@example.com", "name": "Example Recipient"}</code></td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">For every carbon copy of your email, you must include one, valid recipient email address. However, you are not required to include a corresponding name with the recipient email address. For more information on how to use <code>personalizations</code> to define who you want to send your email to, please visit our <a href="//sendgrid.com/docs/Classroom/Send/v3_Mail_Send/personalizations.html">Classroom</a>.</td>
      </tr>


        </tbody>
      </table>




      <h2 class="anchor-wrap"><a name="-Sections-Errors" class="anchor" href="#-Sections-Errors"><span class="anchor-icon"><i class="icon-link"></i></span></a>Sections Errors</h2>




      <h3 class="anchor-wrap"><a name="message.sections" class="anchor" href="#message.sections"><span class="anchor-icon"><i class="icon-link"></i></span></a>sections</h3>




      <table class="apitable" name="sections">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The section values must be strings.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">The values of your <code>sections</code> parameter will be substituted into the content of your email. We will only perform substitutions using strings, so please make sure that your section values are always defined as strings.</td>
      </tr>


        </tbody>
      </table>




      <h2 class="anchor-wrap"><a name="-Send-At-Errors" class="anchor" href="#-Send-At-Errors"><span class="anchor-icon"><i class="icon-link"></i></span></a>Send At Errors</h2>




      <h3 class="anchor-wrap"><a name="message.send_at" class="anchor" href="#message.send_at"><span class="anchor-icon"><i class="icon-link"></i></span></a>send_at</h3>




      <table class="apitable" name="send_at">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The <code>send_at</code> parameter is expecting a Unix timestamp as an integer. We will send immediately if you include a <code>send_at</code> timestamp that is in the past.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"><code>send_at</code> accepts a unix timestamp representing when you want your email to be sent from SendGrid. If you want the email to be sent at the time of your API request, simply omit the <code>send_at</code> parameter.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">Scheduling more than 72 hours in advance is forbidden.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">The <code>send_at</code> parameter allows you to schedule your email to be sent up to 72 hours in advance, but due to our constraints, we cannot schedule emails more than 72 hours in the future. For more information on scheduling parameters, please see our <a href="//sendgrid.com/docs/API_Reference/SMTP_API/scheduling_parameters.html">API Reference</a>.</td>
      </tr>


        </tbody>
      </table>




      <h2 class="anchor-wrap"><a name="-Subject-Line-Errors" class="anchor" href="#-Subject-Line-Errors"><span class="anchor-icon"><i class="icon-link"></i></span></a>Subject Line Errors</h2>




      <h3 class="anchor-wrap"><a name="message.subject" class="anchor" href="#message.subject"><span class="anchor-icon"><i class="icon-link"></i></span></a>subject</h3>




      <table class="apitable" name="subject">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The subject of your email must be a string at least one character in length.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">You are required to include a subject for every email you send, and you may not include an empty subject. The minimum length of your subject is one character.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The subject is required. You can get around this requirement if you use a template with a subject defined or if every personalization has a subject defined.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">Every email must have a subject. This can be accomplished 3 ways: you include a template that has a subject, you define a global subject, or every single personalizations object has a subject.</td>
      </tr>


        </tbody>
      </table>




      <h2 class="anchor-wrap"><a name="-Template-Errors" class="anchor" href="#-Template-Errors"><span class="anchor-icon"><i class="icon-link"></i></span></a>Template Errors</h2>




      <h3 class="anchor-wrap"><a name="message.template_id" class="anchor" href="#message.template_id"><span class="anchor-icon"><i class="icon-link"></i></span></a>template_id</h3>




      <table class="apitable" name="template_id">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The template ID must be a string, you provided [YOUR TEMPLATE ID].</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">Template IDs are always strings.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The Template ID must be a valid template id for your account. You provided [YOUR TEMPLATE ID].</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">We do not allow you to send an empty email, so in the event that the only content of your email is contained within your template, we want to make sure that the included template exists, and is valid.</td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">Must be a valid template.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3">We do not allow you to send an empty email, so in the event that the only content of your email is contained within your template, we want to make sure that the included template exists, and is valid.</td>
      </tr>


        </tbody>
      </table>




      <h2 class="anchor-wrap"><a name="-Mail-Settings-Errors" class="anchor" href="#-Mail-Settings-Errors"><span class="anchor-icon"><i class="icon-link"></i></span></a>Mail Settings Errors</h2>




      <h3 class="anchor-wrap"><a name="message.mail_settings.bcc.email" class="anchor" href="#message.mail_settings.bcc.email"><span class="anchor-icon"><i class="icon-link"></i></span></a>mail_settings.bcc.email</h3>




      <table class="apitable" name="mail_settings_bcc_email">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The bcc email recipient object must at least have an email address and may also contain a name. e.g. <code>{"email": "example@example.com"}</code> or <code>{"email": "example@example.com", "name": "Example Recipient"}</code></td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">You must include a recipient object when using the bcc mail setting.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.mail_settings.bcc.enable" class="anchor" href="#message.mail_settings.bcc.enable"><span class="anchor-icon"><i class="icon-link"></i></span></a>mail_settings.bcc.enable</h3>




      <table class="apitable" name="mail_settings_bcc_enable">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The bcc enable param should be a boolean value.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.mail_settings.bypass_list_management.enable" class="anchor" href="#message.mail_settings.bypass_list_management.enable"><span class="anchor-icon"><i class="icon-link"></i></span></a>mail_settings.bypass_list_management.enable</h3>




      <table class="apitable" name="mail_settings_bypass_list_management_enable">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The bypass list management enable param should be a boolean value.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.mail_settings.footer.enable" class="anchor" href="#message.mail_settings.footer.enable"><span class="anchor-icon"><i class="icon-link"></i></span></a>mail_settings.footer.enable</h3>




      <table class="apitable" name="mail_settings_footer_enable">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The footer enable param should be a boolean value.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.mail_settings.footer.html" class="anchor" href="#message.mail_settings.footer.html"><span class="anchor-icon"><i class="icon-link"></i></span></a>mail_settings.footer.html</h3>




      <table class="apitable" name="mail_settings_footer_html">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The text/html version of your footer should be a string.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.mail_settings.footer.text" class="anchor" href="#message.mail_settings.footer.text"><span class="anchor-icon"><i class="icon-link"></i></span></a>mail_settings.footer.text</h3>




      <table class="apitable" name="mail_settings_footer_text">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The text/plain version of your footer should be a string.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.mail_settings.sandbox_mode.enable" class="anchor" href="#message.mail_settings.sandbox_mode.enable"><span class="anchor-icon"><i class="icon-link"></i></span></a>mail_settings.sandbox_mode.enable</h3>




      <table class="apitable" name="mail_settings_sandbox_mode_enable">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The sandbox mode enable param should be a boolean value.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.mail_settings.spam_check.enable" class="anchor" href="#message.mail_settings.spam_check.enable"><span class="anchor-icon"><i class="icon-link"></i></span></a>mail_settings.spam_check.enable</h3>




      <table class="apitable" name="mail_settings_spam_check_enable">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The spam check enable param should be a boolean value.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.mail_settings.spam_check.post_to_url" class="anchor" href="#message.mail_settings.spam_check.post_to_url"><span class="anchor-icon"><i class="icon-link"></i></span></a>mail_settings.spam_check.post_to_url</h3>




      <table class="apitable" name="mail_settings_spam_check_post_to_url">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The spam check url must be a string.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">You must include the url to post to when using the spam check mail setting.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The `post_to_url` parameter must start with `http://` or `https://`.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.mail_settings.spam_check.threshold" class="anchor" href="#message.mail_settings.spam_check.threshold"><span class="anchor-icon"><i class="icon-link"></i></span></a>mail_settings.spam_check.threshold</h3>




      <table class="apitable" name="mail_settings_spam_check_threshold">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The spam check threshold is between 1 and 10, with the lower numbers being the most strict filtering. </td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">You must include the spam check threshold  when using the spam check mail setting.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h2 class="anchor-wrap"><a name="-Tracking-Settings-Errors" class="anchor" href="#-Tracking-Settings-Errors"><span class="anchor-icon"><i class="icon-link"></i></span></a>Tracking Settings Errors</h2>




      <h3 class="anchor-wrap"><a name="message.tracking_settings.click_tracking.enable" class="anchor" href="#message.tracking_settings.click_tracking.enable"><span class="anchor-icon"><i class="icon-link"></i></span></a>tracking_settings.click_tracking.enable</h3>




      <table class="apitable" name="tracking_settings_click_tracking_enable">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The click tracking enable param should be a boolean value.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.tracking_settings.click_tracking.enable_text" class="anchor" href="#message.tracking_settings.click_tracking.enable_text"><span class="anchor-icon"><i class="icon-link"></i></span></a>tracking_settings.click_tracking.enable_text</h3>




      <table class="apitable" name="tracking_settings_click_tracking_enable_text">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The click tracking enable text must be a boolean value.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.tracking_settings.ganalytics.enable" class="anchor" href="#message.tracking_settings.ganalytics.enable"><span class="anchor-icon"><i class="icon-link"></i></span></a>tracking_settings.ganalytics.enable</h3>




      <table class="apitable" name="tracking_settings_ganalytics_enable">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The Google Analytics enable param must be a boolean value.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.tracking_settings.ganalytics.utm_campaign" class="anchor" href="#message.tracking_settings.ganalytics.utm_campaign"><span class="anchor-icon"><i class="icon-link"></i></span></a>tracking_settings.ganalytics.utm_campaign</h3>




      <table class="apitable" name="tracking_settings_ganalytics_utm_campaign">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The Google Analytics utm_campaign must be a string value.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.tracking_settings.ganalytics.utm_content" class="anchor" href="#message.tracking_settings.ganalytics.utm_content"><span class="anchor-icon"><i class="icon-link"></i></span></a>tracking_settings.ganalytics.utm_content</h3>




      <table class="apitable" name="tracking_settings_ganalytics_utm_content">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The Google Analytics utm_content must be a string value.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.tracking_settings.ganalytics.utm_medium" class="anchor" href="#message.tracking_settings.ganalytics.utm_medium"><span class="anchor-icon"><i class="icon-link"></i></span></a>tracking_settings.ganalytics.utm_medium</h3>




      <table class="apitable" name="tracking_settings_ganalytics_utm_medium">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The Google Analytics utm_medium must be a string value.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.tracking_settings.ganalytics.utm_source" class="anchor" href="#message.tracking_settings.ganalytics.utm_source"><span class="anchor-icon"><i class="icon-link"></i></span></a>tracking_settings.ganalytics.utm_source</h3>




      <table class="apitable" name="tracking_settings_ganalytics_utm_source">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The Google Analytics utm_source must be a string value.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.tracking_settings.ganalytics.utm_term" class="anchor" href="#message.tracking_settings.ganalytics.utm_term"><span class="anchor-icon"><i class="icon-link"></i></span></a>tracking_settings.ganalytics.utm_term</h3>




      <table class="apitable" name="tracking_settings_ganalytics_utm_term">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The Google Analytics utm_term must be a string value.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.tracking_settings.open_tracking.enable" class="anchor" href="#message.tracking_settings.open_tracking.enable"><span class="anchor-icon"><i class="icon-link"></i></span></a>tracking_settings.open_tracking.enable</h3>




      <table class="apitable" name="tracking_settings_open_tracking_enable">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The open tracking enable param should be a boolean value.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.tracking_settings.open_tracking.substitution_tag" class="anchor" href="#message.tracking_settings.open_tracking.substitution_tag"><span class="anchor-icon"><i class="icon-link"></i></span></a>tracking_settings.open_tracking.substitution_tag</h3>




      <table class="apitable" name="tracking_settings_open_tracking_substitution_tag">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The open tracking substitution tag must be a string.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.tracking_settings.subscription_tracking.enable" class="anchor" href="#message.tracking_settings.subscription_tracking.enable"><span class="anchor-icon"><i class="icon-link"></i></span></a>tracking_settings.subscription_tracking.enable</h3>




      <table class="apitable" name="tracking_settings_subscription_tracking_enable">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The subscription tracking enable param should be a boolean value.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.tracking_settings.subscription_tracking.html" class="anchor" href="#message.tracking_settings.subscription_tracking.html"><span class="anchor-icon"><i class="icon-link"></i></span></a>tracking_settings.subscription_tracking.html</h3>




      <table class="apitable" name="tracking_settings_subscription_tracking_html">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The subscription tracking unsubscribe content for text/html messages must be a string.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.tracking_settings.subscription_tracking.substitution_tag" class="anchor" href="#message.tracking_settings.subscription_tracking.substitution_tag"><span class="anchor-icon"><i class="icon-link"></i></span></a>tracking_settings.subscription_tracking.substitution_tag</h3>




      <table class="apitable" name="tracking_settings_subscription_tracking_substitution_tag">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The subscription tracking substitution tag must be a string value.</td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>




      <h3 class="anchor-wrap"><a name="message.tracking_settings.subscription_tracking.text" class="anchor" href="#message.tracking_settings.subscription_tracking.text"><span class="anchor-icon"><i class="icon-link"></i></span></a>tracking_settings.subscription_tracking.text</h3>




      <table class="apitable" name="tracking_settings_subscription_tracking_text">
        <tbody>
          <tr>
            <th colspan="1">Error Code</th>
            <th class="details-header">Error Message</th>
            <th>Details</th>
            <th></th>
          </tr>
          
        <tr class="depth-1">
        <td colspan="2" "="" class="param status-400">400</td>
        <td></td><td></td>
      </tr>
        


        <tr class="depth-2 details-closed">
        <td colspan="3" class="param">The subscription tracking unsubscribe content for text/plain messages must be a string. </td>
        <td class="details-caret"><img src="//sendgrid.com/docs/images/caret.svg"></td>
      </tr>
      <tr class="details-row">
        <td></td>
        <td colspan="3"></td>
      </tr>


        </tbody>
      </table>





          </div>
securitySchemes:
  - apiKey:
      type: x-api-key
      describedBy:
        headers:
          Authorization:
            type: string
/user:
  displayName: user
  /webhooks:
    displayName: webhooks
    /event:
      displayName: event
      /settings:
        displayName: settings
        get:
          description: |-
            **This endpoint allows you to retrieve your current event webhook settings.**

            If an event type is marked as `true`, then the event webhook will include information about that event.

            SendGrid’s Event Webhook will notify a URL of your choice via HTTP POST with information about events that occur as SendGrid processes your email.

            Common uses of this data are to remove unsubscribes, react to spam reports, determine unengaged recipients, identify bounced email addresses, or create advanced analytics of your email program.
          is:
            - onBehalfOfSubuser
          responses:
            '200':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"event_webhook_settings\"\n}",
                    "example": "{\n    \"enabled\": true,\n    \"url\": \"url\",\n    \"group_resubscribe\": true,\n    \"delivered\": true,\n    \"group_unsubscribe\": true,\n    \"spam_report\": true,\n    \"bounce\": true,\n    \"deferred\": true,\n    \"unsubscribe\": true,\n    \"processed\": true,\n    \"open\": true,\n    \"click\": true,\n    \"dropped\": true\n}"
                  }
          securedBy:
            - null
        patch:
          description: |-
            **This endpoint allows you to update your current event webhook settings.**

            If an event type is marked as `true`, then the event webhook will include information about that event.

            SendGrid’s Event Webhook will notify a URL of your choice via HTTP POST with information about events that occur as SendGrid processes your email.

            Common uses of this data are to remove unsubscribes, react to spam reports, determine unengaged recipients, identify bounced email addresses, or create advanced analytics of your email program.
          is:
            - onBehalfOfSubuser
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"event_webhook_settings\"\n}",
                "example": "{\n    \"enabled\": true,\n    \"url\": \"url\",\n    \"group_resubscribe\": true,\n    \"delivered\": true,\n    \"group_unsubscribe\": true,\n    \"spam_report\": true,\n    \"bounce\": true,\n    \"deferred\": true,\n    \"unsubscribe\": true,\n    \"processed\": true,\n    \"open\": true,\n    \"click\": true,\n    \"dropped\": true\n}"
              }
          responses:
            '200':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"event_webhook_settings\"\n}",
                    "example": "{\n    \"enabled\": true,\n    \"url\": \"url\",\n    \"group_resubscribe\": true,\n    \"delivered\": true,\n    \"group_unsubscribe\": true,\n    \"spam_report\": true,\n    \"bounce\": true,\n    \"deferred\": true,\n    \"unsubscribe\": true,\n    \"processed\": true,\n    \"open\": true,\n    \"click\": true,\n    \"dropped\": true\n}"
                  }
          securedBy:
            - null
      /test:
        displayName: test
        post:
          description: |-
            **This endpoint allows you to test your event webhook by sending a fake event notification post to the provided URL.**

            SendGrid’s Event Webhook will notify a URL of your choice via HTTP POST with information about events that occur as SendGrid processes your email.

            Common uses of this data are to remove unsubscribes, react to spam reports, determine unengaged recipients, identify bounced email addresses, or create advanced analytics of your email program.
          is:
            - onBehalfOfSubuser
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"url\": {\n            \"type\": \"string\",\n            \"description\": \"The URL where you would like the test notification to be sent.\"\n        }\n    }\n}",
                "example": "{\n    \"url\": \"url\"\n}"
              }
          responses:
            '204':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"object\"\n}"
                  }
          securedBy:
            - null
    /parse:
      displayName: parse
      /settings:
        displayName: settings
        '/{hostname}':
          displayName: hostname
          uriParameters:
            hostname:
              type: string
              description: The hostname associated with the inbound parse setting that you would like to retrieve.
              displayName: The hostname associated with the inbound parse setting that you would like to retrieve.
          patch:
            description: |-
              **This endpoint allows you to update a specific inbound parse setting.**

              The inbound parse webhook allows you to have incoming emails parsed, extracting some or all of the contnet, and then have that content POSTed by SendGrid to a URL of your choosing. For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Webhooks/parse.html).
            is:
              - onBehalfOfSubuser
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"parse-setting\"\n}",
                  "example": "{\n    \"url\": \"http://newdomain.com/parse\",\n    \"spam_check\": false,\n    \"send_raw\": true\n}"
                }
            responses:
              '200':
                body:
                  application/json: |-
                    {
                      "schema": "{\n    \"type\": \"parse-setting\"\n}",
                      "example": "{\n    \"url\": \"http://mydomain.com/parse\",\n    \"hostname\": \"mail.mydomain.com\",\n    \"spam_check\": true,\n    \"send_raw\": true\n}"
                    }
            securedBy:
              - null
          delete:
            description: |-
              **This endpoint allows you to delete a specific inbound parse setting.**

              The inbound parse webhook allows you to have incoming emails parsed, extracting some or all of the contnet, and then have that content POSTed by SendGrid to a URL of your choosing. For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Webhooks/parse.html).
            is:
              - onBehalfOfSubuser
            responses:
              '204':
                body:
                  application/json: |-
                    {
                      "schema": "{\n    \"type\": \"object\"\n}"
                    }
            securedBy:
              - null
          get:
            description: |-
              **This endpoint allows you to retrieve a specific inbound parse setting.**

              The inbound parse webhook allows you to have incoming emails parsed, extracting some or all of the contnet, and then have that content POSTed by SendGrid to a URL of your choosing. For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Webhooks/parse.html).
            is:
              - onBehalfOfSubuser
            responses:
              '200':
                body:
                  application/json: |-
                    {
                      "schema": "{\n    \"type\": \"parse-setting\"\n}",
                      "example": "{\n    \"url\": \"http://mydomain.com/parse\",\n    \"hostname\": \"mail.mydomain.com\",\n    \"spam_check\": true,\n    \"send_raw\": true\n}"
                    }
            securedBy:
              - null
        get:
          description: |-
            **This endpoint allows you to retrieve all of your current inbound parse settings.**

            The inbound parse webhook allows you to have incoming emails parsed, extracting some or all of the contnet, and then have that content POSTed by SendGrid to a URL of your choosing. For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Webhooks/parse.html).
          is:
            - onBehalfOfSubuser
          responses:
            '200':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"result\": {\n            \"type\": \"array\",\n            \"description\": \"The list of your current inbound parse settings.\",\n            \"items\": {\n                \"type\": \"parse-setting\"\n            }\n        }\n    }\n}",
                    "example": "{\n    \"result\": [\n        {\n            \"url\": \"http://mydomain.com/parse\",\n            \"hostname\": \"mail.mydomain.com\",\n            \"spam_check\": true,\n            \"send_raw\": true\n        }\n    ]\n}"
                  }
          securedBy:
            - null
        post:
          description: |-
            **This endpoint allows you to create a new inbound parse setting.**

            The inbound parse webhook allows you to have incoming emails parsed, extracting some or all of the content, and then have that content POSTed by SendGrid to a URL of your choosing. For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Webhooks/parse.html).
          is:
            - onBehalfOfSubuser
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"parse-setting\"\n}",
                "example": "{\n    \"hostname\": \"myhostname.com\",\n    \"url\": \"http://email.myhosthame.com\",\n    \"spam_check\": true,\n    \"send_raw\": false\n}"
              }
          responses:
            '201':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"parse-setting\"\n}",
                    "example": "{\n    \"url\": \"http://email.myhostname.com\",\n    \"hostname\": \"myhostname.com\",\n    \"spam_check\": false,\n    \"send_raw\": true\n}"
                  }
          securedBy:
            - null
      /stats:
        displayName: stats
        get:
          description: |-
            **This endpoint allows you to retrieve the statistics for your Parse Webhook useage.**

            SendGrid's Inbound Parse Webhook allows you to parse the contents and attachments of incomming emails. The Parse API can then POST the parsed emails to a URL that you specify. The Inbound Parse Webhook cannot parse messages greater than 20MB in size, including all attachments.

            There are a number of pre-made integrations for the SendGrid Parse Webhook which make processing events easy. You can find these integrations in the [Library Index](https://sendgrid.com/docs/Integrate/libraries.html#-Webhook-Libraries).
          is:
            - onBehalfOfSubuser
          responses:
            '200':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"date\": {\n                \"type\": \"string\",\n                \"description\": \"The date that the stats were collected.\"\n            },\n            \"stats\": {\n                \"type\": \"array\",\n                \"description\": \"The Parse Webhook usage statistics.\",\n                \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"metrics\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"received\": {\n                                    \"type\": \"number\",\n                                    \"description\": \"The number of emails received and parsed by the Parse Webhook.\"\n                                }\n                            },\n                            \"required\": [\n                                \"received\"\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"required\": [\n            \"date\",\n            \"stats\"\n        ]\n    }\n}",
                    "example": "[\n    {\n        \"date\": \"2015-10-11\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-12\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-13\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-14\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-15\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-16\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-17\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-18\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-19\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-20\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-21\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-22\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-23\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-24\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-25\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-26\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-27\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-28\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-29\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-30\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-31\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-01\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-02\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-03\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-04\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-05\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-06\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-07\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-08\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-09\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-10\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"received\": 0\n                }\n            }\n        ]\n    }\n]"
                  }
          queryParameters:
            limit:
              type: string
              description: The number of statistics to return on each page.
              displayName: The number of statistics to return on each page.
            offset:
              type: string
              description: The number of statistics to skip.
              displayName: The number of statistics to skip.
            aggregated_by:
              type: string
              description: 'How you would like the statistics to by grouped. '
              enum:
                - day
                - week
                - month
              displayName: 'How you would like the statistics to by grouped. '
            start_date:
              type: string
              description: The starting date of the statistics you want to retrieve. Must be in the format YYYY-MM-DD
              displayName: The starting date of the statistics you want to retrieve. Must be in the format YYYY-MM-DD
            end_date:
              type: string
              default: The day the request is made.
              description: The end date of the statistics you want to retrieve. Must be in the format YYYY-MM-DD
              displayName: The end date of the statistics you want to retrieve. Must be in the format YYYY-MM-DD
          securedBy:
            - null
  /settings:
    displayName: settings
    /enforced_tls:
      displayName: enforced_tls
      patch:
        description: |-
          **This endpoint allows you to update your current Enforced TLS settings.**

          The Enforced TLS settings specify whether or not the recipient is required to support TLS or have a valid certificate. See the [SMTP Ports User Guide](https://sendgrid.com/docs/Classroom/Basics/Email_Infrastructure/smtp_ports.html) for more information on opportunistic TLS.

          **Note:** If either setting is enabled and the recipient does not support TLS or have a valid certificate, we drop the message and send a block event with “TLS required but not supported” as the description.
        is:
          - onBehalfOfSubuser
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"require_tls\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if you want to require your recipients to support TLS. \"\n        },\n        \"require_valid_cert\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if you want to require your recipients to have a valid certificate.\"\n        }\n    }\n}",
              "example": "{\n    \"require_tls\": true,\n    \"require_valid_cert\": false\n}"
            }
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"require_tls\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if your recipients are required to support TLS.\"\n        },\n        \"require_valid_cert\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if your recipients are required to have a valid certificate.\"\n        }\n    },\n    \"required\": [\n        \"require_tls\",\n        \"require_valid_cert\"\n    ]\n}",
                  "example": "{\n    \"require_tls\": true,\n    \"require_valid_cert\": false\n}"
                }
        securedBy:
          - null
      get:
        description: |-
          **This endpoint allows you to retrieve your current Enforced TLS settings.**

          The Enforced TLS settings specify whether or not the recipient is required to support TLS or have a valid certificate. See the [SMTP Ports User Guide](https://sendgrid.com/docs/Classroom/Basics/Email_Infrastructure/smtp_ports.html) for more information on opportunistic TLS.

          **Note:** If either setting is enabled and the recipient does not support TLS or have a valid certificate, we drop the message and send a block event with “TLS required but not supported” as the description.
        is:
          - onBehalfOfSubuser
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"require_tls\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if the recipient is required to support TLS.\"\n        },\n        \"require_valid_cert\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if the recipient is required to have a valid certificate.\"\n        }\n    },\n    \"required\": [\n        \"require_tls\",\n        \"require_valid_cert\"\n    ]\n}",
                  "example": "{\n    \"require_tls\": false,\n    \"require_valid_cert\": false\n}"
                }
        securedBy:
          - null
  /email:
    displayName: email
    get:
      description: |-
        **This endpoint allows you to retrieve the email address currently on file for your account.**

        Keeping your user profile up to date is important. This will help SendGrid to verify who you are as well as contact you should we need to.

        For more information about your user profile:

        * [SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"email\": {\n            \"type\": \"string\",\n            \"description\": \"The email address currently on file for your account.\"\n        }\n    },\n    \"required\": [\n        \"email\"\n    ]\n}",
                "example": "{\n    \"email\": \"test@example.com\"\n}"
              }
      securedBy:
        - null
    put:
      description: |-
        **This endpoint allows you to update the email address currently on file for your account.**

        Keeping your user profile up to date is important. This will help SendGrid to verify who you are as well as contact you should we need to.

        For more information about your user profile:

        * [SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"email\": {\n            \"type\": \"string\",\n            \"description\": \"The new email address that you would like to use for your account.\"\n        }\n    }\n}",
            "example": "{\n    \"email\": \"example@example.com\"\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"email\": {\n            \"type\": \"string\",\n            \"description\": \"The current email address on file for your account.\"\n        }\n    },\n    \"required\": [\n        \"email\"\n    ]\n}"
              }
      securedBy:
        - null
  /profile:
    displayName: profile
    get:
      description: |-
        Keeping your user profile up to date is important. This will help SendGrid to verify who you are as well as contact you should we need to.

        For more information about your user profile:

        * [SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"title\": \"GET User Profile response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"address\": {\n            \"type\": \"string\",\n            \"description\": \"The user's address.\"\n        },\n        \"address2\": {\n            \"type\": \"string\",\n            \"description\": \"The second line of the user's address.\"\n        },\n        \"city\": {\n            \"type\": \"string\",\n            \"description\": \"The user's city.\"\n        },\n        \"company\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the user's company.\"\n        },\n        \"country\": {\n            \"type\": \"string\",\n            \"description\": \"The user's country.\"\n        },\n        \"first_name\": {\n            \"type\": \"string\",\n            \"description\": \"The user's first name.\"\n        },\n        \"last_name\": {\n            \"type\": \"string\",\n            \"description\": \"The user's last name.\"\n        },\n        \"phone\": {\n            \"type\": \"string\",\n            \"description\": \"The user's phone number.\"\n        },\n        \"state\": {\n            \"type\": \"string\",\n            \"description\": \"The user's state.\"\n        },\n        \"website\": {\n            \"type\": \"string\",\n            \"description\": \"The user's website URL.\"\n        },\n        \"zip\": {\n            \"type\": \"string\",\n            \"description\": \"The user's zip code.\"\n        }\n    },\n    \"required\": [\n        \"address\",\n        \"city\",\n        \"company\",\n        \"country\",\n        \"first_name\",\n        \"last_name\",\n        \"phone\",\n        \"state\",\n        \"website\",\n        \"zip\"\n    ]\n}",
                "example": "{\n    \"address\": \"814 West Chapman Avenue\",\n    \"address2\": \"\",\n    \"city\": \"Orange\",\n    \"company\": \"SendGrid\",\n    \"country\": \"US\",\n    \"first_name\": \"Test\",\n    \"last_name\": \"User\",\n    \"phone\": \"555-555-5555\",\n    \"state\": \"CA\",\n    \"website\": \"http://www.sendgrid.com\",\n    \"zip\": \"92868\"\n}"
              }
      securedBy:
        - null
    patch:
      description: |-
        **This endpoint allows you to update your current profile details.**

        Keeping your user profile up to date is important. This will help SendGrid to verify who you are as well as contact you should we need to.

        For more information about your user profile:

        * [SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)

        It should be noted that any one or more of the parameters can be updated via the PATCH /user/profile endpoint. The only requirement is that you include at least one when you PATCH.
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"user_profile\"\n}",
            "example": "{\n    \"first_name\": \"Example\",\n    \"last_name\": \"User\",\n    \"city\": \"Orange\"\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"user_profile\"\n}",
                "example": "{\n    \"address\": \"814 West Chapman Avenue\",\n    \"address2\": \"\",\n    \"city\": \"Orange\",\n    \"company\": \"SendGrid\",\n    \"country\": \"US\",\n    \"first_name\": \"Example\",\n    \"last_name\": \"User\",\n    \"phone\": \"555-555-5555\",\n    \"state\": \"CA\",\n    \"website\": \"http://www.sendgrid.com\",\n    \"zip\": \"92868\"\n}"
              }
        '401':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
              }
      securedBy:
        - null
  /username:
    displayName: username
    put:
      description: |-
        **This endpoint allows you to update the username for your account.**

        Keeping your user profile up to date is important. This will help SendGrid to verify who you are as well as contact you should we need to.

        For more information about your user profile:

        * [SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"username\": {\n            \"type\": \"string\",\n            \"description\": \"The new username you would like to use for your account.\"\n        }\n    }\n}",
            "example": "{\n    \"username\": \"test_username\"\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"username\": {\n            \"type\": \"string\",\n            \"description\": \"The current username on file for your account.\"\n        }\n    },\n    \"required\": [\n        \"username\"\n    ]\n}",
                "example": "{\n    \"username\": \"test_username\"\n}"
              }
      securedBy:
        - null
    get:
      description: |-
        **This endpoint allows you to retrieve your current account username.**

        Keeping your user profile up to date is important. This will help SendGrid to verify who you are as well as contact you should we need to.

        For more information about your user profile:

        * [SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"username\": {\n            \"type\": \"string\",\n            \"description\": \"Your account username.\"\n        },\n        \"user_id\": {\n            \"type\": \"integer\",\n            \"description\": \"The user ID for your account.\"\n        }\n    },\n    \"required\": [\n        \"username\",\n        \"user_id\"\n    ]\n}",
                "example": "{\n    \"username\": \"test_username\",\n    \"user_id\": 1\n}"
              }
      securedBy:
        - null
  /account:
    displayName: account
    get:
      description: |-
        **This endpoint allows you to retrieve your user account details.**

        Your user's account information includes the user's account type and reputation.

        Keeping your user profile up to date is important. This will help SendGrid to verify who you are as well as contact you should we need to.

        For more information about your user profile:

        * [SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"title\": \"GET User Account response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"type\": {\n            \"type\": \"string\",\n            \"description\": \"The type of account for this user.\",\n            \"enum\": [\n                \"free\",\n                \"paid\"\n            ]\n        },\n        \"reputation\": {\n            \"type\": \"number\",\n            \"description\": \"The sender reputation for this user.\"\n        }\n    },\n    \"required\": [\n        \"type\",\n        \"reputation\"\n    ]\n}",
                "example": "{\n    \"reputation\": 100,\n    \"type\": \"paid\"\n}"
              }
      securedBy:
        - null
  /scheduled_sends:
    displayName: scheduled_sends
    '/{batch_id}':
      displayName: batch_id
      uriParameters:
        batch_id:
          type: string
      patch:
        description: |-
          **This endpoint allows you to update the status of a scheduled send for the given `batch_id`.**

          The Cancel Scheduled Sends feature allows the customer to cancel a scheduled send based on a Batch ID included in the SMTPAPI header. Scheduled sends cancelled less than 10 minutes before the scheduled time are not guaranteed to be cancelled.
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"type\": \"string\",\n            \"description\": \"The status you would like the scheduled send to have.\",\n            \"enum\": [\n                \"cancel\",\n                \"pause\"\n            ]\n        }\n    },\n    \"required\": [\n        \"status\"\n    ]\n}",
              "example": "{\n    \"status\": \"pause\"\n}"
            }
        responses:
          '204':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"null\"\n}"
                }
          '400':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": \"status\",\n            \"message\": \"status must be either cancel or pause\"\n        }\n    ]\n}"
                }
          '401':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                }
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"batch id not found\"\n        }\n    ]\n}"
                }
            description: '"" : "batch id not found"'
        securedBy:
          - null
      delete:
        description: |-
          **This endpoint allows you to delete the cancellation/pause of a scheduled send.**

          The Cancel Scheduled Sends feature allows the customer to cancel a scheduled send based on a Batch ID included in the SMTPAPI header. Scheduled sends cancelled less than 10 minutes before the scheduled time are not guaranteed to be cancelled.
        responses:
          '204':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"null\"\n}"
                }
          '401':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                }
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"batch id not found\"\n        }\n    ]\n}"
                }
        securedBy:
          - null
      get:
        description: |-
          **This endpoint allows you to retrieve the cancel/paused scheduled send information for a specific `batch_id`.**

          The Cancel Scheduled Sends feature allows the customer to cancel a scheduled send based on a Batch ID included in the SMTPAPI header. Scheduled sends cancelled less than 10 minutes before the scheduled time are not guaranteed to be cancelled.
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"array\",\n    \"title\": \"Retrieve scheduled send response\",\n    \"items\": {\n        \"type\": \"user_scheduled_send_status\"\n    }\n}",
                  "example": "[\n    {\n        \"batch_id\": \"HkJ5yLYULb7Rj8GKSx7u025ouWVlMgAi\",\n        \"status\": \"cancel\"\n    },\n    {\n        \"batch_id\": \"IbLdyLYULb7Rj8GKSx7u025ouWVlAiMg\",\n        \"status\": \"pause\"\n    }\n]"
                }
          '401':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                }
        securedBy:
          - null
    post:
      description: |-
        **This endpoint allows you to cancel or pause an email that has been scheduled to be sent.**

        If the maximum number of cancellations/pauses are added, HTTP 400 will
        be returned.

        The Cancel Scheduled Sends feature allows the customer to cancel a scheduled send based on a Batch ID included in the SMTPAPI header. Scheduled sends cancelled less than 10 minutes before the scheduled time are not guaranteed to be cancelled.
      body:
        application/json: |-
          {
            "schema": "{\n    \"title\": \"Cancel or pause a scheduled send request\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"batch_id\": {\n            \"type\": \"string\",\n            \"description\": \"The batch ID is the identifier that your scheduled mail sends share.\",\n            \"pattern\": \"^[a-zA-Z0-9]\"\n        },\n        \"status\": {\n            \"type\": \"string\",\n            \"default\": \"pause\",\n            \"description\": \"The status of the send you would like to implement. This can be pause or cancel. To delete a pause or cancel status see DELETE /v3/user/scheduled_sends/{batch_id}\",\n            \"enum\": [\n                \"pause\",\n                \"cancel\"\n            ]\n        }\n    },\n    \"required\": [\n        \"batch_id\",\n        \"status\"\n    ]\n}",
            "example": "{\n    \"batch_id\": \"YOUR_BATCH_ID\",\n    \"status\": \"pause\"\n}"
          }
      responses:
        '201':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"user_scheduled_send_status\"\n}"
              }
        '400':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"max limit reached\"\n        },\n        {\n            \"field\": \"batch_id\",\n            \"message\": \"invalid batch id\"\n        },\n        {\n            \"field\": \"batch_id\",\n            \"message\": \"a status for this batch id exists, try PATCH to update the status\"\n        }\n    ]\n}"
              }
          description: |-
            "" : "max limit reached"
            "batch_id" : "invalid batch id"
            "batch_id" : "a status for this batch id exists, try PATCH to update the status"
        '401':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
              }
      securedBy:
        - null
    get:
      description: |-
        **This endpoint allows you to retrieve all cancel/paused scheduled send information.**

        The Cancel Scheduled Sends feature allows the customer to cancel a scheduled send based on a Batch ID included in the SMTPAPI header. Scheduled sends cancelled less than 10 minutes before the scheduled time are not guaranteed to be cancelled.
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"user_scheduled_send_status\"\n    }\n}",
                "example": "[\n    {\n        \"batch_id\": \"YzJlNTkxMmEtOWM3Ny0xMWU1LTkwM2UtNTI1NDAwNmQzZmYzLTVlM2NhNWIwYg\",\n        \"status\": \"cancel\"\n    },\n    {\n        \"batch_id\": \"UtNTI1NDAwNmQzZmYzLTVlM2NhNWIwYgYzJlNTkxMmEtOWM3Ny0xMWU1LTkwM2\",\n        \"status\": \"cancel\"\n    }\n]"
              }
        '401':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
              }
      securedBy:
        - null
  /credits:
    displayName: credits
    get:
      description: |-
        **This endpoint allows you to retrieve the current credit balance for your account.**

        Your monthly credit allotment limits the number of emails you may send before incurring overage charges. For more information about credits and billing, please visit our [Clssroom](https://sendgrid.com/docs/Classroom/Basics/Billing/billing_info_and_faqs.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"remain\": {\n            \"type\": \"integer\",\n            \"description\": \"The remaining number of credits available on your account.\"\n        },\n        \"total\": {\n            \"type\": \"integer\",\n            \"description\": \"The total number of credits assigned to your account.\"\n        },\n        \"overage\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of overdrawn credits for your account.\"\n        },\n        \"used\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of credits that you have used.\"\n        },\n        \"last_reset\": {\n            \"type\": \"string\",\n            \"description\": \"The date that your credit balance was last reset.\"\n        },\n        \"next_reset\": {\n            \"type\": \"string\",\n            \"description\": \"The next date that your credit balance will be reset.\"\n        },\n        \"reset_frequency\": {\n            \"type\": \"string\",\n            \"description\": \"The frequency at which your credit balance will be reset.\"\n        }\n    },\n    \"required\": [\n        \"remain\",\n        \"total\",\n        \"overage\",\n        \"used\",\n        \"last_reset\",\n        \"next_reset\",\n        \"reset_frequency\"\n    ]\n}",
                "example": "{\n    \"remain\": 200,\n    \"total\": 200,\n    \"overage\": 0,\n    \"used\": 0,\n    \"last_reset\": \"2013-01-01\",\n    \"next_reset\": \"2013-02-01\",\n    \"reset_frequency\": \"monthly\"\n}"
              }
      securedBy:
        - null
  /password:
    displayName: password
    put:
      description: |-
        **This endpoint allows you to update your password.**

        Keeping your user profile up to date is important. This will help SendGrid to verify who you are as well as contact you should we need to.

        For more information about your user profile:

        * [SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"new_password\": {\n            \"type\": \"string\",\n            \"description\": \"The new password you would like to use for your account.\"\n        },\n        \"old_password\": {\n            \"type\": \"string\",\n            \"description\": \"The old password for your account.\"\n        }\n    },\n    \"required\": [\n        \"new_password\",\n        \"old_password\"\n    ]\n}",
            "example": "{\n    \"new_password\": \"new_password\",\n    \"old_password\": \"old_password\"\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {}\n}"
              }
      securedBy:
        - null
/mail_settings:
  displayName: mail_settings
  /forward_bounce:
    displayName: forward_bounce
    get:
      description: |-
        **This endpoint allows you to retrieve your current bounce forwarding mail settings.**

        Activating this setting allows you to specify an email address to which bounce reports are forwarded.

        Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"mail_settings_forward_bounce\"\n}",
                "example": "{\n    \"enabled\": false,\n    \"email\": null\n}"
              }
      securedBy:
        - null
    patch:
      description: |-
        **This endpoint allows you to update your current bounce forwarding mail settings.**

        Activating this setting allows you to specify an email address to which bounce reports are forwarded.

        Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"mail_settings_forward_bounce\"\n}",
            "example": "{\n    \"enabled\": true,\n    \"email\": \"example@example.com\"\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"mail_settings_forward_bounce\"\n}",
                "example": "{\n    \"email\": \"\",\n    \"enabled\": true\n}"
              }
      securedBy:
        - null
  get:
    description: |-
      **This endpoint allows you to retrieve a list of all mail settings.**

      Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
    is:
      - onBehalfOfSubuser
    responses:
      '200':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"result\": {\n            \"type\": \"array\",\n            \"description\": \"The list of all mail settings.\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"title\": {\n                        \"type\": \"string\",\n                        \"description\": \"The title of the mail setting.\"\n                    },\n                    \"enabled\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"Indicates if this mail setting is currently enabled.\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the mail setting.\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\",\n                        \"description\": \"A description of the mail setting.\"\n                    }\n                },\n                \"required\": [\n                    \"title\",\n                    \"enabled\",\n                    \"name\",\n                    \"description\"\n                ]\n            }\n        }\n    },\n    \"required\": [\n        \"result\"\n    ]\n}",
              "example": "{\n    \"result\": [\n        {\n            \"title\": \"Address Whitelist\",\n            \"enabled\": false,\n            \"name\": \"address_whitelist\",\n            \"description\": \"Address / domains that should never have email suppressed.\"\n        },\n        {\n            \"title\": \"BCC\",\n            \"enabled\": false,\n            \"name\": \"bcc\",\n            \"description\": \"Automatically BCC an address for every e-mail sent.\"\n        },\n        {\n            \"title\": \"Bounce Purge\",\n            \"enabled\": false,\n            \"name\": \"bounce_purge\",\n            \"description\": \"Allows you to automatically purge bounce records from SendGrid after a specified number of days.\"\n        },\n        {\n            \"title\": \"Event Notification\",\n            \"enabled\": true,\n            \"name\": \"event_notify\",\n            \"description\": \"Controls notifications for events, such as bounces, clicks, and opens.\"\n        },\n        {\n            \"title\": \"Footer\",\n            \"enabled\": false,\n            \"name\": \"footer\",\n            \"description\": \"Allows you to add a custom footer to outgoing email.\"\n        },\n        {\n            \"title\": \"Forward Bounce\",\n            \"enabled\": true,\n            \"name\": \"forward_bounce\",\n            \"description\": \"Allows you to forward bounces to a specific email address.\"\n        },\n        {\n            \"title\": \"Forward Spam\",\n            \"enabled\": false,\n            \"name\": \"forward_spam\",\n            \"description\": \"Allows for a copy of spam reports to be forwarded to an email address.\"\n        },\n        {\n            \"title\": \"Legacy Email Template\",\n            \"enabled\": true,\n            \"name\": \"template\",\n            \"description\": \"Allows you to customize your outgoing HTML emails.\"\n        },\n        {\n            \"title\": \"Plain Content\",\n            \"enabled\": false,\n            \"name\": \"plain_content\",\n            \"description\": \"Convert your plain text emails to HTML.\"\n        },\n        {\n            \"title\": \"Spam Checker\",\n            \"enabled\": true,\n            \"name\": \"spam_check\",\n            \"description\": \"Check outbound messages for spam content.\"\n        }\n    ]\n}"
            }
    queryParameters:
      limit:
        type: integer
        description: The number of settings to return.
        displayName: The number of settings to return.
      offset:
        type: integer
        description: Where in the list of results to begin displaying settings.
        displayName: Where in the list of results to begin displaying settings.
    securedBy:
      - null
  /address_whitelist:
    displayName: address_whitelist
    patch:
      description: |-
        **This endpoint allows you to update your current email address whitelist settings.**

        The address whitelist setting whitelists a specified email address or domain for which mail should never be suppressed. For example, you own the domain “example.com,” and one or more of your recipients use email@example.com addresses, by placing example.com in the address whitelist setting, all bounces, blocks, and unsubscribes logged for that domain will be ignored and sent as if under normal sending conditions.

        Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"enabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if your email address whitelist is enabled.\"\n        },\n        \"list\": {\n            \"type\": \"array\",\n            \"description\": \"Either a single email address that you want whitelisted or a domain, for which all email addresses belonging to this domain will be whitelisted.\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        }\n    }\n}",
            "example": "{\n    \"enabled\": true,\n    \"list\": [\n        \"email1@example.com\",\n        \"example.com\"\n    ]\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"mail_settings_address_whitelabel\"\n}",
                "example": "{\n    \"enabled\": true,\n    \"list\": [\n        \"email1@example.com\"\n    ]\n}"
              }
      securedBy:
        - null
    get:
      description: |-
        **This endpoint allows you to retrieve your current email address whitelist settings.**

        The address whitelist setting whitelists a specified email address or domain for which mail should never be suppressed. For example, you own the domain “example.com,” and one or more of your recipients use email@example.com addresses, by placing example.com in the address whitelist setting, all bounces, blocks, and unsubscribes logged for that domain will be ignored and sent as if under normal sending conditions.

        Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"mail_settings_address_whitelabel\"\n}",
                "example": "{\n    \"enabled\": false,\n    \"list\": [\n        \"example.com\"\n    ]\n}"
              }
      securedBy:
        - null
  /template:
    displayName: template
    get:
      description: |-
        **This endpoint allows you to retrieve your current legacy email template settings.**

        This setting refers to our original email templates. We currently support more fully featured [transactional templates](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html). 

        The legacy email template setting wraps an HTML template around your email content. This can be useful for sending out marketing email and/or other HTML formatted messages.

        Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"mail_settings_template\"\n}",
                "example": "{\n    \"enabled\": false,\n    \"html_content\": \"<p><% body %>Example</p>\\n\"\n}"
              }
      securedBy:
        - null
    patch:
      description: |-
        **This endpoint allows you to update your current legacy email template settings.**

        This setting refers to our original email templates. We currently support more fully featured [transactional templates](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html). 

        The legacy email template setting wraps an HTML template around your email content. This can be useful for sending out marketing email and/or other HTML formatted messages.

        Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"enabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if you want to enable the legacy email template mail setting.\"\n        },\n        \"html_content\": {\n            \"type\": \"string\",\n            \"description\": \"The new HTML content for your legacy email template.\"\n        }\n    }\n}",
            "example": "{\n    \"enabled\": true,\n    \"html_content\": \"<% body %>\"\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"enabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if the legacy email template mail setting is enabled.\"\n        },\n        \"html_content\": {\n            \"type\": \"string\",\n            \"description\": \"The HTML content of your legacy email template.\"\n        }\n    },\n    \"required\": [\n        \"enabled\",\n        \"html_content\"\n    ]\n}",
                "example": "{\n    \"enabled\": false,\n    \"html_content\": \"<p><% body %>Example</p>\\n\"\n}"
              }
      securedBy:
        - null
  /bcc:
    displayName: bcc
    patch:
      description: |-
        **This endpoint allows you to update your current BCC mail settings.**

        When the BCC mail setting is enabled, SendGrid will automatically send a blind carbon copy (BCC) to an address for every email sent without adding that address to the header. Please note that only one email address may be entered in this field, if you wish to distribute BCCs to multiple addresses you will need to create a distribution group or use forwarding rules.

        Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"mail_settings_patch\"\n}",
            "example": "{\n    \"enabled\": false,\n    \"email\": \"email@example.com\"\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"mail_settings_patch\"\n}",
                "example": "{\n    \"email\": \"example@example.com\",\n    \"enabled\": false\n}"
              }
      securedBy:
        - null
    get:
      description: |-
        **This endpoint allows you to retrieve your current BCC mail settings.**

        When the BCC mail setting is enabled, SendGrid will automatically send a blind carbon copy (BCC) to an address for every email sent without adding that address to the header. Please note that only one email address may be entered in this field, if you wish to distribute BCCs to multiple addresses you will need to create a distribution group or use forwarding rules.

        Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"mail_settings_bcc\"\n}",
                "example": "{\n    \"email\": \"example@example.com\",\n    \"enabled\": false\n}"
              }
      securedBy:
        - null
  /spam_check:
    displayName: spam_check
    get:
      description: |-
        **This endpoint allows you to retrieve your current Spam Checker mail settings.**

        The spam checker filter notifies you when emails are detected that exceed a predefined spam threshold.

        Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"mail_settings_spam_check\"\n}",
                "example": "{\n    \"enabled\": false,\n    \"max_score\": 6,\n    \"url\": \"http://example.com\"\n}"
              }
      securedBy:
        - null
    patch:
      description: |-
        **This endpoint allows you to update your current spam checker mail settings.**

        The spam checker filter notifies you when emails are detected that exceed a predefined spam threshold.

        Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"enabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if you want the spam check mail setting to be enabled or not.\"\n        },\n        \"url\": {\n            \"type\": \"string\",\n            \"description\": \"The Inbound Parse URL where you would like your spam reports to be sent to.\"\n        },\n        \"max_score\": {\n            \"type\": \"integer\",\n            \"default\": 5,\n            \"description\": \"The new max score, or spam threshold that you would like to set for the spam checker.\",\n            \"minimum\": 1,\n            \"maximum\": 10\n        }\n    }\n}",
            "example": "{\n    \"enabled\": true,\n    \"url\": \"url\",\n    \"max_score\": 5\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"mail_settings_spam_check\"\n}",
                "example": "{\n    \"enabled\": false,\n    \"max_score\": 6,\n    \"url\": \"http://example.com\"\n}"
              }
      securedBy:
        - null
  /footer:
    displayName: footer
    patch:
      description: |-
        **This endpoint allows you to update your current Footer mail settings.**

        The footer setting will insert a custom footer at the bottom of the text and HTML bodies. Use the embedded HTML editor and plain text entry fields to create the content of the footers to be inserted into your emails.

        Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"mail_settings_footer\"\n}",
            "example": "{\n    \"enabled\": true,\n    \"html_content\": \"...\",\n    \"plain_content\": \"...\"\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"mail_settings_footer\"\n}",
                "example": "{\n    \"enabled\": true,\n    \"html_content\": \"Example HTML content\",\n    \"plain_content\": \"Example plain content\"\n}"
              }
      securedBy:
        - null
    get:
      description: |-
        **This endpoint allows you to retrieve your current Footer mail settings.**

        The footer setting will insert a custom footer at the bottom of the text and HTML bodies. Use the embedded HTML editor and plain text entry fields to create the content of the footers to be inserted into your emails.

        Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"mail_settings_footer\"\n}",
                "example": "{\n    \"enabled\": true,\n    \"html_content\": \"Example HTML content\",\n    \"plain_content\": \"Example plain content\"\n}"
              }
      securedBy:
        - null
  /plain_content:
    displayName: plain_content
    get:
      description: |-
        **This endpoint allows you to retrieve your current Plain Content mail settings.**

        The plain content setting will automatically convert any plain text emails that you send to HTML before sending.

        Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"enabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if the Plain Content mail setting is enabled.\"\n        }\n    }\n}",
                "example": "{\n    \"enabled\": false\n}"
              }
      securedBy:
        - null
    patch:
      description: |-
        **This endpoint allows you to update your current Plain Content mail settings.**

        The plain content setting will automatically convert any plain text emails that you send to HTML before sending.

        Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"enabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"The new setting you would like to use for your Plain Content mail setting.\"\n        }\n    }\n}",
            "example": "{\n    \"enabled\": false\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"enabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if your Plain Content mail setting is enabled.\"\n        }\n    }\n}",
                "example": "{\n    \"enabled\": false\n}"
              }
      securedBy:
        - null
  /forward_spam:
    displayName: forward_spam
    patch:
      description: |-
        **This endpoint allows you to update your current Forward Spam mail settings.**

        Enabling the forward spam setting allows you to specify an email address to which spam reports will be forwarded.

        Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"mail_settings_forward_spam\"\n}",
            "example": "{\n    \"email\": \"\",\n    \"enabled\": false\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"mail_settings_forward_spam\"\n}",
                "example": "{\n    \"email\": \"\",\n    \"enabled\": false\n}"
              }
      securedBy:
        - null
    get:
      description: |-
        **This endpoint allows you to retrieve your current Forward Spam mail settings.**

        Enabling the forward spam setting allows you to specify an email address to which spam reports will be forwarded.

        Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"mail_settings_forward_spam\"\n}",
                "example": "{\n    \"email\": \"\",\n    \"enabled\": true\n}"
              }
      securedBy:
        - null
  /bounce_purge:
    displayName: bounce_purge
    patch:
      description: |-
        **This endpoint allows you to update your current bounce purge settings.**

        This setting allows you to set a schedule for SendGrid to automatically delete contacts from your soft and hard bounce suppression lists.

        Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"mail_settings_bounce_purge\"\n}",
            "example": "{\n    \"enabled\": true,\n    \"hard_bounces\": 5,\n    \"soft_bounces\": 5\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"mail_settings_bounce_purge\"\n}",
                "example": "{\n    \"enabled\": false,\n    \"hard_bounces\": null,\n    \"soft_bounces\": null\n}"
              }
      securedBy:
        - null
    get:
      description: |-
        **This endpoint allows you to retrieve your current bounce purge settings.**

        This setting allows you to set a schedule for SendGrid to automatically delete contacts from your soft and hard bounce suppression lists.

        Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"mail_settings_bounce_purge\"\n}",
                "example": "{\n    \"enabled\": false,\n    \"soft_bounces\": 1234,\n    \"hard_bounces\": null\n}"
              }
      securedBy:
        - null
/asm:
  displayName: asm
  /groups:
    displayName: groups
    '/{group_id}':
      displayName: group_id
      /suppressions:
        displayName: suppressions
        /search:
          displayName: search
          post:
            description: |-
              **This endpoint allows you to search a suppression group for multiple suppressions.**

              When given a list of email addresses and a group ID, this endpoint will return only the email addresses that have been unsubscribed from the given group.

              Suppressions are a list of email addresses that will not receive content sent under a given [group](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html).
            is:
              - onBehalfOfSubuser
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"recipient_emails\": {\n            \"type\": \"array\",\n            \"description\": \"The list of email address that you want to search the suppression group for.\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        }\n    },\n    \"required\": [\n        \"recipient_emails\"\n    ]\n}",
                  "example": "{\n    \"recipient_emails\": [\n        \"exists1@example.com\",\n        \"exists2@example.com\",\n        \"doesnotexists@example.com\"\n    ]\n}"
                }
            responses:
              '200':
                body:
                  application/json: |-
                    {
                      "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"recipient_emails\": {\n            \"type\": \"array\",\n            \"description\": \"The email address from your search that do exist in the suppression group.\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        }\n    },\n    \"required\": [\n        \"recipient_emails\"\n    ]\n}",
                      "example": "{\n    \"recipient_emails\": [\n        \"exists1@example.com\",\n        \"exists2@example.com\"\n    ]\n}"
                    }
            securedBy:
              - null
        post:
          description: |-
            **This endpoint allows you to add email addresses to an unsubscribe group.**

            If you attempt to add suppressions to a group that has been deleted or does not exist, the suppressions will be added to the global suppressions list.

            Suppressions are recipient email addresses that are added to [unsubscribe groups](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html). Once a recipient's address is on the suppressions list for an unsubscribe group, they will not receive any emails that are tagged with that unsubscribe group.
          is:
            - onBehalfOfSubuser
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"recipient_emails\": {\n            \"type\": \"array\",\n            \"description\": \"The email address that you want to add to the unsubscribe group.\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        }\n    },\n    \"required\": [\n        \"recipient_emails\"\n    ]\n}",
                "example": "{\n    \"recipient_emails\": [\n        \"test1@example.com\",\n        \"test2@example.com\"\n    ]\n}"
              }
          responses:
            '201':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"recipient_emails\": {\n            \"type\": \"array\",\n            \"description\": \"The email address that were added to the suppressions list.\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        }\n    },\n    \"required\": [\n        \"recipient_emails\"\n    ]\n}",
                    "example": "{\n    \"recipient_emails\": [\n        \"test1@example.com\",\n        \"test2@example.com\"\n    ]\n}"
                  }
          securedBy:
            - null
        get:
          description: |-
            **This endpoint allows you to retrieve all suppressed email addresses belonging to the given group.**

            Suppressions are recipient email addresses that are added to [unsubscribe groups](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html). Once a recipient's address is on the suppressions list for an unsubscribe group, they will not receive any emails that are tagged with that unsubscribe group.
          is:
            - onBehalfOfSubuser
          responses:
            '200':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"array\",\n    \"description\": \"The list of email addresses belonging to the given suppression group.\",\n    \"items\": {\n        \"type\": \"string\"\n    }\n}",
                    "example": "[\n    \"example@example.com\",\n    \"example2@example.com\"\n]"
                  }
          securedBy:
            - null
        '/{email}':
          displayName: email
          uriParameters:
            email:
              type: string
              description: The email address that you want to remove from the suppression group.
              displayName: The email address that you want to remove from the suppression group.
          delete:
            description: |-
              **This endpoint allows you to remove a suppressed email address from the given suppression group.**

              Suppressions are recipient email addresses that are added to [unsubscribe groups](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html). Once a recipient's address is on the suppressions list for an unsubscribe group, they will not receive any emails that are tagged with that unsubscribe group.
            is:
              - onBehalfOfSubuser
            responses:
              '204':
                body:
                  application/json: |-
                    {
                      "schema": "{\n    \"type\": \"null\"\n}"
                    }
            securedBy:
              - null
      uriParameters:
        group_id:
          type: string
      get:
        description: |-
          **This endpoint allows you to retrieve a single suppression group.**

          Suppression groups, or unsubscribe groups, are specific types or categories of email that you would like your recipients to be able to unsubscribe from. For example: Daily Newsletters, Invoices, System Alerts.

          The **name** and **description** of the unsubscribe group will be visible by recipients when they are managing their subscriptions.

          Each user can create up to 25 different suppression groups.
        is:
          - onBehalfOfSubuser
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"description\": {\n            \"type\": \"string\",\n            \"description\": \"The description of the suppression group.\"\n        },\n        \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"The ID of the suppression group.\"\n        },\n        \"is_default\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if this is the default suppression group.\"\n        },\n        \"last_email_sent_at\": {\n            \"type\": \"null\",\n            \"description\": \"A unix timestamp indicating the last time this group was assigned to an email.\"\n        },\n        \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the suppression group.\"\n        },\n        \"unsubscribes\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of unsubscribes, or suppressions, in this group.\"\n        }\n    }\n}",
                  "example": "{\n    \"description\": \"Our monthly newsletter.\",\n    \"id\": 100,\n    \"is_default\": true,\n    \"last_email_sent_at\": null,\n    \"name\": \"Newsletters\",\n    \"unsubscribes\": 400\n}"
                }
        securedBy:
          - null
      delete:
        description: |-
          **This endpoint allows you to delete a suppression group.**

          You can only delete groups that have not been attached to sent mail in the last 60 days. If a recipient uses the "one-click unsubscribe" option on an email associated with a deleted group, that recipient will be added to the global suppression list.

          Suppression groups, or unsubscribe groups, are specific types or categories of email that you would like your recipients to be able to unsubscribe from. For example: Daily Newsletters, Invoices, System Alerts.

          The **name** and **description** of the unsubscribe group will be visible by recipients when they are managing their subscriptions.

          Each user can create up to 25 different suppression groups.
        is:
          - onBehalfOfSubuser
        responses:
          '204':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\"\n}"
                }
        securedBy:
          - null
      patch:
        description: |-
          **This endpoint allows you to update or change a suppression group.**

          Suppression groups, or unsubscribe groups, are specific types or categories of email that you would like your recipients to be able to unsubscribe from. For example: Daily Newsletters, Invoices, System Alerts.

          The **name** and **description** of the unsubscribe group will be visible by recipients when they are managing their subscriptions.

          Each user can create up to 25 different suppression groups.
        is:
          - authorizationHeader
          - onBehalfOfSubuser
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"The id of the suppression group.\"\n        },\n        \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the suppression group. Each group created by a user must have a unique name.\",\n            \"maxLength\": 30\n        },\n        \"description\": {\n            \"type\": \"string\",\n            \"description\": \"The description of the suppression group.\",\n            \"maxLength\": 100\n        },\n        \"is_default\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if the suppression group is set as the default group.\"\n        }\n    },\n    \"required\": [\n        \"name\"\n    ]\n}",
              "example": "{\n    \"id\": 103,\n    \"name\": \"Item Suggestions\",\n    \"description\": \"Suggestions for items our users might like.\"\n}"
            }
        responses:
          '201':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"suppression_group\"\n}",
                  "example": "{\n    \"id\": 103,\n    \"name\": \"Item Suggestions\",\n    \"description\": \"Suggestions for items our users might like.\"\n}"
                }
    get:
      description: |-
        **This endpoint allows you to retrieve information about multiple suppression groups.**

        This endpoint will return information for each group ID that you include in your request. To add a group ID to your request, simply append `&id=` followed by the group ID.

        Suppressions are a list of email addresses that will not receive content sent under a given [group](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html).

        Suppression groups, or [unsubscribe groups](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html), allow you to label a category of content that you regularly send. This gives your recipients the ability to opt out of a specific set of your email. For example, you might define a group for your transactional email, and one for your marketing email so that your users can continue recieving your transactional email witout having to receive your marketing content.
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"suppression_group\"\n    }\n}",
                "example": "[\n    {\n        \"id\": 100,\n        \"name\": \"Newsletters\",\n        \"description\": \"Our monthly newsletter.\",\n        \"last_email_sent_at\": null,\n        \"is_default\": true,\n        \"unsubscribes\": 400\n    },\n    {\n        \"id\": 101,\n        \"name\": \"Alerts\",\n        \"description\": \"Emails triggered by user-defined rules.\",\n        \"last_email_sent_at\": null,\n        \"is_default\": false,\n        \"unsubscribes\": 1\n    }\n]"
              }
      queryParameters:
        id:
          type: integer
          description: The ID of a suppression group that you want to retrieve information for.
          displayName: The ID of a suppression group that you want to retrieve information for.
      securedBy:
        - null
    post:
      description: |-
        **This endpoint allows you to create a new suppression group.**

        Suppression groups, or unsubscribe groups, are specific types or categories of email that you would like your recipients to be able to unsubscribe from. For example: Daily Newsletters, Invoices, System Alerts.

        The **name** and **description** of the unsubscribe group will be visible by recipients when they are managing their subscriptions.

        Each user can create up to 25 different suppression groups.
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name that you would like to use for your new suppression group.\",\n            \"maxLength\": 30\n        },\n        \"description\": {\n            \"type\": \"string\",\n            \"description\": \"A brief description of your new suppression group.\",\n            \"maxLength\": 100\n        },\n        \"is_default\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if you would like this to be your default suppression group.\"\n        }\n    },\n    \"required\": [\n        \"name\",\n        \"description\"\n    ]\n}",
            "example": "{\n    \"name\": \"Product Suggestions\",\n    \"description\": \"Suggestions for products our users might like.\",\n    \"is_default\": true\n}"
          }
      responses:
        '201':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"The ID of the suppression group.\"\n        },\n        \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the suppression group.\"\n        },\n        \"description\": {\n            \"type\": \"string\",\n            \"description\": \"A brief description of the suppression group.\"\n        },\n        \"is_default\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if this is the default suppression group.\"\n        }\n    },\n    \"required\": [\n        \"id\",\n        \"name\",\n        \"description\",\n        \"is_default\"\n    ]\n}",
                "example": "{\n    \"id\": 103,\n    \"name\": \"Product Suggestions\",\n    \"description\": \"Suggestions for products our users might like.\",\n    \"is_default\": false\n}"
              }
      securedBy:
        - null
  /suppressions:
    displayName: suppressions
    '/{email}':
      displayName: email
      uriParameters:
        email:
          type: string
          description: The email address that you want to search suppression groups for.
          displayName: The email address that you want to search suppression groups for.
      get:
        description: |-
          **This endpoint returns the list of all groups that the given email address has been unsubscribed from.**

          Suppressions are a list of email addresses that will not receive content sent under a given [group](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html).
        is:
          - onBehalfOfSubuser
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"suppressions\": {\n            \"type\": \"array\",\n            \"description\": \"The array of suppression groups.\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"description\": {\n                        \"type\": \"string\",\n                        \"description\": \"The description of the suppression group.\"\n                    },\n                    \"id\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The id of the suppression group.\"\n                    },\n                    \"is_default\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"Indicates if the suppression group  is set as the default.\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the suppression group.\"\n                    },\n                    \"suppressed\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"Indicates if the given email address is suppressed for this group.\"\n                    }\n                },\n                \"required\": [\n                    \"description\",\n                    \"id\",\n                    \"is_default\",\n                    \"name\",\n                    \"suppressed\"\n                ]\n            }\n        }\n    },\n    \"required\": [\n        \"suppressions\"\n    ]\n}",
                  "example": "{\n    \"suppressions\": [\n        {\n            \"description\": \"Optional description.\",\n            \"id\": 1,\n            \"is_default\": true,\n            \"name\": \"Weekly News\",\n            \"suppressed\": true\n        },\n        {\n            \"description\": \"Some daily news.\",\n            \"id\": 2,\n            \"is_default\": true,\n            \"name\": \"Daily News\",\n            \"suppressed\": true\n        },\n        {\n            \"description\": \"An old group.\",\n            \"id\": 2,\n            \"is_default\": false,\n            \"name\": \"Old News\",\n            \"suppressed\": false\n        }\n    ]\n}"
                }
        securedBy:
          - null
    /global:
      displayName: global
      '/{email}':
        displayName: email
        uriParameters:
          email:
            type: string
            description: The email address you want to remove from the global suppressions group.
            displayName: The email address you want to remove from the global suppressions group.
        get:
          description: |-
            **This endpoint allows you to retrieve a global suppression. You can also use this endpoint to confirm if an email address is already globally suppresed.**

            If the email address you include in the URL path parameter `{email}` is alreayd globally suppressed, the response will include that email address. If the address you enter for `{email}` is not globally suppressed, an empty JSON object `{}` will be returned.

            A global suppression (or global unsubscribe) is an email address of a recipient who does not want to receive any of your messages. A globally suppressed recipient will be removed from any email you send. For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/global_unsubscribes.html).
          is:
            - onBehalfOfSubuser
          responses:
            '200':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"title\": \"Retrieve a Global Suppression response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"recipient_email\": {\n            \"type\": \"string\",\n            \"description\": \"The email address that is globally suppressed. This will be an empty object if the email address you included in your call is not globally suppressed.\"\n        }\n    },\n    \"required\": [\n        \"recipient_email\"\n    ]\n}"
                  }
          securedBy:
            - null
        delete:
          description: |-
            **This endpoint allows you to remove an email address from the global suppressions group.**

            A global suppression (or global unsubscribe) is an email address of a recipient who does not want to receive any of your messages. A globally suppressed recipient will be removed from any email you send. For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/global_unsubscribes.html).
          is:
            - onBehalfOfSubuser
          responses:
            '204':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"object\"\n}"
                  }
          securedBy:
            - null
      post:
        description: |-
          **This endpoint allows you to add one or more email addresses to the global suppressions group.**

          A global suppression (or global unsubscribe) is an email address of a recipient who does not want to receive any of your messages. A globally suppressed recipient will be removed from any email you send. For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/global_unsubscribes.html).
        is:
          - onBehalfOfSubuser
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"recipient_emails\": {\n            \"type\": \"array\",\n            \"description\": \"The email address, or addresses, that you want to add to the global suppressions group.\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        }\n    }\n}",
              "example": "{\n    \"recipient_emails\": [\n        \"test1@example.com\",\n        \"test2@example.com\"\n    ]\n}"
            }
        responses:
          '201':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"recipient_emails\": {\n            \"type\": \"array\",\n            \"description\": \"The email addresses that are globally suppressed\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        }\n    },\n    \"required\": [\n        \"recipient_emails\"\n    ]\n}",
                  "example": "{\n    \"recipient_emails\": [\n        \"test1@example.com\",\n        \"test2@example.com\"\n    ]\n}"
                }
        securedBy:
          - null
    get:
      description: |-
        **This endpoint allows you to retrieve a list of all suppressions.**

        Suppressions are a list of email addresses that will not receive content sent under a given [group](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"email\": {\n                \"type\": \"string\",\n                \"description\": \"The email address that was suppressed.\"\n            },\n            \"group_id\": {\n                \"type\": \"integer\",\n                \"description\": \"The id of the suppression group that this email address belongs to.\"\n            },\n            \"group_name\": {\n                \"type\": \"string\",\n                \"description\": \"The name of the suppression group that this email address belongs to.\"\n            },\n            \"created_at\": {\n                \"type\": \"integer\",\n                \"description\": \"A UNIX timestamp indicating when the suppression was created.\"\n            }\n        },\n        \"required\": [\n            \"email\",\n            \"group_id\",\n            \"group_name\",\n            \"created_at\"\n        ]\n    }\n}",
                "example": "[\n    {\n        \"email\": \"test1@example.com\",\n        \"group_id\": 1,\n        \"group_name\": \"Weekly News\",\n        \"created_at\": 1410986704\n    },\n    {\n        \"email\": \"test1@example.com\",\n        \"group_id\": 2,\n        \"group_name\": \"Daily News\",\n        \"created_at\": 1411493671\n    },\n    {\n        \"email\": \"test2@example.com\",\n        \"group_id\": 2,\n        \"group_name\": \"Daily News\",\n        \"created_at\": 1411493671\n    }\n]"
              }
      securedBy:
        - null
/suppression:
  displayName: suppression
  /spam_reports:
    displayName: spam_reports
    '/{email}':
      displayName: email
      uriParameters:
        email:
          type: string
          description: The email address of a specific spam report that you want to retrieve.
          displayName: The email address of a specific spam report that you want to retrieve.
      delete:
        description: |-
          **This endpoint allows you to delete a specific spam report.**

          [Spam reports](https://sendgrid.com/docs/Glossary/spam_reports.html) happen when a recipient indicates that they think your email is [spam](https://sendgrid.com/docs/Glossary/spam.html) and then their email provider reports this to SendGrid.

          For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/spam_reports.html).
        is:
          - onBehalfOfSubuser
        responses:
          '204':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {}\n}"
                }
        securedBy:
          - null
      get:
        description: |-
          **This endpoint allows you to retrieve a specific spam report.**

          [Spam reports](https://sendgrid.com/docs/Glossary/spam_reports.html) happen when a recipient indicates that they think your email is [spam](https://sendgrid.com/docs/Glossary/spam.html) and then their email provider reports this to SendGrid.

          For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/spam_reports.html).
        is:
          - onBehalfOfSubuser
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"created\": {\n                \"type\": \"integer\",\n                \"description\": \"A Unix timestamp that indicates when the recipient marked your message as spam.\"\n            },\n            \"email\": {\n                \"type\": \"string\",\n                \"description\": \"The email address of the recipient that marked your message as spam.\"\n            },\n            \"ip\": {\n                \"type\": \"string\",\n                \"description\": \"The IP address that the message was sent from.\"\n            }\n        },\n        \"required\": [\n            \"created\",\n            \"email\",\n            \"ip\"\n        ]\n    }\n}",
                  "example": "[\n    {\n        \"created\": 1454433146,\n        \"email\": \"test1@example.com\",\n        \"ip\": \"10.89.32.5\"\n    }\n]"
                }
        securedBy:
          - null
    get:
      description: |-
        **This endpoint allows you to retrieve all spam reports.**

        [Spam reports](https://sendgrid.com/docs/Glossary/spam_reports.html) happen when a recipient indicates that they think your email is [spam](https://sendgrid.com/docs/Glossary/spam.html) and then their email provider reports this to SendGrid.

        For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/spam_reports.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"created\": {\n                \"type\": \"integer\",\n                \"description\": \"A Unix timestamp indicating when the spam report was made.\"\n            },\n            \"email\": {\n                \"type\": \"string\",\n                \"description\": \"The email address of the recipient who marked your message as spam.\"\n            },\n            \"ip\": {\n                \"type\": \"string\",\n                \"description\": \"The IP address that the message was sent on.\"\n            }\n        },\n        \"required\": [\n            \"created\",\n            \"email\",\n            \"ip\"\n        ]\n    }\n}",
                "example": "[\n    {\n        \"created\": 1443651141,\n        \"email\": \"user1@example.com\",\n        \"ip\": \"10.63.202.100\"\n    },\n    {\n        \"created\": 1443651154,\n        \"email\": \"user2@example.com\",\n        \"ip\": \"10.63.202.100\"\n    }\n]"
              }
      queryParameters:
        start_time:
          type: integer
          description: Refers start of the time range in unix timestamp when a spam report was created (inclusive).
          displayName: Refers start of the time range in unix timestamp when a spam report was created (inclusive).
        end_time:
          type: integer
          description: Refers end of the time range in unix timestamp when a spam report was created (inclusive).
          displayName: Refers end of the time range in unix timestamp when a spam report was created (inclusive).
        limit:
          type: integer
          description: Limit the number of results to be displayed per page.
          displayName: Limit the number of results to be displayed per page.
        offset:
          type: integer
          description: Paging offset. The point in the list to begin displaying results.
          displayName: Paging offset. The point in the list to begin displaying results.
      securedBy:
        - null
    delete:
      description: |-
        **This endpoint allows you to delete your spam reports.**

        There are two options for deleting spam reports: 

        1) You can delete all spam reports by setting "delete_all" to true in the request body. 
        2) You can delete some spam reports by specifying the email addresses in an array in the request body.

        [Spam reports](https://sendgrid.com/docs/Glossary/spam_reports.html) happen when a recipient indicates that they think your email is [spam](https://sendgrid.com/docs/Glossary/spam.html) and then their email provider reports this to SendGrid.

        For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/spam_reports.html).
      is:
        - onBehalfOfSubuser
      responses:
        '204':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {}\n}"
              }
      securedBy:
        - null
  /invalid_emails:
    displayName: invalid_emails
    '/{email}':
      displayName: email
      uriParameters:
        email:
          type: string
          description: The invalid email address that you want to remove.
          displayName: The invalid email address that you want to remove.
      get:
        description: |-
          **This endpoint allows you to retrieve a specific invalid email addresses.**

          An invalid email occurs when you attempt to send email to an address that is formatted in a manner that does not meet internet email format standards or the email does not exist at the recipient’s mail server.

          Examples include addresses without the “@” sign or addresses that include certain special characters and/or spaces. This response can come from our own server or the recipient mail server.

          For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/invalid_emails.html).
        is:
          - authorizationHeader
          - onBehalfOfSubuser
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"created\": {\n                \"type\": \"integer\",\n                \"description\": \"A Unix timestamp indicating when the email address was added to the invalid emails list.\"\n            },\n            \"email\": {\n                \"type\": \"string\",\n                \"description\": \"The email address that was marked as invalid.\"\n            },\n            \"reason\": {\n                \"type\": \"string\",\n                \"description\": \"A reason explaining why the email address was marked as invalid.\"\n            }\n        },\n        \"required\": [\n            \"created\",\n            \"email\",\n            \"reason\"\n        ]\n    }\n}",
                  "example": "[\n    {\n        \"created\": 1454433146,\n        \"email\": \"test1@example.com\",\n        \"reason\": \"Mail domain mentioned in email address is unknown\"\n    }\n]"
                }
      delete:
        description: |-
          **This endpoint allows you to remove a specific email address from the invalid email address list.**

          An invalid email occurs when you attempt to send email to an address that is formatted in a manner that does not meet internet email format standards or the email does not exist at the recipient’s mail server.

          Examples include addresses without the “@” sign or addresses that include certain special characters and/or spaces. This response can come from our own server or the recipient mail server.

          For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/invalid_emails.html).
        is:
          - authorizationHeader
          - onBehalfOfSubuser
        responses:
          '204':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {}\n}"
                }
    delete:
      description: |-
        **This endpoint allows you to remove email addresses from your invalid email address list.**

        There are two options for deleting invalid email addresses: 

        1) You can delete all invalid email addresses by setting `delete_all` to true in the request body.
        2) You can delete some invalid email addresses by specifying certain addresses in an array in the request body.

        An invalid email occurs when you attempt to send email to an address that is formatted in a manner that does not meet internet email format standards or the email does not exist at the recipient’s mail server.

        Examples include addresses without the “@” sign or addresses that include certain special characters and/or spaces. This response can come from our own server or the recipient mail server.

        For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/invalid_emails.html).
      is:
        - onBehalfOfSubuser
      responses:
        '204':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {}\n}"
              }
      securedBy:
        - null
    get:
      description: |-
        **This endpoint allows you to retrieve a list of all invalid email addresses.**

        An invalid email occurs when you attempt to send email to an address that is formatted in a manner that does not meet internet email format standards or the email does not exist at the recipient’s mail server.

        Examples include addresses without the “@” sign or addresses that include certain special characters and/or spaces. This response can come from our own server or the recipient mail server.

        For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/invalid_emails.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"array\",\n    \"description\": \"The list of invalid email addresses.\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"created\": {\n                \"type\": \"integer\",\n                \"description\": \"A Unix timestamp indicating when the email address was added to the invalid emails list.\"\n            },\n            \"email\": {\n                \"type\": \"string\",\n                \"description\": \"The email address that was marked as invalid.\"\n            },\n            \"reason\": {\n                \"type\": \"string\",\n                \"description\": \"The reason that the email address was marked as invalid.\"\n            }\n        },\n        \"required\": [\n            \"created\",\n            \"email\",\n            \"reason\"\n        ]\n    }\n}",
                "example": "[\n    {\n        \"created\": 1449953655,\n        \"email\": \"user1@example.com\",\n        \"reason\": \"Mail domain mentioned in email address is unknown\"\n    },\n    {\n        \"created\": 1449939373,\n        \"email\": \"user1@example.com\",\n        \"reason\": \"Mail domain mentioned in email address is unknown\"\n    }\n]"
              }
      queryParameters:
        start_time:
          type: integer
          description: Refers start of the time range in unix timestamp when an invalid email was created (inclusive).
          displayName: Refers start of the time range in unix timestamp when an invalid email was created (inclusive).
        end_time:
          type: integer
          description: Refers end of the time range in unix timestamp when an invalid email was created (inclusive).
          displayName: Refers end of the time range in unix timestamp when an invalid email was created (inclusive).
        limit:
          type: integer
          description: Limit the number of results to be displayed per page.
          displayName: Limit the number of results to be displayed per page.
        offset:
          type: integer
          description: Paging offset. The point in the list to begin displaying results.
          displayName: Paging offset. The point in the list to begin displaying results.
      securedBy:
        - null
  /blocks:
    displayName: blocks
    '/{email}':
      displayName: email
      uriParameters:
        email:
          type: string
          description: The blocked email address that you want to delete.
          displayName: The blocked email address that you want to delete.
      get:
        description: |-
          **This endpoint allows you to retrieve a specific email address from your blocks list.**

          [Blocks](https://sendgrid.com/docs/Glossary/blocks.html) happen when your message was rejected for a reason related to the message, not the recipient address. This can happen when your mail server IP address has been added to a blacklist or blocked by an ISP, or if the message content is flagged by a filter on the receiving server.

          For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/blocks.html).
        is:
          - onBehalfOfSubuser
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"created\": {\n                \"type\": \"integer\",\n                \"description\": \"A Unix timestamp indicating when the block was created.\"\n            },\n            \"email\": {\n                \"type\": \"string\",\n                \"description\": \"The email address of the recipient that was blocked.\"\n            },\n            \"reason\": {\n                \"type\": \"string\",\n                \"description\": \"The reason why the email was blocked.\"\n            },\n            \"status\": {\n                \"type\": \"string\",\n                \"description\": \"The status of the block.\"\n            }\n        },\n        \"required\": [\n            \"created\",\n            \"email\",\n            \"reason\"\n        ]\n    }\n}",
                  "example": "[\n    {\n        \"created\": 1443651154,\n        \"email\": \"example@example.com\",\n        \"reason\": \"error dialing remote address: dial tcp 10.57.152.165:25: no route to host\",\n        \"status\": \"4.0.0\"\n    }\n]"
                }
        securedBy:
          - null
      delete:
        description: |-
          **This endpoint allows you to delete a specific email address from your blocks list.**

          [Blocks](https://sendgrid.com/docs/Glossary/blocks.html) happen when your message was rejected for a reason related to the message, not the recipient address. This can happen when your mail server IP address has been added to a blacklist or blocked by an ISP, or if the message content is flagged by a filter on the receiving server.

          For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/blocks.html).
        is:
          - authorizationHeader
          - onBehalfOfSubuser
        responses:
          '204':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {}\n}"
                }
    delete:
      description: |-
        **This endpoint allows you to delete all email addresses on your blocks list.**

        There are two options for deleting blocked emails: 

        1. You can delete all blocked emails by setting `delete_all` to true in the request body. 
        2. You can delete some blocked emails by specifying the email addresses in an array in the request body.

        [Blocks](https://sendgrid.com/docs/Glossary/blocks.html) happen when your message was rejected for a reason related to the message, not the recipient address. This can happen when your mail server IP address has been added to a blacklist or blocked by an ISP, or if the message content is flagged by a filter on the receiving server.

        For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/blocks.html).
      is:
        - onBehalfOfSubuser
      responses:
        '204':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {}\n}"
              }
      securedBy:
        - null
    get:
      description: |-
        **This endpoint allows you to retrieve a list of all email addresses that are currently on your blocks list.**

        There are several causes for [blocked](https://sendgrid.com/docs/Glossary/blocks.html) emails: for example, your mail server IP address is on an ISP blacklist, or blocked by an ISP, or if the receiving server flags the message content.

        For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/blocks.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"created\": {\n                \"type\": \"integer\",\n                \"description\": \"A Unix timestamp indicating when the email address was added to the blocks list.\"\n            },\n            \"email\": {\n                \"type\": \"string\",\n                \"description\": \"The email address that was added to the block list.\"\n            },\n            \"reason\": {\n                \"type\": \"string\",\n                \"description\": \"An explanation for the reason of the block.\"\n            },\n            \"status\": {\n                \"type\": \"string\",\n                \"description\": \"The status of the block.\"\n            }\n        },\n        \"required\": [\n            \"created\",\n            \"email\",\n            \"reason\",\n            \"status\"\n        ]\n    }\n}",
                "example": "[\n    {\n        \"created\": 1443651154,\n        \"email\": \"example@example.com\",\n        \"reason\": \"error dialing remote address: dial tcp 10.57.152.165:25: no route to host\",\n        \"status\": \"4.0.0\"\n    }\n]"
              }
      queryParameters:
        start_time:
          type: integer
          description: Refers start of the time range in unix timestamp when a blocked email was created (inclusive).
          displayName: Refers start of the time range in unix timestamp when a blocked email was created (inclusive).
        end_time:
          type: integer
          description: Refers end of the time range in unix timestamp when a blocked email was created (inclusive).
          displayName: Refers end of the time range in unix timestamp when a blocked email was created (inclusive).
        limit:
          type: integer
          description: Limit the number of results to be displayed per page.
          displayName: Limit the number of results to be displayed per page.
        offset:
          type: integer
          description: The point in the list to begin displaying results.
          displayName: The point in the list to begin displaying results.
      securedBy:
        - null
  /unsubscribes:
    displayName: unsubscribes
    get:
      description: |-
        **This endpoint allows you to retrieve a list of all email address that are globally suppressed.**

        A global suppression (or global unsubscribe) is an email address of a recipient who does not want to receive any of your messages. A globally suppressed recipient will be removed from any email you send. For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/global_unsubscribes.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"created\": {\n                \"type\": \"integer\",\n                \"description\": \"A Unix timestamp indicating when the recipient was added to the global suppression list.\"\n            },\n            \"email\": {\n                \"type\": \"string\",\n                \"description\": \"The email address of the recipient who is globally suppressed.\"\n            }\n        },\n        \"required\": [\n            \"created\",\n            \"email\"\n        ]\n    }\n}",
                "example": "[\n    {\n        \"created\": 1443651141,\n        \"email\": \"user1@example.com\"\n    },\n    {\n        \"created\": 1443651154,\n        \"email\": \"user2@example.com\"\n    }\n]"
              }
      queryParameters:
        start_time:
          type: integer
          description: Refers start of the time range in unix timestamp when an unsubscribe email was created (inclusive).
          displayName: Refers start of the time range in unix timestamp when an unsubscribe email was created (inclusive).
        end_time:
          type: integer
          description: Refers end of the time range in unix timestamp when an unsubscribe email was created (inclusive).
          displayName: Refers end of the time range in unix timestamp when an unsubscribe email was created (inclusive).
        limit:
          type: integer
          description: The number of results to display on each page.
          displayName: The number of results to display on each page.
        offset:
          type: integer
          description: The point in the list of results to begin displaying global suppressions.
          displayName: The point in the list of results to begin displaying global suppressions.
      securedBy:
        - null
  /bounces:
    displayName: bounces
    '/{email}':
      displayName: email
      uriParameters:
        email:
          type: string
      get:
        description: |-
          **This endpoint allows you to retrieve a specific bounce for a given email address.**

          A bounced email is when the message is undeliverable and then returned to the server that sent it.

          For more information see: 

          * [User Guide > Bounces](https://sendgrid.com/docs/User_Guide/Suppressions/bounces.html) for more information
          * [Glossary > Bounces](https://sendgrid.com/docs/Glossary/Bounces.html)
          * [Classroom > List Scrubbing Guide](https://sendgrid.com/docs/Classroom/Deliver/list_scrubbing.html)
        is:
          - onBehalfOfSubuser
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"created\": {\n                \"type\": \"integer\"\n            },\n            \"email\": {\n                \"type\": \"string\"\n            },\n            \"reason\": {\n                \"type\": \"string\"\n            },\n            \"status\": {\n                \"type\": \"string\"\n            }\n        }\n    }\n}",
                  "example": "[\n    {\n        \"created\": 1443651125,\n        \"email\": \"bounce1@test.com\",\n        \"reason\": \"550 5.1.1 The email account that you tried to reach does not exist. Please try double-checking the recipient's email address for typos or unnecessary spaces. Learn more at  https://support.google.com/mail/answer/6596 o186si2389584ioe.63 - gsmtp \",\n        \"status\": \"5.1.1\"\n    }\n]"
                }
        securedBy:
          - null
      delete:
        description: |-
          **This endpoint allows you to remove an email address from your bounce list.**

          A bounced email is when the message is undeliverable and then returned to the server that sent it. This endpoint allows you to delete a single email addresses from your bounce list. 

          For more information see: 

          * [User Guide > Bounces](https://sendgrid.com/docs/User_Guide/Suppressions/bounces.html) for more information
          * [Glossary > Bounces](https://sendgrid.com/docs/Glossary/Bounces.html)
          * [Classroom > List Scrubbing Guide](https://sendgrid.com/docs/Classroom/Deliver/list_scrubbing.html)
        is:
          - onBehalfOfSubuser
        responses:
          '204':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\"\n}"
                }
          '401':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                }
        queryParameters:
          email_address:
            type: string
            description: The email address you would like to remove from the bounce list.
            displayName: The email address you would like to remove from the bounce list.
        securedBy:
          - null
    delete:
      description: |-
        **This endpoint allows you to delete all of your bounces. You can also use this endpoint to remove a specific email address from your bounce list.**

        A bounced email is when the message is undeliverable and then returned to the server that sent it.

        For more information see: 

        * [User Guide > Bounces](https://sendgrid.com/docs/User_Guide/Suppressions/bounces.html) for more information
        * [Glossary > Bounces](https://sendgrid.com/docs/Glossary/Bounces.html)
        * [Classroom > List Scrubbing Guide](https://sendgrid.com/docs/Classroom/Deliver/list_scrubbing.html)

        Note: the `delete_all` and `emails` parameters should be used independently of each other as they have different purposes.
      is:
        - onBehalfOfSubuser
      responses:
        '204':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"null\"\n}"
              }
        '401':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
              }
      securedBy:
        - null
    get:
      description: |-
        **This endpoint allows you to retrieve all of your bounces.**

        A bounced email is when the message is undeliverable and then returned to the server that sent it.  

        For more information see: 

        * [User Guide > Bounces](https://sendgrid.com/docs/User_Guide/Suppressions/bounces.html) for more information
        * [Glossary > Bounces](https://sendgrid.com/docs/Glossary/Bounces.html)
      is:
        - onBehalfOfSubuser
      headers:
        Accept:
          type: string
          default: application/json
          required: true
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"created\": {\n                \"type\": \"number\"\n            },\n            \"email\": {\n                \"type\": \"string\"\n            },\n            \"reason\": {\n                \"type\": \"string\"\n            },\n            \"status\": {\n                \"type\": \"string\"\n            }\n        }\n    }\n}",
                "example": "[\n    {\n        \"created\": 1250337600,\n        \"email\": \"example@example.com\",\n        \"reason\": \"550 5.1.1 The email account that you tried to reach does not exist. Please try double-checking the recipient's email address for typos or unnecessary spaces. Learn more at  https://support.google.com/mail/answer/6596 o186si2389584ioe.63 - gsmtp \",\n        \"status\": \"5.1.1\"\n    },\n    {\n        \"created\": 1250337600,\n        \"email\": \"example@example.com\",\n        \"reason\": \"550 5.1.1 <testemail2@testing.com>: Recipient address rejected: User unknown in virtual alias table \",\n        \"status\": \"5.1.1\"\n    }\n]"
              }
        '401':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
              }
      queryParameters:
        start_time:
          type: integer
          description: Refers start of the time range in unix timestamp when a bounce was created (inclusive).
          displayName: Refers start of the time range in unix timestamp when a bounce was created (inclusive).
        end_time:
          type: integer
          description: Refers end of the time range in unix timestamp when a bounce was created (inclusive).
          displayName: Refers end of the time range in unix timestamp when a bounce was created (inclusive).
      securedBy:
        - null
/contactdb:
  displayName: contactdb
  /recipients:
    displayName: recipients
    delete:
      description: |-
        **This endpoint allows you to deletes one or more recipients.**

        The body of an API call to this endpoint must include an array of recipient IDs of the recipients you want to delete.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\"\n}"
              }
        '400':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"message\": \"No recipient ids provided\"\n        }\n    ]\n}"
              }
          description: |-
            "" : "Returned if no recipients are deleted"
            "" : "Returned if all of the provided recipient ids are invalid"
            "" : "Returned if request body is not valid json"
        '401':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
              }
      securedBy:
        - null
    /search:
      displayName: search
      get:
        description: |-
          **This endpoint allows you to perform a search on all of your Marketing Campaigns recipients.**

          field_name:

          * is a variable that is substituted for your actual custom field name from your recipient.
          * Text fields must be url-encoded. Date fields are searchable only by unix timestamp (e.g. 2/2/2015 becomes 1422835200)
          * If field_name is a 'reserved' date field, such as created_at or updated_at, the system will internally convert
          your epoch time to a date range encompassing the entire day. For example, an epoch time of 1422835600 converts to
          Mon, 02 Feb 2015 00:06:40 GMT, but internally the system will search from Mon, 02 Feb 2015 00:00:00 GMT through
          Mon, 02 Feb 2015 23:59:59 GMT.

          The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
        is:
          - onBehalfOfSubuser
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"recipients\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"contactdb_recipient\"\n            }\n        }\n    }\n}",
                  "example": "{\n    \"recipients\": [\n        {\n            \"created_at\": 1422313607,\n            \"email\": \"jones@example.com\",\n            \"first_name\": null,\n            \"id\": \"YUBh\",\n            \"last_clicked\": null,\n            \"last_emailed\": null,\n            \"last_name\": \"Jones\",\n            \"last_opened\": null,\n            \"updated_at\": 1422313790,\n            \"custom_fields\": [\n                {\n                    \"id\": 23,\n                    \"name\": \"pet\",\n                    \"value\": \"Fluffy\",\n                    \"type\": \"text\"\n                }\n            ]\n        }\n    ]\n}"
                }
          '400':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"message\": \"The following parameters are not custom fields or reserved fields: [{field_name}]\"\n        },\n        {\n            \"message\": \"No search params are specified\"\n        }\n    ]\n}"
                }
            description: |-
              "" : "Returned if no search params are specified"
              "field" : "Returned if the provided field is invalid or does not exist"
          '401':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                }
        queryParameters:
          '{field_name}':
            type: string
        securedBy:
          - null
    get:
      description: |-
        **This endpoint allows you to retrieve all of your Marketing Campaigns recipients.**

        Batch deletion of a page makes it possible to receive an empty page of recipients before reaching the end of
        the list of recipients. To avoid this issue; iterate over pages until a 404 is retrieved.

        The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"title\": \"List Recipients response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"recipients\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\"\n            }\n        }\n    },\n    \"required\": [\n        \"recipients\"\n    ]\n}"
              }
        '400':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\"\n}"
              }
          description: |-
            "page" : "Returned if page is not a valid integer"
            "page" : "Returned if page is less than 1"
            "page_size" : "Returned if page_size is not a valid integer"
            "page_size" : "Returned if page_size is less than 1 or greater than 1000"
        '401':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
              }
      queryParameters:
        page:
          type: integer
          description: Page index of first recipients to return (must be a positive integer)
          displayName: Page index of first recipients to return (must be a positive integer)
        page_size:
          type: integer
          description: Number of recipients to return at a time (must be a positive integer between 1 and 1000)
          displayName: Number of recipients to return at a time (must be a positive integer between 1 and 1000)
      securedBy:
        - null
    post:
      description: |-
        **This endpoint allows you to add a Marketing Campaigns recipient.**

        You can add custom field data as a parameter on this endpoint. We have provided an example using some of the default custom fields SendGrid provides.

        The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"email\": {\n                \"type\": \"string\",\n                \"description\": \"The email address of the recipient.\"\n            },\n            \"first_name\": {\n                \"type\": \"string\",\n                \"description\": \"The first name of the recipient.\"\n            },\n            \"last_name\": {\n                \"type\": \"string\",\n                \"description\": \"The last name of the recipient.\"\n            },\n            \"age\": {\n                \"type\": \"integer\"\n            }\n        },\n        \"required\": [\n            \"email\"\n        ]\n    }\n}",
            "example": "[\n    {\n        \"email\": \"example@example.com\",\n        \"first_name\": \"\",\n        \"last_name\": \"User\",\n        \"age\": 25\n    },\n    {\n        \"email\": \"example2@example.com\",\n        \"first_name\": \"Example\",\n        \"last_name\": \"User\",\n        \"age\": 25\n    }\n]"
          }
      responses:
        '201':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"contactdb_recipient_response\"\n}",
                "example": "{\n    \"error_count\": 1,\n    \"error_indices\": [\n        2\n    ],\n    \"new_count\": 2,\n    \"persisted_recipients\": [\n        \"YUBh\",\n        \"bWlsbGVyQG1pbGxlci50ZXN0\"\n    ],\n    \"updated_count\": 0,\n    \"errors\": [\n        {\n            \"message\": \"Invalid email.\",\n            \"error_indices\": [\n                2\n            ]\n        }\n    ]\n}"
              }
        '400':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"Request body is not valid json\"\n        }\n    ]\n}"
              }
          description: '"" : "Returned if request body is not valid json"'
        '401':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
              }
      securedBy:
        - null
    '/{recipient_id}':
      displayName: recipient_id
      uriParameters:
        recipient_id:
          type: string
          description: The ID of the recipient that you want to retrieve.
          displayName: The ID of the recipient that you want to retrieve.
      delete:
        description: |-
          **This endpoint allows you to delete a single recipient with the given ID from your contact database.**

          The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
        is:
          - onBehalfOfSubuser
        responses:
          '204':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\"\n}"
                }
          '400':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"recipient not found\"\n        }\n    ]\n}"
                }
            description: '"recipient_id" : "Returned if recipient_id is not valid"'
          '401':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                }
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"recipient_id is not valid\"\n        }\n    ]\n}"
                }
            description: '"recipient_id" : "Returned if record for recipient id does not exist"'
        securedBy:
          - null
      get:
        description: |-
          **This endpoint allows you to retrieve a single recipient by ID from your contact database.**

          The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
        is:
          - onBehalfOfSubuser
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"contactdb_recipient\"\n}"
                }
          '400':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\"\n}"
                }
            description: '"recipient_id" : "Returned if recipient_id is not valid"'
          '401':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                }
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\"\n}"
                }
            description: '"recipient_id" : "Returned if record for recipient id does not exist"'
        securedBy:
          - null
      /lists:
        displayName: lists
        get:
          description: |-
            **This endpoint allows you to retrieve the lists that a given recipient belongs to.**

            Each recipient can be on many lists. This endpoint gives you all of the lists that any one recipient has been added to.

            The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
          is:
            - onBehalfOfSubuser
          responses:
            '200':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"lists\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"contactdb_list\"\n            }\n        }\n    }\n}",
                    "example": "{\n    \"lists\": [\n        {\n            \"id\": 1234,\n            \"name\": \"Example list\",\n            \"recipient_count\": 42\n        }\n    ]\n}"
                  }
            '400':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                    "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"recipient ID is invalid\"\n        }\n    ]\n}"
                  }
              description: '"recipient_id" : "Returned if recipient_id is not valid"'
            '401':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                    "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                  }
            '404':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                    "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"recipient id not found\"\n        }\n    ]\n}"
                  }
              description: '"recipient_id" : "Returned if record for the recipient id does not exist"'
          securedBy:
            - null
    /count:
      displayName: count
      get:
        description: |-
          **This endpoint allows you to retrieve the total number of Marketing Campaigns recipients.**

          The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
        is:
          - onBehalfOfSubuser
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"contactdb_recipient_count\"\n}",
                  "example": "{\n    \"recipient_count\": 1234\n}"
                }
          '401':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                }
        securedBy:
          - null
    /billable_count:
      displayName: billable_count
      get:
        description: |-
          **This endpoint allows you to retrieve the number of Marketing Campaigns recipients that you will be billed for.**

          You are billed for marketing campaigns based on the highest number of recipients you have had in your account at one time. This endpoint will allow you to know the current billable count value.

          The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
        is:
          - onBehalfOfSubuser
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"contactdb_recipient_count\"\n}",
                  "example": "{\n    \"recipient_count\": 1234\n}"
                }
          '401':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                }
        securedBy:
          - null
    patch:
      description: |-
        **This endpoint allows you to update one or more recipients.**

        The body of an API call to this endpoint must include an array of one or more recipient objects.

        It is of note that you can add custom field data as parameters on recipient objects. We have provided an example using some of the default custom fields SendGrid provides.

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"email\": {\n                \"type\": \"string\"\n            },\n            \"last_name\": {\n                \"type\": \"string\",\n                \"description\": \"The last name of the recipient. This is one of the default custom fields.\"\n            },\n            \"first_name\": {\n                \"type\": \"string\",\n                \"description\": \"The first name of the recipient. This is one of the default custom fields.\"\n            }\n        },\n        \"required\": [\n            \"email\"\n        ]\n    }\n}",
            "example": "[\n    {\n        \"email\": \"jones@example.com\",\n        \"last_name\": \"Jones\",\n        \"first_name\": \"Guy\"\n    }\n]"
          }
      responses:
        '201':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"contactdb_recipient_response\"\n}"
              }
        '400':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"Request body is not valid json\"\n        }\n    ]\n}"
              }
          description: '"" : "Returned if request body is not valid json"'
        '401':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
              }
      securedBy:
        - null
  /custom_fields:
    displayName: custom_fields
    post:
      description: |-
        **This endpoint allows you to create a custom field.**

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"type\": {\n            \"type\": \"string\"\n        }\n    }\n}",
            "example": "{\n    \"name\": \"pet\",\n    \"type\": \"text\"\n}"
          }
      responses:
        '201':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\"\n        },\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"type\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                "example": "{\n    \"id\": 1,\n    \"name\": \"pet\",\n    \"type\": \"text\"\n}"
              }
        '400':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"errors\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"Returned if request body is invalid JSON\"\n        },\n        {\n            \"field\": \"type\",\n            \"message\": \"Returned if custom field type is invalid or not provided\"\n        },\n        {\n            \"field\": \"name\",\n            \"message\": \"Returned if custom field name is not provided\"\n        }\n    ]\n}"
              }
          description: |-
            "" : "Returned if request body is invalid JSON"
            "type" : "Returned if custom field type is invalid or not provided"
            "name" : "Returned if custom field name is not provided"
      securedBy:
        - null
    '/{custom_field_id}':
      displayName: custom_field_id
      uriParameters:
        custom_field_id:
          type: string
      get:
        description: |-
          **This endpoint allows you to retrieve a custom field by ID.**

          The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
        is:
          - onBehalfOfSubuser
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"contactdb_custom_field_with_id\"\n}",
                  "example": "{\n    \"id\": 1,\n    \"name\": \"pet\",\n    \"type\": \"text\"\n}"
                }
          '400':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"message\": \"invalid id\"\n        }\n    ]\n}"
                }
          '401':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                }
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"message\": \"Custom field ID does not exist\"\n        }\n    ]\n}"
                }
            description: '"custom_field_id" : "Returned if custom_field_id does not exist"'
        securedBy:
          - null
      delete:
        description: |-
          **This endpoint allows you to delete a custom field by ID.**

          The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
        is:
          - onBehalfOfSubuser
        responses:
          '202':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"message\": \"Custom Field delete is processing.\"\n}"
                }
          '400':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"message\": \"Custom field in use by one or more segment conditions\"\n        },\n        {\n            \"message\": \"Custom field ID does not exist\"\n        }\n    ]\n}"
                }
            description: '"id" : "Returned if custom_field_id is not valid"'
          '401':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                }
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"message\": \"Custom field ID does not exist\"\n        }\n    ]\n}"
                }
            description: '"custom_field_id" : "Returned if custom_field_id does not exist"'
        securedBy:
          - null
    get:
      description: |-
        **This endpoint allows you to retrieve all custom fields.** 

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"title\": \"List All Custom Fields response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"custom_fields\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"contactdb_custom_field_with_id\"\n            }\n        }\n    },\n    \"required\": [\n        \"custom_fields\"\n    ]\n}",
                "example": "{\n    \"custom_fields\": [\n        {\n            \"id\": 6234,\n            \"name\": \"age\",\n            \"type\": \"number\"\n        },\n        {\n            \"id\": 6233,\n            \"name\": \"country\",\n            \"type\": \"text\"\n        },\n        {\n            \"id\": 6235,\n            \"name\": \"favorite_color\",\n            \"type\": \"text\"\n        },\n        {\n            \"id\": 6239,\n            \"name\": \"fname\",\n            \"type\": \"text\"\n        },\n        {\n            \"id\": 6240,\n            \"name\": \"lname\",\n            \"type\": \"text\"\n        },\n        {\n            \"id\": 49439,\n            \"name\": \"pet\",\n            \"type\": \"text\"\n        }\n    ]\n}"
              }
        '401':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
              }
      securedBy:
        - null
  /lists:
    displayName: lists
    '/{list_id}':
      displayName: list_id
      uriParameters:
        list_id:
          type: string
      delete:
        description: |-
          **This endpoint allows you to delete a specific recipient list with the given ID.**

          The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
        is:
          - onBehalfOfSubuser
        responses:
          '202':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"null\"\n}"
                }
          '400':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": \"delete_contacts\",\n            \"message\": \"delete_contacts not a bool\"\n        },\n        {\n            \"field\": \"list_id\",\n            \"message\": \"Returned if list_id is not valid\"\n        }\n    ]\n}"
                }
            description: |-
              "list_id" : "Returned if list_id is not valid"
              "delete_contacts" : "Returned if delete_contacts is not valid"
          '401':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                }
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"message\": \"List not found: 5\"\n        }\n    ]\n}"
                }
            description: '"list_id" : "Returned if list_id does not exist"'
        queryParameters:
          delete_contacts:
            type: boolean
            description: Adds the ability to delete all contacts on the list in addition to deleting the list.
            displayName: Adds the ability to delete all contacts on the list in addition to deleting the list.
        securedBy:
          - null
      /recipients:
        displayName: recipients
        get:
          description: |-
            **This endpoint allows you to retrieve all recipients on the list with the given ID.** 

            The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
          is:
            - onBehalfOfSubuser
          responses:
            '200':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"recipients\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"contactdb_recipient\"\n            }\n        }\n    }\n}",
                    "example": "{\n    \"recipients\": [\n        {\n            \"created_at\": 1433348344,\n            \"custom_fields\": [\n                {\n                    \"id\": 6234,\n                    \"name\": \"age\",\n                    \"type\": \"number\",\n                    \"value\": null\n                },\n                {\n                    \"id\": 6233,\n                    \"name\": \"country\",\n                    \"type\": \"text\",\n                    \"value\": null\n                },\n                {\n                    \"id\": 6235,\n                    \"name\": \"fname\",\n                    \"type\": \"text\",\n                    \"value\": \"Example\"\n                },\n                {\n                    \"id\": 6239,\n                    \"name\": \"lname\",\n                    \"type\": \"text\",\n                    \"value\": \"User\"\n                },\n                {\n                    \"id\": 6240,\n                    \"name\": \"lname\",\n                    \"type\": \"text\",\n                    \"value\": null\n                }\n            ],\n            \"email\": \"example@example.com\",\n            \"first_name\": \"Example\",\n            \"id\": \"ZGVWfyZWsuYmFpbmVzQHNlbmRmCmLkLmNv==\",\n            \"last_clicked\": 1438616117,\n            \"last_emailed\": 1438613272,\n            \"last_name\": \"User\",\n            \"last_opened\": 1438616109,\n            \"updated_at\": 1438616119\n        }\n    ]\n}"
                  }
            '400':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                    "example": "{\n    \"errors\": [\n        {\n            \"field\": \"list_id\",\n            \"message\": \"Returned if list_id is not a valid integer\"\n        },\n        {\n            \"field\": \"page\",\n            \"message\": \"Returned if page is not a valid integer\"\n        },\n        {\n            \"field\": \"page\",\n            \"message\": \"Returned if page is less than 1\"\n        },\n        {\n            \"field\": \"page_size\",\n            \"message\": \"Returned if page_size is not a valid integer\"\n        },\n        {\n            \"field\": \"page_size\",\n            \"message\": \"Returned if page_size is less than 1 or greater than 1000\"\n        }\n    ]\n}"
                  }
              description: |-
                "list_id" : "Returned if list_id is not a valid integer"
                "page" : "Returned if page is not a valid integer"
                "page" : "Returned if page is less than 1"
                "page_size" : "Returned if page_size is not a valid integer"
                "page_size" : "Returned if page_size is less than 1 or greater than 1000"
            '404':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"object\"\n}",
                    "example": "{\n    \"errors\": [\n        {\n            \"field\": \"list_id\",\n            \"message\": \"Returned if list_id is invalid\"\n        }\n    ]\n}"
                  }
              description: '"list_id" : "Returned if list_id does not exist"'
          queryParameters:
            page:
              type: integer
              description: Page index of first recipient to return (must be a positive integer)
              displayName: Page index of first recipient to return (must be a positive integer)
            page_size:
              type: integer
              description: Number of recipients to return at a time (must be a positive integer between 1 and 1000)
              displayName: Number of recipients to return at a time (must be a positive integer between 1 and 1000)
            list_id:
              type: integer
              description: The ID of the list whose recipients you are requesting.
              displayName: The ID of the list whose recipients you are requesting.
          securedBy:
            - null
        post:
          description: |-
            **This endpoint allows you to add multiple recipients to a list.**

            Adds existing recipients to a list, passing in the recipient IDs to add. Recipient IDs should be passed exactly as they are returned from recipient endpoints.

            The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
          is:
            - onBehalfOfSubuser
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"string\"\n    }\n}",
                "example": "[\n    \"recipient_id1\",\n    \"recipient_id2\"\n]"
              }
          responses:
            '201':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"null\"\n}"
                  }
            '400':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                    "example": "{\n    \"errors\": [\n        {\n            \"field\": \"list_id\",\n            \"message\": \"list_id is invalid\"\n        },\n        {\n            \"field\": \"recipient_id\",\n            \"message\": \"no valid recipients were provided\"\n        },\n        {\n            \"field\": null,\n            \"message\": \"no recipients were added\"\n        },\n        {\n            \"field\": null,\n            \"message\": \"request body is invalid JSON\"\n        }\n    ]\n}"
                  }
              description: |-
                "list_id" : "Returned if list_id is not a valid integer"
                "" : "Returned if no valid recipient ids were passed"
                "" : "Returned if no recipients were added"
                "" : "Returned if request body is invalid JSON"
            '401':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                    "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                  }
            '404':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                    "example": "{\n    \"errors\": [\n        {\n            \"field\": \"list_id\",\n            \"message\": \"list_id does not exist\"\n        },\n        {\n            \"field\": \"recipient_id\",\n            \"message\": \"recipient_id does not exist\"\n        }\n    ]\n}"
                  }
              description: '"list_id": "Returned if list_id does not exist"'
          securedBy:
            - null
        '/{recipient_id}':
          displayName: recipient_id
          uriParameters:
            recipient_id:
              type: string
              description: The ID of the recipient you are adding to the list.
              displayName: The ID of the recipient you are adding to the list.
          delete:
            description: |-
              **This endpoint allows you to delete a single recipient from a list.**

              The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
            is:
              - onBehalfOfSubuser
            responses:
              '204':
                body:
                  application/json: |-
                    {
                      "schema": "{\n    \"type\": \"null\"\n}"
                    }
              '400':
                body:
                  application/json: |-
                    {
                      "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                      "example": "{\n    \"errors\": [\n        {\n            \"field\": \"list_id\",\n            \"message\": \"Returned if list_id is invalid\"\n        },\n        {\n            \"field\": \"recipient_id\",\n            \"message\": \"no valid recipients were provided\"\n        }\n    ]\n}"
                    }
                description: |-
                  "list_id" : "Returned if list_id is not valid"
                  "recipient_id" : "Returned if recipient_id is not valid"
              '401':
                body:
                  application/json: |-
                    {
                      "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                      "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                    }
              '404':
                body:
                  application/json: |-
                    {
                      "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                      "example": "{\n    \"errors\": [\n        {\n            \"field\": \"list_id\",\n            \"message\": \"Returned if list_id does not exist\"\n        },\n        {\n            \"field\": \"recipient_id\",\n            \"message\": \"Returned if recipient_id does not exist\"\n        }\n    ]\n}"
                    }
                description: |-
                  "list_id" : "Returned if list_id does not exist"
                  "recipient_id" : "Returned if recipient_id does not exist"
            queryParameters:
              list_id:
                type: integer
                description: The ID of the list you are taking this recipient away from.
                displayName: The ID of the list you are taking this recipient away from.
              recipient_id:
                type: integer
                description: The ID of the recipient to take off the list.
                displayName: The ID of the recipient to take off the list.
            securedBy:
              - null
          post:
            description: |-
              **This endpoint allows you to add a single recipient to a list.**

              The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
            is:
              - onBehalfOfSubuser
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"null\"\n}"
                }
            responses:
              '201':
                body:
                  application/json: |-
                    {
                      "schema": "{\n    \"type\": \"null\"\n}"
                    }
              '400':
                body:
                  application/json: |-
                    {
                      "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                      "example": "{\n    \"errors\": [\n        {\n            \"field\": \"list_id\",\n            \"message\": \"Returned if list_id is invalid\"\n        },\n        {\n            \"field\": \"recipient_id\",\n            \"message\": \"Returned if recipient_id is invalid\"\n        }\n    ]\n}"
                    }
                description: |-
                  "list_id" : "Returned if list_id is invalid"
                  "recipient_id" : "Returned if recipient_id is invalid"
              '401':
                body:
                  application/json: |-
                    {
                      "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                      "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                    }
              '404':
                body:
                  application/json: |-
                    {
                      "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                      "example": "{\n    \"errors\": [\n        {\n            \"field\": \"list_id\",\n            \"message\": \"Returned if list_id does not exist\"\n        },\n        {\n            \"field\": \"recipient_id\",\n            \"message\": \"Returned if recipient_id does not exist\"\n        }\n    ]\n}"
                    }
                description: |-
                  "list_id" : "Returned if list_id does not exist"
                  "recipient_id" : "Returned if recipient_id does not exist"
            securedBy:
              - null
      get:
        description: |-
          This endpoint allows you to retrieve a single recipient list.

          The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
        is:
          - onBehalfOfSubuser
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"contactdb_list\"\n}",
                  "example": "{\n    \"id\": 1,\n    \"name\": \"listname\",\n    \"recipient_count\": 0\n}"
                }
          '400':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"message\": \"invalid id\"\n        }\n    ]\n}"
                }
            description: '"list_id" : "Returned if list_id is not valid"'
          '401':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                }
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"List ID does not exist\"\n        }\n    ]\n}"
                }
            description: '"list_id" : "Returned if list_id does not exist"'
        queryParameters:
          list_id:
            type: integer
            description: The ID of the list to retrieve.
            displayName: The ID of the list to retrieve.
        securedBy:
          - null
      patch:
        description: |-
          **This endpoint allows you to update the name of one of your recipient lists.**


          The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
        is:
          - onBehalfOfSubuser
        body:
          application/json: |-
            {
              "schema": "{\n    \"title\": \"Update a List request\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The new name for your list. \"\n        }\n    },\n    \"required\": [\n        \"name\"\n    ]\n}",
              "example": "{\n    \"name\": \"newlistname\"\n}"
            }
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"The ID of the list\"\n        },\n        \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The new name for the list\"\n        },\n        \"recipient_count\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of recipients on the list\"\n        }\n    }\n}",
                  "example": "{\n    \"id\": 1234,\n    \"name\": \"2016 iPhone Users\",\n    \"recipient_count\": 0\n}"
                }
          '400':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"message\": \"invalid id\"\n        }\n    ]\n}"
                }
            description: |-
              "name" : "Returned if list name is a duplicate of existing list or segment"
              "name" : "Returned if list name is invalid or not provided"
              "list_id" : "Returned if list_id is not valid"
              "" : "Returned if request body is invalid JSON"
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"message\": \"List ID does not exist\"\n        }\n    ]\n}"
                }
            description: '"list_id" : "Returned if list_id does not exist"'
        queryParameters:
          list_id:
            type: integer
            description: The ID of the list you are updating.
            displayName: The ID of the list you are updating.
        securedBy:
          - null
    get:
      description: |-
        **This endpoint allows you to retrieve all of your recipient lists. If you don't have any lists, an empty array will be returned.**

        The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"title\": \"List All Lists response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"lists\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"contactdb_list\"\n            }\n        }\n    },\n    \"required\": [\n        \"lists\"\n    ]\n}",
                "example": "{\n    \"lists\": [\n        {\n            \"id\": 1,\n            \"name\": \"the jones\",\n            \"recipient_count\": 1\n        }\n    ]\n}"
              }
      securedBy:
        - null
    post:
      description: |-
        **This endpoint allows you to create a list for your recipients.**

        The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"title\": \"Create a List request\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"name\"\n    ]\n}",
            "example": "{\n    \"name\": \"your list name\"\n}"
          }
      responses:
        '201':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"contactdb_list\"\n}",
                "example": "{\n    \"id\": 1,\n    \"name\": \"your list name\",\n    \"recipient_count\": 0\n}"
              }
        '400':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"Returned if request body is invalid JSON\"\n        },\n        {\n            \"field\": \"name\",\n            \"message\": \"Returned if list name is not a string\"\n        },\n        {\n            \"field\": \"name\",\n            \"message\": \"Returned if list name is a duplicate of an existing list or segment\"\n        }\n    ]\n}"
              }
          description: |-
            "name" : "Returned if list name is a duplicate of an existing list or segment"
            "name" : "Returned if list name is not a string"
            "" : "Returned if request body is invalid JSON"
        '401':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
              }
      securedBy:
        - null
    delete:
      description: |-
        **This endpoint allows you to delete multiple recipient lists.**

        The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
      is:
        - onBehalfOfSubuser
      responses:
        '204':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"null\"\n}"
              }
        '400':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"list id was invalid\"\n        }\n    ]\n}"
              }
          description: '"id" : "Returned if all list ids are not valid"'
        '401':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
              }
      securedBy:
        - null
  /segments:
    displayName: segments
    '/{segment_id}':
      displayName: segment_id
      /recipients:
        displayName: recipients
        get:
          description: |-
            **This endpoint allows you to retrieve all of the recipients in a segment with the given ID.**

            The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.

            For more information about segments in Marketing Campaigns, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/lists.html#-Create-a-Segment).
          is:
            - onBehalfOfSubuser
          responses:
            '200':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"title\": \"List Recipients On a Segment response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"recipients\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"contactdb_recipient\"\n            }\n        }\n    },\n    \"required\": [\n        \"recipients\"\n    ]\n}",
                    "example": "{\n    \"recipients\": [\n        {\n            \"created_at\": 1422313607,\n            \"email\": \"jones@example.com\",\n            \"first_name\": null,\n            \"id\": \"YUBh\",\n            \"last_clicked\": null,\n            \"last_emailed\": null,\n            \"last_name\": \"Jones\",\n            \"last_opened\": null,\n            \"updated_at\": 1422313790,\n            \"custom_fields\": [\n                {\n                    \"id\": 23,\n                    \"name\": \"pet\",\n                    \"value\": \"Indiana\",\n                    \"type\": \"text\"\n                }\n            ]\n        }\n    ]\n}"
                  }
            '400':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"object\"\n}"
                  }
              description: |-
                "page" : "Returned if page is not a valid integer"
                "page" : "Returned if page is less than 1"
                "page_size" : "Returned if page_size is not a valid integer"
            '401':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                    "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                  }
            '404':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"object\"\n}"
                  }
              description: |-
                "segment_id" : "Returned if segment_id is not valid"
                "segment_id" : "Returned if segment_id does not exist"
          queryParameters:
            page:
              type: integer
            page_size:
              type: integer
          securedBy:
            - null
      uriParameters:
        segment_id:
          type: string
          description: The ID of the segment that you want to delete.
          displayName: The ID of the segment that you want to delete.
      patch:
        description: |-
          **This endpoint allows you to update a segment.**

          The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.

          For more information about segments in Marketing Campaigns, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/lists.html#-Create-a-Segment).
        is:
          - onBehalfOfSubuser
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"list_id\": {\n            \"type\": \"number\",\n            \"description\": \"The list ID you would like this segment to be built from.\"\n        },\n        \"conditions\": {\n            \"type\": \"array\",\n            \"description\": \"The conditions by which this segment should be created.\",\n            \"items\": {\n                \"type\": \"contactdb_segments_conditions\"\n            }\n        }\n    },\n    \"required\": [\n        \"name\"\n    ]\n}",
              "example": "{\n    \"name\": \"The Millers\",\n    \"list_id\": 5,\n    \"conditions\": [\n        {\n            \"field\": \"last_name\",\n            \"value\": \"Miller\",\n            \"operator\": \"eq\",\n            \"and_or\": \"\"\n        }\n    ]\n}"
            }
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"contactdb_segments\"\n}",
                  "example": "{\n    \"id\": 5,\n    \"name\": \"The Millers\",\n    \"list_id\": 5,\n    \"conditions\": [\n        {\n            \"field\": \"last_name\",\n            \"value\": \"Miller\",\n            \"operator\": \"eq\",\n            \"and_or\": \"\"\n        }\n    ],\n    \"recipient_count\": 1\n}"
                }
          '400':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"message\": \"request body is not valid json\"\n        },\n        {\n            \"message\": \"invalid value is passed into one of the request body parameters\"\n        },\n        {\n            \"segment_id\": \"segment_id\",\n            \"message\": \"segment id is not valid\"\n        },\n        {\n            \"field\": \"field\",\n            \"message\": \"field and set value is not passed into the request body\"\n        },\n        {\n            \"field\": \"value\",\n            \"message\": \"value and set value is not passed into the request body\"\n        },\n        {\n            \"field\": \"operator\",\n            \"message\": \"operator and set value is not passed into the request body\"\n        },\n        {\n            \"field\": \"and_or\",\n            \"message\": \"and_or is not set on more than one condition and less than all conditions\"\n        },\n        {\n            \"field\": \"and_or\",\n            \"message\": \"and_or is set on all conditions\"\n        },\n        {\n            \"field\": \"and_or\",\n            \"message\": \"and_or is set on the only condition passed\"\n        },\n        {\n            \"field\": \"and_or\",\n            \"message\": \"and_or and set value is not passed into the request body\"\n        },\n        {\n            \"field\": \"list_id\",\n            \"message\": \"the list_id is not valid\"\n        },\n        {\n            \"field\": \"name\",\n            \"message\": \"the name is not valid\"\n        }\n    ]\n}"
                }
          '401':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                }
        queryParameters:
          segment_id:
            type: string
            description: The ID of the segment you are updating.
            displayName: The ID of the segment you are updating.
        securedBy:
          - null
      get:
        description: |-
          **This endpoint allows you to retrieve a single segment with the given ID.**

          The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.

          For more information about segments in Marketing Campaigns, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/lists.html#-Create-a-Segment).
        is:
          - onBehalfOfSubuser
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"contactdb_segments\"\n}",
                  "example": "{\n    \"id\": 1,\n    \"name\": \"Last Name Miller\",\n    \"list_id\": 4,\n    \"conditions\": [\n        {\n            \"field\": \"last_name\",\n            \"value\": \"Miller\",\n            \"operator\": \"eq\",\n            \"and_or\": \"\"\n        }\n    ],\n    \"recipient_count\": 1\n}"
                }
          '400':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"message\": \"if segment_id is not valid\"\n        }\n    ]\n}"
                }
            description: '"segment_id" : "Returned if segment_id is not valid"'
          '401':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                }
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"message\": \"segment_id not found\"\n        }\n    ]\n}"
                }
            description: '"segment_id" : "Returned if segment_id does not exist"'
        queryParameters:
          segment_id:
            type: integer
            description: The ID of the segment you want to request.
            displayName: The ID of the segment you want to request.
        securedBy:
          - null
      delete:
        description: |-
          **This endpoint allows you to delete a segment from your recipients database.**

          You also have the option to delete all the contacts from your Marketing Campaigns recipient database who were in this segment.

          The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.

          For more information about segments in Marketing Campaigns, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/lists.html#-Create-a-Segment).
        is:
          - onBehalfOfSubuser
        responses:
          '204':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"null\"\n}"
                }
          '400':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": \"segment_id\",\n            \"message\": \"Returned if segment_id is not valid\"\n        },\n        {\n            \"field\": \"delete_contacts\",\n            \"message\": \"Returned if delete_contacts is not a valid boolean\"\n        }\n    ]\n}"
                }
            description: |-
              "segment_id" : "Returned if segment_id is not valid"
              "delete_contacts" : "Returned if delete_contacts is not a valid boolean"
          '401':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                }
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": \"segment_id\",\n            \"message\": \"segment_id does not exist\"\n        }\n    ]\n}"
                }
            description: '"segment_id" : "Returned if segment_id does not exist"'
        queryParameters:
          delete_contacts:
            type: boolean
            description: True to delete all contacts matching the segment in addition to deleting the segment
            displayName: True to delete all contacts matching the segment in addition to deleting the segment
        securedBy:
          - null
    get:
      description: |-
        **This endpoint allows you to retrieve all of your segments.**

        The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.

        For more information about segments in Marketing Campaigns, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/lists.html#-Create-a-Segment).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"title\": \"List All Segments response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"segments\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"contactdb_segments\"\n            }\n        }\n    },\n    \"required\": [\n        \"segments\"\n    ]\n}",
                "example": "{\n    \"segments\": [\n        {\n            \"id\": 1234,\n            \"name\": \"Age segments < 25\",\n            \"conditions\": [\n                {\n                    \"field\": \"age\",\n                    \"value\": \"25\",\n                    \"operator\": \"lt\"\n                }\n            ],\n            \"recipient_count\": 8\n        },\n        {\n            \"id\": 2345,\n            \"name\": \"email address - gmail\",\n            \"conditions\": [\n                {\n                    \"field\": \"email\",\n                    \"value\": \"@gmail.com\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"recipient_count\": 0\n        }\n    ]\n}"
              }
        '401':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
              }
      securedBy:
        - null
    post:
      description: |-
        **This endpoint allows you to create a segment.**

        All recipients in your contactdb will be added or removed automatically depending on whether they match the criteria for this segment.

        List Id:

        * Send this to segment from an existing list
        * Don't send this in order to segment from your entire contactdb.

        Valid operators for create and update depend on the type of the field you are segmenting: 

        * **Dates:** "eq", "ne", "lt" (before), "gt" (after) 
        * **Text:** "contains", "eq" (is - matches the full field), "ne" (is not - matches any field where the entire field is not the condition value) 
        * **Numbers:** "eq", "lt", "gt" 
        * **Email Clicks and Opens:** "eq" (opened), "ne" (not opened) 

        Segment conditions using "eq" or "ne" for email clicks and opens should provide a "field" of either *clicks.campaign_identifier* or *opens.campaign_identifier*. The condition value should be a string containing the id of a completed campaign. 

        Segments may contain multiple condtions, joined by an "and" or "or" in the "and_or" field. The first condition in the conditions list must have an empty "and_or", and subsequent conditions must all specify an "and_or".

        The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.

        For more information about segments in Marketing Campaigns, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/lists.html#-Create-a-Segment).
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"contactdb_segments\"\n}",
            "example": "{\n    \"name\": \"Last Name Miller\",\n    \"list_id\": 4,\n    \"conditions\": [\n        {\n            \"field\": \"last_name\",\n            \"value\": \"Miller\",\n            \"operator\": \"eq\",\n            \"and_or\": \"\"\n        },\n        {\n            \"field\": \"last_clicked\",\n            \"value\": \"01/02/2015\",\n            \"operator\": \"gt\",\n            \"and_or\": \"and\"\n        },\n        {\n            \"field\": \"clicks.campaign_identifier\",\n            \"value\": \"513\",\n            \"operator\": \"eq\",\n            \"and_or\": \"or\"\n        }\n    ]\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"contactdb_segments_with_id\"\n}",
                "example": "{\n    \"id\": 1,\n    \"name\": \"Last Name Miller\",\n    \"list_id\": 4,\n    \"conditions\": [\n        {\n            \"field\": \"last_name\",\n            \"value\": \"Miller\",\n            \"operator\": \"eq\",\n            \"and_or\": \"\"\n        },\n        {\n            \"field\": \"last_clicked\",\n            \"value\": \"01/02/2015\",\n            \"operator\": \"gt\",\n            \"and_or\": \"and\"\n        },\n        {\n            \"field\": \"clicks.campaign_identifier\",\n            \"value\": \"513\",\n            \"operator\": \"eq\",\n            \"and_or\": \"or\"\n        }\n    ],\n    \"recipient_count\": 0\n}"
              }
        '400':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"message\": \"request body is not valid json\"\n        },\n        {\n            \"message\": \"invalid value is passed into one of the request body parameters\"\n        },\n        {\n            \"field\": \"field\",\n            \"message\": \"field and set value is not passed into the request body\"\n        },\n        {\n            \"field\": \"value\",\n            \"message\": \"value and set value is not passed into the request body\"\n        },\n        {\n            \"field\": \"operator\",\n            \"message\": \"operator and set value is not passed into the request body\"\n        },\n        {\n            \"field\": \"and_or\",\n            \"message\": \"and_or is not set on more than one condition and less than all conditions\"\n        },\n        {\n            \"field\": \"and_or\",\n            \"message\": \"and_or is set on all conditions\"\n        },\n        {\n            \"field\": \"and_or\",\n            \"message\": \"and_or is set on the only condition passed\"\n        },\n        {\n            \"field\": \"and_or\",\n            \"message\": \"and_or and set value is not passed into the request body\"\n        },\n        {\n            \"field\": \"list_id\",\n            \"message\": \"the list_id is not valid\"\n        },\n        {\n            \"field\": \"name\",\n            \"message\": \"the name is not valid\"\n        }\n    ]\n}"
              }
          description: |-
            "name" : "Returned if the name is not valid"
            "list_id" : "Returned if the list_id is not valid"
            "and_or" : "Returned if and_or and set value is not passed into the request body"
            "and_or" : "Returned if and_or is set on the only condition passed"
            "and_or" : "Returned if and_or is set on all conditions"
            "and_or" : "Returned if and_or is not set on more than one condition and less than all conditions"
            "operator" : "Returned if operator and set value is not passed into the request body"
            "value" : "Returned if value and set value is not passed into the request body"
            "field" : "Returned if field and set value is not passed into the request body"
            "" : "Returned if request body is not valid json"
            "" : "Returned if invalid value is passed into one of the request body parameters"
        '401':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
              }
      securedBy:
        - null
  /status:
    displayName: status
    get:
      is:
        - authorizationHeader
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
                "example": "{\n    \"status\": [\n        {\n            \"id\": \"worker_delay\",\n            \"value\": \"delayed\"\n        },\n        {\n            \"id\": \"worker_delay_seconds\",\n            \"value\": \"75.0\"\n        }\n    ]\n}"
              }
  /reserved_fields:
    displayName: reserved_fields
    get:
      description: |-
        **This endpoint allows you to list all fields that are reserved and can't be used for custom field names.**

        The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"title\": \"List fields that are reserved and can't be used for custom field names. response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"reserved_fields\": {\n            \"type\": \"array\",\n            \"description\": \"The reserved fields that are already set up within custom fields.\",\n            \"items\": {\n                \"type\": \"contactdb_custom_field\"\n            }\n        }\n    },\n    \"required\": [\n        \"reserved_fields\"\n    ]\n}",
                "example": "{\n    \"reserved_fields\": [\n        {\n            \"name\": \"first_name\",\n            \"type\": \"text\"\n        },\n        {\n            \"name\": \"last_name\",\n            \"type\": \"text\"\n        },\n        {\n            \"name\": \"email\",\n            \"type\": \"text\"\n        },\n        {\n            \"name\": \"created_at\",\n            \"type\": \"date\"\n        },\n        {\n            \"name\": \"updated_at\",\n            \"type\": \"date\"\n        },\n        {\n            \"name\": \"last_emailed\",\n            \"type\": \"date\"\n        },\n        {\n            \"name\": \"last_clicked\",\n            \"type\": \"date\"\n        },\n        {\n            \"name\": \"last_opened\",\n            \"type\": \"date\"\n        },\n        {\n            \"name\": \"my_custom_field\",\n            \"type\": \"text\"\n        }\n    ]\n}"
              }
        '401':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
              }
      securedBy:
        - null
/alerts:
  displayName: alerts
  '/{alert_id}':
    displayName: alert_id
    uriParameters:
      alert_id:
        type: integer
        description: The ID of the alert you would like to update.
        displayName: The ID of the alert you would like to update.
    delete:
      description: |-
        **This endpoint allows you to delete an alert.**

        Alerts allow you to specify an email address to receive notifications regarding your email usage or statistics. 
        * Usage alerts allow you to set the threshold at which an alert will be sent.
        * Stats notifications allow you to set how frequently you would like to receive email statistics reports. For example, "daily", "weekly", or "monthly".

        For more information about alerts, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/alerts.html).
      is:
        - onBehalfOfSubuser
      responses:
        '204':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {}\n}"
              }
      securedBy:
        - null
    get:
      description: |-
        **This endpoint allows you to retrieve a specific alert.**

        Alerts allow you to specify an email address to receive notifications regarding your email usage or statistics. 
        * Usage alerts allow you to set the threshold at which an alert will be sent.
        * Stats notifications allow you to set how frequently you would like to receive email statistics reports. For example, "daily", "weekly", or "monthly".

        For more information about alerts, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/alerts.html).
      is:
        - onBehalfOfSubuser
      headers:
        Authorization:
          type: string
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"created_at\": {\n            \"type\": \"integer\",\n            \"description\": \"A Unix timestamp indicating when the alert was created.\"\n        },\n        \"email_to\": {\n            \"type\": \"string\",\n            \"description\": \"The email address that the alert will be sent to.\"\n        },\n        \"frequency\": {\n            \"type\": \"string\",\n            \"description\": \"If the alert is of type stats_notification, this indicates how frequently the stats notifications will be sent. For example: \\\"daily\\\", \\\"weekly\\\", or \\\"monthly\\\".\"\n        },\n        \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"The ID of the alert.\"\n        },\n        \"type\": {\n            \"type\": \"string\",\n            \"description\": \"The type of alert.\",\n            \"enum\": [\n                \"usage_alert\",\n                \"stats_notification\"\n            ]\n        },\n        \"updated_at\": {\n            \"type\": \"integer\",\n            \"description\": \"A Unix timestamp indicating when the alert was last modified.\"\n        },\n        \"percentage\": {\n            \"type\": \"integer\",\n            \"description\": \"If the alert is of type usage_limit, this indicates the percentage of email usage that must be reached before the alert will be sent.\"\n        }\n    },\n    \"required\": [\n        \"created_at\",\n        \"email_to\",\n        \"id\",\n        \"type\",\n        \"updated_at\"\n    ]\n}",
                "example": "{\n    \"created_at\": 1451520930,\n    \"email_to\": \"example@example.com\",\n    \"frequency\": \"daily\",\n    \"id\": 48,\n    \"type\": \"stats_notification\",\n    \"updated_at\": 1451520930\n}"
              }
      securedBy:
        - null
    patch:
      description: |-
        **This endpoint allows you to update an alert.**

        Alerts allow you to specify an email address to receive notifications regarding your email usage or statistics. 
        * Usage alerts allow you to set the threshold at which an alert will be sent.
        * Stats notifications allow you to set how frequently you would like to receive email statistics reports. For example, "daily", "weekly", or "monthly".

        For more information about alerts, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/alerts.html).
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"email_to\": {\n            \"type\": \"string\",\n            \"description\": \"The new email address you want your alert to be sent to.\\nExample: test@example.com\"\n        },\n        \"frequency\": {\n            \"type\": \"string\",\n            \"description\": \"The new frequency at which to send the stats_notification alert.\\nExample: monthly\"\n        },\n        \"percentage\": {\n            \"type\": \"integer\",\n            \"description\": \"The new percentage threshold at which the usage_limit alert will be sent.\\nExample: 90\"\n        }\n    }\n}",
            "example": "{\n    \"email_to\": \"example@example.com\"\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"created_at\": {\n            \"type\": \"integer\",\n            \"description\": \"A Unix timestamp indicating when the alert was created.\"\n        },\n        \"email_to\": {\n            \"type\": \"string\",\n            \"description\": \"The email address that the alert will be sent to.\"\n        },\n        \"frequency\": {\n            \"type\": \"string\",\n            \"description\": \"If the alert is of type stats_notification, this indicates how frequently the stats notifications will be sent. For example: \\\"daily\\\", \\\"weekly\\\", or \\\"monthly\\\".\"\n        },\n        \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"The ID of the alert.\"\n        },\n        \"type\": {\n            \"type\": \"string\",\n            \"description\": \"The type of alert.\",\n            \"enum\": [\n                \"usage_alert\",\n                \"stats_notification\"\n            ]\n        },\n        \"updated_at\": {\n            \"type\": \"integer\",\n            \"description\": \"A Unix timestamp indicating when the alert was last modified.\"\n        },\n        \"percentage\": {\n            \"type\": \"integer\",\n            \"description\": \"If the alert is of type usage_limit, this indicates the percentage of email usage that must be reached before the alert will be sent.\"\n        }\n    },\n    \"required\": [\n        \"created_at\",\n        \"email_to\",\n        \"id\",\n        \"type\",\n        \"updated_at\"\n    ]\n}",
                "example": "{\n    \"created_at\": 1451520930,\n    \"email_to\": \"example@example.com\",\n    \"frequency\": \"daily\",\n    \"id\": 48,\n    \"type\": \"stats_notification\",\n    \"updated_at\": 1451522691\n}"
              }
      securedBy:
        - null
  get:
    description: |-
      **This endpoint allows you to retieve all of your alerts.**

      Alerts allow you to specify an email address to receive notifications regarding your email usage or statistics. 
      * Usage alerts allow you to set the threshold at which an alert will be sent.
      * Stats notifications allow you to set how frequently you would like to receive email statistics reports. For example, "daily", "weekly", or "monthly".

      For more information about alerts, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/alerts.html).
    is:
      - onBehalfOfSubuser
    headers:
      Authorization:
        type: string
    responses:
      '200':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"array\",\n    \"description\": \"The list of alerts.\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"created_at\": {\n                \"type\": \"integer\",\n                \"description\": \"A Unix timestamp indicating when the alert was created.\"\n            },\n            \"email_to\": {\n                \"type\": \"string\",\n                \"description\": \"The email address that the alert will be sent to.\"\n            },\n            \"id\": {\n                \"type\": \"integer\",\n                \"description\": \"The ID of the alert.\"\n            },\n            \"percentage\": {\n                \"type\": \"integer\",\n                \"description\": \"If the alert is of type usage_limit, this indicates the percentage of email usage that must be reached before the alert will be sent.\"\n            },\n            \"type\": {\n                \"type\": \"string\",\n                \"description\": \"The type of alert.\",\n                \"enum\": [\n                    \"usage_limit\",\n                    \"stats_notification\"\n                ]\n            },\n            \"updated_at\": {\n                \"type\": \"integer\",\n                \"description\": \"A Unix timestamp indicating when the alert was last modified.\"\n            },\n            \"frequency\": {\n                \"type\": \"string\",\n                \"description\": \"If the alert is of type stats_notification, this indicates how frequently the stats notifications will be sent. For example, \\\"daily\\\", \\\"weekly\\\", or \\\"monthly\\\".\"\n            }\n        },\n        \"required\": [\n            \"created_at\",\n            \"email_to\",\n            \"id\",\n            \"type\"\n        ]\n    }\n}",
              "example": "[\n    {\n        \"created_at\": 1451498784,\n        \"email_to\": \"example1@example.com\",\n        \"id\": 46,\n        \"percentage\": 90,\n        \"type\": \"usage_limit\",\n        \"updated_at\": 1451498784\n    },\n    {\n        \"created_at\": 1451498812,\n        \"email_to\": \"example2@example.com\",\n        \"frequency\": \"monthly\",\n        \"id\": 47,\n        \"type\": \"stats_notification\",\n        \"updated_at\": 1451498812\n    },\n    {\n        \"created_at\": 1451520930,\n        \"email_to\": \"example3@example.com\",\n        \"frequency\": \"daily\",\n        \"id\": 48,\n        \"type\": \"stats_notification\",\n        \"updated_at\": 1451520930\n    }\n]"
            }
    securedBy:
      - null
  post:
    description: |-
      **This endpoint allows you to create a new alert.**

      Alerts allow you to specify an email address to receive notifications regarding your email usage or statistics. There are two types of alerts that can be created with this endpoint:

      * `usage_limit` allows you to set the threshold at which an alert will be sent.
      * `stats_notification` allows you to set how frequently you would like to receive email statistics reports. For example, "daily", "weekly", or "monthly".

      For more information about alerts, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/alerts.html).
    is:
      - onBehalfOfSubuser
    body:
      application/json: |-
        {
          "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"type\": {\n            \"type\": \"string\",\n            \"description\": \"The type of alert you want to create. Can be either usage_limit or stats_notification.\\nExample: usage_limit\",\n            \"enum\": [\n                \"stats_notification\",\n                \"usage_limit\"\n            ]\n        },\n        \"email_to\": {\n            \"type\": [\n                \"string\",\n                \"null\"\n            ],\n            \"description\": \"The email address the alert will be sent to.\\nExample: test@example.com\"\n        },\n        \"frequency\": {\n            \"type\": \"string\",\n            \"description\": \"Required for stats_notification. How frequently the alert will be sent.\\nExample: daily\"\n        },\n        \"percentage\": {\n            \"type\": \"integer\",\n            \"description\": \"Required for usage_alert. When this usage threshold is reached, the alert will be sent.\\nExample: 90\"\n        }\n    },\n    \"required\": [\n        \"type\",\n        \"email_to\"\n    ]\n}",
          "example": "{\n    \"type\": \"stats_notification\",\n    \"email_to\": \"example@example.com\",\n    \"frequency\": \"daily\"\n}"
        }
    headers:
      Authorization:
        type: string
      on-behalf-of:
        type: string
    responses:
      '201':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"created_at\": {\n            \"type\": \"integer\",\n            \"description\": \"A Unix timestamp indicating when the alert was created.\"\n        },\n        \"email_to\": {\n            \"type\": \"string\",\n            \"description\": \"The email address that the alert will be sent to.\"\n        },\n        \"frequency\": {\n            \"type\": \"string\",\n            \"description\": \"If the alert is of type stats_notification, this indicates how frequently the stats notifications will be sent. For example, \\\"daily\\\", \\\"weekly\\\", or \\\"monthly\\\".\"\n        },\n        \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"The ID of the alert.\"\n        },\n        \"type\": {\n            \"type\": \"string\",\n            \"description\": \"The type of alert.\"\n        },\n        \"updated_at\": {\n            \"type\": \"integer\",\n            \"description\": \"A Unix timestamp indicating when the alert was last modified.\"\n        },\n        \"percentage\": {\n            \"type\": \"integer\",\n            \"description\": \"\\\"If the alert is of type usage_limit, this indicates the percentage of email usage that must be reached before the alert will be sent.\"\n        }\n    },\n    \"required\": [\n        \"created_at\",\n        \"email_to\",\n        \"id\",\n        \"type\",\n        \"updated_at\"\n    ]\n}",
              "example": "{\n    \"created_at\": 1451520930,\n    \"email_to\": \"test@example.com\",\n    \"frequency\": \"daily\",\n    \"id\": 48,\n    \"type\": \"stats_notification\",\n    \"updated_at\": 1451520930\n}"
            }
      '400':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"field\": {\n            \"type\": \"string\"\n        },\n        \"message\": {\n            \"type\": \"string\"\n        }\n    }\n}"
            }
    securedBy:
      - null
/whitelabel:
  displayName: whitelabel
  /domains:
    displayName: domains
    post:
      description: |-
        **This endpoint allows you to create a whitelabel for one of your domains.**

        If you are creating a domain whitelabel that you would like a subuser to use, you have two options:
        1. Use the "username" parameter. This allows you to create a whitelabel on behalf of your subuser. This means the subuser is able to see and modify the created whitelabel.
        2. Use the Association workflow (see Associate Domain section). This allows you to assign a whitelabel created by the parent to a subuser. This means the subuser will default to the assigned whitelabel, but will not be able to see or modify that whitelabel. However, if the subuser creates their own whitelabel it will overwrite the assigned whitelabel.

        A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

        For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"domain\": {\n            \"type\": \"string\",\n            \"description\": \"Domain being whitelabeled.\"\n        },\n        \"subdomain\": {\n            \"type\": \"string\",\n            \"description\": \"The subdomain to use for this domain whitelabel.\"\n        },\n        \"username\": {\n            \"type\": \"string\",\n            \"description\": \"The username that this whitelabel will be associated with.\"\n        },\n        \"ips\": {\n            \"type\": \"array\",\n            \"description\": \"The IP addresses that will be included in the custom SPF record for this whitelabel.\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        },\n        \"custom_spf\": {\n            \"type\": \"boolean\",\n            \"description\": \"Specify whether to use a custom SPF or allow SendGrid to manage your SPF. This option is only available to domain whitelabels setup for manual security.\"\n        },\n        \"default\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether to use this whitelabel as the fallback if no domain whitelabels match the sender's domain.\"\n        },\n        \"automatic_security\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether to allow SendGrid to manage your SPF records, DKIM keys, and DKIM key rotation.\"\n        }\n    },\n    \"required\": [\n        \"domain\",\n        \"subdomain\"\n    ]\n}",
            "example": "{\n    \"domain\": \"example.com\",\n    \"subdomain\": \"news\",\n    \"username\": \"john@example.com\",\n    \"ips\": [\n        \"192.168.1.1\",\n        \"192.168.1.2\"\n    ],\n    \"custom_spf\": true,\n    \"default\": true,\n    \"automatic_security\": false\n}"
          }
      responses:
        '201':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"whitelabel::domain\"\n}",
                "example": "{\n    \"id\": 302183,\n    \"user_id\": 1446226,\n    \"subdomain\": \"example\",\n    \"domain\": \"example.com\",\n    \"username\": \"mbernier\",\n    \"ips\": [],\n    \"custom_spf\": false,\n    \"default\": true,\n    \"legacy\": false,\n    \"automatic_security\": true,\n    \"valid\": false,\n    \"dns\": {\n        \"mail_cname\": {\n            \"valid\": false,\n            \"type\": \"cname\",\n            \"host\": \"example.example.com\",\n            \"data\": \"u1446226.wl.sendgrid.net\"\n        },\n        \"dkim1\": {\n            \"valid\": false,\n            \"type\": \"cname\",\n            \"host\": \"s1._domainkey.example.com\",\n            \"data\": \"s1.domainkey.u1446226.wl.sendgrid.net\"\n        },\n        \"dkim2\": {\n            \"valid\": false,\n            \"type\": \"cname\",\n            \"host\": \"s2._domainkey.example.com\",\n            \"data\": \"s2.domainkey.u1446226.wl.sendgrid.net\"\n        }\n    }\n}"
              }
      securedBy:
        - null
    /subuser:
      displayName: subuser
      get:
        description: |-
          **This endpoint allows you to retrieve all of the whitelabels that have been assigned to a specific subuser.**

          A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

          Domain whitelabels can be associated with (i.e. assigned to) subusers from a parent account. This functionality allows subusers to send mail using their parent's whitelabels. To associate a whitelabel with a subuser, the parent account must first create the whitelabel and validate it. The the parent may then associate the whitelabel via the subuser management tools.

          For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)

          ## URI Parameters
          | URI Parameter   | Type  | Description  |
          |---|---|---|
          | username | string  | Username of the subuser to find associated whitelabels for. |
        is:
          - onBehalfOfSubuser
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"whitelabel:domain_spf\"\n}",
                  "example": "{\n    \"id\": 1,\n    \"domain\": \"example.com\",\n    \"subdomain\": \"mail\",\n    \"username\": \"mail@example.com\",\n    \"user_id\": 7,\n    \"ips\": [],\n    \"custom_spf\": true,\n    \"default\": false,\n    \"legacy\": false,\n    \"automatic_security\": false,\n    \"valid\": false,\n    \"dns\": {\n        \"mail_server\": {\n            \"host\": \"mail.example.com\",\n            \"type\": \"mx\",\n            \"data\": \"sendgrid.net\",\n            \"valid\": false\n        },\n        \"subdomain_spf\": {\n            \"host\": \"mail.example.com\",\n            \"type\": \"txt\",\n            \"data\": \"v=spf1 ip4:192.168.1.1 ip4:192.168.0.1 -all\",\n            \"valid\": false\n        },\n        \"domain_spf\": {\n            \"host\": \"example.com\",\n            \"type\": \"txt\",\n            \"data\": \"v=spf1 include:mail.example.com -all\",\n            \"valid\": false\n        },\n        \"dkim\": {\n            \"host\": \"s1._domainkey.example.com\",\n            \"type\": \"txt\",\n            \"data\": \"k=rsa; t=s; p=publicKey\",\n            \"valid\": false\n        }\n    }\n}"
                }
        securedBy:
          - null
      delete:
        description: |-
          **This endpoint allows you to disassociate a specific whitelabel from a subuser.**

          A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

          Domain whitelabels can be associated with (i.e. assigned to) subusers from a parent account. This functionality allows subusers to send mail using their parent's whitelabels. To associate a whitelabel with a subuser, the parent account must first create the whitelabel and validate it. The the parent may then associate the whitelabel via the subuser management tools.

          For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)

          ## URI Parameters
          | URI Parameter   | Type  | Required?  | Description  |
          |---|---|---|---|
          | username | string  | required  | Username for the subuser to find associated whitelabels for. |
        is:
          - onBehalfOfSubuser
        responses:
          '204':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\"\n}"
                }
        securedBy:
          - null
    '/{id}':
      displayName: id
      /ips:
        displayName: ips
        post:
          description: |-
            **This endpoint allows you to add an IP address to a domain whitelabel.**

            A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

            For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)

            ## URI Parameters
            | URI Parameter   | Type  |  Description  |
            |---|---|---|
            | id | integer  | ID of the domain to which you are adding an IP |
          is:
            - onBehalfOfSubuser
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"ip\": {\n            \"type\": \"string\",\n            \"description\": \"IP to associate with the domain. Used for manually specifying IPs for custom SPF.\"\n        }\n    },\n    \"required\": [\n        \"ip\"\n    ]\n}",
                "example": "{\n    \"ip\": \"192.168.0.1\"\n}"
              }
          responses:
            '200':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"whitelabel:domain_spf\"\n}",
                    "example": "{\n    \"id\": 1,\n    \"domain\": \"example.com\",\n    \"subdomain\": \"mail\",\n    \"username\": \"john@example.com\",\n    \"user_id\": 7,\n    \"ips\": [],\n    \"custom_spf\": true,\n    \"default\": false,\n    \"legacy\": false,\n    \"automatic_security\": false,\n    \"valid\": false,\n    \"dns\": {\n        \"mail_server\": {\n            \"host\": \"mail.example.com\",\n            \"type\": \"mx\",\n            \"data\": \"sendgrid.net\",\n            \"valid\": false\n        },\n        \"subdomain_spf\": {\n            \"host\": \"mail.example.com\",\n            \"type\": \"txt\",\n            \"data\": \"v=spf1 ip4:192.168.1.1 ip4:192.168.0.1 -all\",\n            \"valid\": false\n        },\n        \"domain_spf\": {\n            \"host\": \"example.com\",\n            \"type\": \"txt\",\n            \"data\": \"v=spf1 include:mail.example.com -all\",\n            \"valid\": false\n        },\n        \"dkim\": {\n            \"host\": \"s1._domainkey.example.com\",\n            \"type\": \"txt\",\n            \"data\": \"k=rsa; t=s; p=publicKey\",\n            \"valid\": false\n        }\n    }\n}"
                  }
          securedBy:
            - null
        '/{ip}':
          displayName: ip
          uriParameters:
            ip:
              type: string
          delete:
            description: |-
              **This endpoint allows you to remove a domain's IP address from that domain's whitelabel.**

              A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

              For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)

              ## URI Parameters
              | URI Parameter   | Type  | Description  |
              |---|---|---|
              | id | integer  | ID of the domain whitelabel to delete the IP from. |
              | ip | string | IP to remove from the domain whitelabel. |
            is:
              - onBehalfOfSubuser
            responses:
              '200':
                body:
                  application/json: |-
                    {
                      "schema": "{\n    \"type\": \"whitelabel:domain_spf\"\n}",
                      "example": "{\n    \"id\": 1,\n    \"domain\": \"example.com\",\n    \"subdomain\": \"mail\",\n    \"username\": \"mail@example.com\",\n    \"user_id\": 7,\n    \"ips\": [],\n    \"custom_spf\": true,\n    \"default\": false,\n    \"legacy\": false,\n    \"automatic_security\": false,\n    \"valid\": false,\n    \"dns\": {\n        \"mail_server\": {\n            \"host\": \"mail.example.com\",\n            \"type\": \"mx\",\n            \"data\": \"sendgrid.net\",\n            \"valid\": false\n        },\n        \"subdomain_spf\": {\n            \"host\": \"mail.example.com\",\n            \"type\": \"txt\",\n            \"data\": \"v=spf1 ip4:192.168.1.1 ip4:192.168.0.1 -all\",\n            \"valid\": false\n        },\n        \"domain_spf\": {\n            \"host\": \"example.com\",\n            \"type\": \"txt\",\n            \"data\": \"v=spf1 include:mail.example.com -all\",\n            \"valid\": false\n        },\n        \"dkim\": {\n            \"host\": \"s1._domainkey.example.com\",\n            \"type\": \"txt\",\n            \"data\": \"k=rsa; t=s; p=publicKey\",\n            \"valid\": false\n        }\n    }\n}"
                    }
            securedBy:
              - null
      /validate:
        displayName: validate
        uriParameters:
          id:
            type: string
        post:
          description: |-
            **This endpoint allows you to validate a domain whitelabel. If it fails, it will return an error message describing why the whitelabel could not be validated.**

            A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

            For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)

            ## URI Parameters
            | URI Parameter   | Type   | Description  |
            |---|---|---|
            | id | integer  |ID of the domain whitelabel to validate. |
          is:
            - onBehalfOfSubuser
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"null\"\n}"
              }
          responses:
            '200':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"The ID of the domain whitelabel.\"\n        },\n        \"valid\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if this is a valid whitelabel.\"\n        },\n        \"validation_resuts\": {\n            \"type\": \"object\",\n            \"description\": \"The individual DNS records that are checked when validating, including the reason for any invalid DNS records.\",\n            \"properties\": {\n                \"mail_cname\": {\n                    \"type\": \"object\",\n                    \"description\": \"The CNAME record for the domain whitelabel.\",\n                    \"properties\": {\n                        \"valid\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"Indicates if this DNS record is valid.\"\n                        },\n                        \"reason\": {\n                            \"type\": \"string\",\n                            \"description\": \"The reason this record is invalid.\"\n                        }\n                    }\n                },\n                \"dkim1\": {\n                    \"type\": \"object\",\n                    \"description\": \"A DNS record for this domain whitelabel.\",\n                    \"properties\": {\n                        \"valid\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"Indicates if the DNS record is valid.\"\n                        },\n                        \"reason\": {\n                            \"type\": \"null\"\n                        }\n                    }\n                },\n                \"dkim2\": {\n                    \"type\": \"object\",\n                    \"description\": \"A DNS record for this whitelabel.\",\n                    \"properties\": {\n                        \"valid\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"Indicates if the DNS record is valid.\"\n                        },\n                        \"reason\": {\n                            \"type\": \"null\"\n                        }\n                    }\n                },\n                \"spf\": {\n                    \"type\": \"object\",\n                    \"description\": \"The SPF record for the whitelabel.\",\n                    \"properties\": {\n                        \"valid\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"Indicates if the SPF record is valid.\"\n                        },\n                        \"reason\": {\n                            \"type\": \"null\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
                    "example": "{\n    \"id\": 1,\n    \"valid\": true,\n    \"validation_resuts\": {\n        \"mail_cname\": {\n            \"valid\": false,\n            \"reason\": \"Expected your MX record to be \\\"mx.sendgrid.net\\\" but found \\\"example.com\\\".\"\n        },\n        \"dkim1\": {\n            \"valid\": true,\n            \"reason\": null\n        },\n        \"dkim2\": {\n            \"valid\": true,\n            \"reason\": null\n        },\n        \"spf\": {\n            \"valid\": true,\n            \"reason\": null\n        }\n    }\n}"
                  }
            '500':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"A message explaining the reason for the error.\"\n                    }\n                },\n                \"required\": [\n                    \"message\"\n                ]\n            }\n        }\n    }\n}",
                    "example": "{\n    \"errors\": [\n        {\n            \"message\": \"internal error getting TXT\"\n        }\n    ]\n}"
                  }
          securedBy:
            - null
    '/{domain_id}':
      displayName: domain_id
      uriParameters:
        domain_id:
          type: string
      patch:
        description: |-
          **This endpoint allows you to update the settings for a domain whitelabel.**

          A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

          For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)
        is:
          - onBehalfOfSubuser
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"default\": {\n            \"type\": \"boolean\",\n            \"default\": false,\n            \"description\": \"Indicates whether this domain whitelabel should be considered the default.\"\n        },\n        \"custom_spf\": {\n            \"type\": \"boolean\",\n            \"default\": false,\n            \"description\": \"Indicates whether to generate a custom SPF record for manual security.\"\n        }\n    }\n}",
              "example": "{\n    \"default\": false,\n    \"custom_spf\": true\n}"
            }
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"title\": \"Update a Domain response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"default false\": {\n            \"description\": \"Inidcates whether this domain whitelabel should be considered the default.  Defaults to false.\",\n            \"type\": \"boolean\"\n        },\n        \"custom_spf false\": {\n            \"description\": \"Indicates whether to generate a custom SPF record for manual security.  Defaults to false.\",\n            \"type\": \"boolean\"\n        }\n    }\n}"
                }
        securedBy:
          - null
      delete:
        description: |-
          **This endpoint allows you to delete a domain whitelabel.**

          A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

          For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)
        is:
          - onBehalfOfSubuser
        responses:
          '204':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\"\n}"
                }
        securedBy:
          - null
      get:
        description: |-
          **This endpoint allows you to retrieve a specific domain whitelabel.**

          A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

          For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)
        is:
          - onBehalfOfSubuser
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"whitelabel::domain\"\n}"
                }
        securedBy:
          - null
      /subuser:
        displayName: subuser
        post:
          description: |-
            **This endpoint allows you to associate a specific domain whitelabel with a subuser.**

            A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

            Domain whitelabels can be associated with (i.e. assigned to) subusers from a parent account. This functionality allows subusers to send mail using their parent's whitelabels. To associate a whitelabel with a subuser, the parent account must first create the whitelabel and validate it. The the parent may then associate the whitelabel via the subuser management tools.

            For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)

            ## URI Parameters
            | URI Parameter   | Type   | Description  |
            |---|---|---|
            | domain_id | integer   | ID of the domain whitelabel to associate with the subuser. |
          is:
            - onBehalfOfSubuser
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"username\": {\n            \"type\": \"string\",\n            \"description\": \"Username to associate with the domain whitelabel.\"\n        }\n    },\n    \"required\": [\n        \"username\"\n    ]\n}",
                "example": "{\n    \"username\": \"jane@example.com\"\n}"
              }
          responses:
            '201':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"whitelabel:domain_spf\"\n}",
                    "example": "{\n    \"id\": 1,\n    \"domain\": \"example.com\",\n    \"subdomain\": \"mail\",\n    \"username\": \"mail@example.com\",\n    \"user_id\": 7,\n    \"ips\": [],\n    \"custom_spf\": true,\n    \"default\": false,\n    \"legacy\": false,\n    \"automatic_security\": false,\n    \"valid\": false,\n    \"dns\": {\n        \"mail_server\": {\n            \"host\": \"mail.example.com\",\n            \"type\": \"mx\",\n            \"data\": \"sendgrid.net\",\n            \"valid\": false\n        },\n        \"subdomain_spf\": {\n            \"host\": \"mail.example.com\",\n            \"type\": \"txt\",\n            \"data\": \"v=spf1 ip4:192.168.1.1 ip4:192.168.0.1 -all\",\n            \"valid\": false\n        },\n        \"domain_spf\": {\n            \"host\": \"example.com\",\n            \"type\": \"txt\",\n            \"data\": \"v=spf1 include:mail.example.com -all\",\n            \"valid\": false\n        },\n        \"dkim\": {\n            \"host\": \"s1._domainkey.example.com\",\n            \"type\": \"txt\",\n            \"data\": \"k=rsa; t=s; p=publicKey\",\n            \"valid\": false\n        }\n    }\n}"
                  }
          securedBy:
            - null
    /default:
      displayName: default
      get:
        description: |-
          **This endpoint allows you to retrieve the default whitelabel for a domain.**

          A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

          For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)

          ## URI Parameters
          | URI Parameter   | Type   | Description  |
          |---|---|---|
          | domain | string  |The domain to find a default domain whitelabel for. |
        is:
          - onBehalfOfSubuser
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"whitelabel:domain_spf\"\n}"
                }
        securedBy:
          - null
    get:
      description: |-
        **This endpoint allows you to retrieve a list of all domain whitelabels you have created.**

        A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

        For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"id\": {\n                \"type\": \"number\",\n                \"description\": \"The ID of the domain whitelabel.\"\n            },\n            \"user_id\": {\n                \"type\": \"number\",\n                \"description\": \"The ID of the user that this whitelabel will be associated with.\"\n            },\n            \"subdomain\": {\n                \"type\": \"string\",\n                \"description\": \"The subdomain created for this domain whitelabel.\"\n            },\n            \"domain\": {\n                \"type\": \"string\",\n                \"description\": \"The domain that this whitelabel was created for.\"\n            },\n            \"username\": {\n                \"type\": \"string\",\n                \"description\": \"The username that this whitelabel is associated with.\"\n            },\n            \"ips\": {\n                \"type\": \"array\",\n                \"description\": \"The IPs that will be included in the custom SPF record.\",\n                \"items\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"custom_spf\": {\n                \"type\": \"boolean\",\n                \"description\": \"Indicates if this whitelabel has custom SPF.\"\n            },\n            \"default\": {\n                \"type\": \"boolean\",\n                \"description\": \"Indicates if this whitelabel has been set as the default whitelabel.\"\n            },\n            \"legacy\": {\n                \"type\": \"boolean\",\n                \"description\": \"Indicates if this is whitelabel was created with the legacy whitelabel tool.\"\n            },\n            \"automatic_security\": {\n                \"type\": \"boolean\",\n                \"description\": \"Indicates if this whitelabel uses automated security.\"\n            },\n            \"valid\": {\n                \"type\": \"boolean\",\n                \"description\": \"Indicates if this is a valid whitelabel or not.\"\n            },\n            \"dns\": {\n                \"type\": \"object\",\n                \"description\": \"The DNS records for this whitelabel that are used for authenticating the sending domain.\",\n                \"properties\": {\n                    \"mail_server\": {\n                        \"type\": \"object\",\n                        \"description\": \"Designates which mail server is responsible for accepting messages from a domain.\",\n                        \"properties\": {\n                            \"valid\": {\n                                \"type\": \"boolean\",\n                                \"description\": \"Indicates if this is a valid DNS record with no conflicts.\"\n                            },\n                            \"type\": {\n                                \"type\": \"string\",\n                                \"description\": \"The type of DNS record.\"\n                            },\n                            \"host\": {\n                                \"type\": \"string\",\n                                \"description\": \"The domain sending the messages.\"\n                            },\n                            \"data\": {\n                                \"type\": \"string\",\n                                \"description\": \"The mail server responsible for accepting messages.\"\n                            }\n                        }\n                    },\n                    \"subdomain_spf\": {\n                        \"type\": \"object\",\n                        \"description\": \"The SPF record for the subdomain used to create this whitelabel.\",\n                        \"properties\": {\n                            \"valid\": {\n                                \"type\": \"boolean\",\n                                \"description\": \"Indicates if the SPF record is valid.\"\n                            },\n                            \"type\": {\n                                \"type\": \"string\",\n                                \"description\": \"The type of data in the SPF record.\"\n                            },\n                            \"host\": {\n                                \"type\": \"string\",\n                                \"description\": \"The domain that this SPF record will be used to authenticate.\"\n                            },\n                            \"data\": {\n                                \"type\": \"string\",\n                                \"description\": \"The SPF record.\"\n                            }\n                        }\n                    },\n                    \"dkim\": {\n                        \"type\": \"object\",\n                        \"description\": \"The DNS record used when creating the DKIM signature.\",\n                        \"properties\": {\n                            \"valid\": {\n                                \"type\": \"boolean\",\n                                \"description\": \"Indicates if this DNS record is valid.\"\n                            },\n                            \"type\": {\n                                \"type\": \"string\",\n                                \"description\": \"The type of DNS record.\",\n                                \"enum\": [\n                                    \"cname\",\n                                    \"mx\",\n                                    \"txt\"\n                                ]\n                            },\n                            \"host\": {\n                                \"type\": \"string\",\n                                \"description\": \"The domain that these DNS records will be applied to.\"\n                            },\n                            \"data\": {\n                                \"type\": \"string\",\n                                \"description\": \"The DNS record.\"\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"required\": [\n            \"id\",\n            \"user_id\",\n            \"subdomain\",\n            \"domain\",\n            \"username\",\n            \"ips\",\n            \"custom_spf\",\n            \"default\",\n            \"legacy\",\n            \"automatic_security\",\n            \"valid\",\n            \"dns\"\n        ]\n    }\n}",
                "example": "[\n    {\n        \"id\": 1,\n        \"domain\": \"example.com\",\n        \"subdomain\": \"mail\",\n        \"username\": \"john@example.com\",\n        \"user_id\": 7,\n        \"ips\": [\n            \"192.168.1.1\",\n            \"192.168.1.2\"\n        ],\n        \"custom_spf\": true,\n        \"default\": true,\n        \"legacy\": false,\n        \"automatic_security\": true,\n        \"valid\": true,\n        \"dns\": {\n            \"mail_cname\": {\n                \"host\": \"mail.example.com\",\n                \"type\": \"cname\",\n                \"data\": \"u7.wl.sendgrid.net\",\n                \"valid\": true\n            },\n            \"spf\": {\n                \"host\": \"example.com\",\n                \"type\": \"txt\",\n                \"data\": \"v=spf1 include:u7.wl.sendgrid.net -all\",\n                \"valid\": true\n            },\n            \"dkim1\": {\n                \"host\": \"s1._domainkey.example.com\",\n                \"type\": \"cname\",\n                \"data\": \"s1._domainkey.u7.wl.sendgrid.net\",\n                \"valid\": true\n            },\n            \"dkim2\": {\n                \"host\": \"s2._domainkey.example.com\",\n                \"type\": \"cname\",\n                \"data\": \"s2._domainkey.u7.wl.sendgrid.net\",\n                \"valid\": true\n            }\n        }\n    },\n    {\n        \"id\": 2,\n        \"domain\": \"example2.com\",\n        \"subdomain\": \"news\",\n        \"username\": \"jane@example2.com\",\n        \"user_id\": 8,\n        \"ips\": [],\n        \"custom_spf\": false,\n        \"default\": true,\n        \"legacy\": false,\n        \"automatic_security\": true,\n        \"valid\": false,\n        \"dns\": {\n            \"mail_server\": {\n                \"host\": \"news.example2.com\",\n                \"type\": \"mx\",\n                \"data\": \"sendgrid.net\",\n                \"valid\": false\n            },\n            \"subdomain_spf\": {\n                \"host\": \"news.example2.com\",\n                \"type\": \"txt\",\n                \"data\": \"v=spf1 include:sendgrid.net ~all\",\n                \"valid\": false\n            },\n            \"domain_spf\": {\n                \"host\": \"example2.com\",\n                \"type\": \"txt\",\n                \"data\": \"v=spf1 include:news.example2.com -all\",\n                \"valid\": false\n            },\n            \"dkim\": {\n                \"host\": \"example2.com\",\n                \"type\": \"txt\",\n                \"data\": \"k=rsa; t=s; p=publicKey\",\n                \"valid\": false\n            }\n        }\n    }\n]"
              }
      queryParameters:
        limit:
          type: integer
          description: Number of domains to return.
          displayName: Number of domains to return.
        offset:
          type: integer
          description: Paging offset.
          displayName: Paging offset.
        exclude_subusers:
          type: boolean
          description: Exclude subuser domains from the result.
          displayName: Exclude subuser domains from the result.
        username:
          type: string
          description: The username associated with a whitelabel.
          displayName: The username associated with a whitelabel.
        domain:
          type: string
          description: Search for domain whitelabels that match the given domain.
          displayName: Search for domain whitelabels that match the given domain.
      securedBy:
        - null
  /links:
    displayName: links
    post:
      description: |-
        **This endpoint allows you to create a new link whitelabel.**

        Email link whitelabels allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.

        For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/links.html).
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"domain\": {\n            \"type\": \"string\",\n            \"description\": \"The root domain for your subdomain that you are creating the whitelabel for. This should match your FROM email address.\"\n        },\n        \"subdomain\": {\n            \"type\": \"string\",\n            \"description\": \"The subdomain to create the link whitelabel for. Must be different from the subdomain you used for a domain whitelabel.\"\n        },\n        \"default\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if you want to use this link whitelabel as the fallback, or default, whitelabel.\",\n            \"enum\": [\n                true,\n                false\n            ]\n        }\n    },\n    \"required\": [\n        \"domain\",\n        \"subdomain\"\n    ]\n}",
            "example": "{\n    \"domain\": \"example.com\",\n    \"subdomain\": \"mail\",\n    \"default\": true\n}"
          }
      responses:
        '201':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"link_whitelabel\"\n}",
                "example": "{\n    \"id\": 1,\n    \"domain\": \"example.com\",\n    \"subdomain\": \"mail\",\n    \"username\": \"john@example.com\",\n    \"user_id\": 7,\n    \"default\": false,\n    \"valid\": true,\n    \"legacy\": false,\n    \"dns\": {\n        \"domain_cname\": {\n            \"valid\": true,\n            \"type\": \"cname\",\n            \"host\": \"mail.example.com\",\n            \"data\": \"sendgrid.net\"\n        },\n        \"owner_cname\": {\n            \"valid\": true,\n            \"type\": \"cname\",\n            \"host\": \"7.example.com\",\n            \"data\": \"sendgrid.net\"\n        }\n    }\n}"
              }
      queryParameters:
        limit:
          type: integer
          default: 50
          description: Number of domains to return.
          displayName: Number of domains to return.
        offset:
          type: integer
          description: Paging offset.
          displayName: Paging offset.
      securedBy:
        - null
    '/{id}':
      displayName: id
      /validate:
        displayName: validate
        uriParameters:
          id:
            type: integer
            description: The id of the link whitelabel that you want to validate.
            displayName: The id of the link whitelabel that you want to validate.
        post:
          description: |-
            **This endpoint allows you to validate a link whitelabel.**

            Email link whitelabels allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.

            For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/links.html).
          is:
            - onBehalfOfSubuser
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"null\"\n}"
              }
          responses:
            '200':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"The id of the link whitelabel.\"\n        },\n        \"valid\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if the link whitelabel is valid.\",\n            \"enum\": [\n                true,\n                false\n            ]\n        },\n        \"validation_results\": {\n            \"type\": \"object\",\n            \"description\": \"The individual validations results for each of the DNS records associated with this link whitelabel.\",\n            \"required\": [\n                \"domain_cname\"\n            ],\n            \"properties\": {\n                \"domain_cname\": {\n                    \"type\": \"object\",\n                    \"description\": \"The DNS record generated for the sending domain used for this link whitelabel.\",\n                    \"required\": [\n                        \"valid\",\n                        \"reason\"\n                    ],\n                    \"properties\": {\n                        \"valid\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"Indicates if this DNS record is valid.\",\n                            \"enum\": [\n                                true,\n                                false\n                            ]\n                        },\n                        \"reason\": {\n                            \"type\": [\n                                \"string\",\n                                \"null\"\n                            ],\n                            \"description\": \"Null if the DNS record is valid. If the DNS record is invalid, this will explain why.\"\n                        }\n                    }\n                },\n                \"owner_cname\": {\n                    \"type\": \"object\",\n                    \"description\": \"The DNS record created to verify the link whitelabel.\",\n                    \"properties\": {\n                        \"valid\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"Indicates if the DNS record is valid.\",\n                            \"enum\": [\n                                true,\n                                false\n                            ]\n                        },\n                        \"reason\": {\n                            \"type\": [\n                                \"null\",\n                                \"string\"\n                            ],\n                            \"description\": \"Null if valid. If the DNS record is invalid, this will explain why.\"\n                        }\n                    },\n                    \"required\": [\n                        \"valid\",\n                        \"reason\"\n                    ]\n                }\n            }\n        }\n    },\n    \"required\": [\n        \"id\",\n        \"valid\",\n        \"validation_results\"\n    ]\n}",
                    "example": "{\n    \"id\": 1,\n    \"valid\": true,\n    \"validation_results\": {\n        \"domain_cname\": {\n            \"valid\": false,\n            \"reason\": \"Expected CNAME to match \\\"sendgrid.net.\\\" but found \\\"example.com.\\\".\"\n        },\n        \"owner_cname\": {\n            \"valid\": true,\n            \"reason\": null\n        }\n    }\n}"
                  }
            '500':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"description\": \"The reasons why the validation failed.\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"The reason why the link whitelabel could not be validated.\"\n                    }\n                },\n                \"required\": [\n                    \"message\"\n                ]\n            }\n        }\n    },\n    \"required\": [\n        \"errors\"\n    ]\n}",
                    "example": "{\n    \"errors\": [\n        {\n            \"message\": \"internal error getting CNAME\"\n        }\n    ]\n}"
                  }
          securedBy:
            - null
      uriParameters:
        id:
          type: integer
          description: The id of the link whitelabel you want to update.
          displayName: The id of the link whitelabel you want to update.
      delete:
        description: |-
          **This endpoint allows you to delete a link whitelabel.**

          Email link whitelabels allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.

          For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/links.html).
        is:
          - onBehalfOfSubuser
        responses:
          '204':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\"\n}"
                }
        securedBy:
          - null
      get:
        description: |-
          **This endpoint allows you to retrieve a specific link whitelabel.**

          Email link whitelabels allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.

          For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/links.html).
        is:
          - onBehalfOfSubuser
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"link_whitelabel\"\n}",
                  "example": "{\n    \"id\": 1,\n    \"domain\": \"example.com\",\n    \"subdomain\": \"mail\",\n    \"username\": \"john@example.com\",\n    \"user_id\": 7,\n    \"default\": false,\n    \"valid\": true,\n    \"legacy\": false,\n    \"dns\": {\n        \"domain_cname\": {\n            \"valid\": true,\n            \"type\": \"cname\",\n            \"host\": \"mail.example.com\",\n            \"data\": \"sendgrid.net\"\n        },\n        \"owner_cname\": {\n            \"valid\": true,\n            \"type\": \"cname\",\n            \"host\": \"7.example.com\",\n            \"data\": \"sendgrid.net\"\n        }\n    }\n}"
                }
        securedBy:
          - null
      patch:
        description: |-
          **This endpoint allows you to update a specific link whitelabel. You can use this endpoint to change a link whitelabel's default status.**

          Email link whitelabels allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.

          For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/links.html).
        is:
          - onBehalfOfSubuser
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"default\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if the link whitelabel is set as the default, or fallback, whitelabel.\",\n            \"enum\": [\n                true,\n                false\n            ]\n        }\n    }\n}",
              "example": "{\n    \"default\": true\n}"
            }
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"link_whitelabel\"\n}",
                  "example": "{\n    \"id\": 1,\n    \"domain\": \"example.com\",\n    \"subdomain\": \"mail\",\n    \"username\": \"john@example.com\",\n    \"user_id\": 7,\n    \"default\": true,\n    \"valid\": true,\n    \"legacy\": false,\n    \"dns\": {\n        \"domain_cname\": {\n            \"valid\": true,\n            \"type\": \"cname\",\n            \"host\": \"mail.example.com\",\n            \"data\": \"sendgrid.net\"\n        },\n        \"owner_cname\": {\n            \"valid\": true,\n            \"type\": \"cname\",\n            \"host\": \"7.example.com\",\n            \"data\": \"sendgrid.net\"\n        }\n    }\n}"
                }
        securedBy:
          - null
    '/{link_id}':
      displayName: link_id
      /subuser:
        displayName: subuser
        post:
          description: |-
            **This endpoint allows you to associate a link whitelabel with a subuser account.**

            Link whitelables can be associated with subusers from the parent account. This functionality allows
            subusers to send mail using their parent's linke whitelabels. To associate a link whitelabel, the parent account
            must first create a whitelabel and validate it. The parent may then associate that whitelabel with a subuser via the API or the Subuser Management page in the user interface.

            Email link whitelabels allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.

            For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/links.html).
          is:
            - onBehalfOfSubuser
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"username\": {\n            \"type\": \"string\",\n            \"description\": \"The username of the subuser account that you want to associate the link whitelabel with.\"\n        }\n    }\n}",
                "example": "{\n    \"username\": \"jane@example.com\"\n}"
              }
          responses:
            '200':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"link_whitelabel\"\n}",
                    "example": "{\n    \"id\": 1,\n    \"domain\": \"example.com\",\n    \"subdomain\": \"mail\",\n    \"username\": \"john@example.com\",\n    \"user_id\": 7,\n    \"default\": false,\n    \"valid\": true,\n    \"legacy\": false,\n    \"dns\": {\n        \"domain_cname\": {\n            \"valid\": true,\n            \"type\": \"cname\",\n            \"host\": \"mail.example.com\",\n            \"data\": \"sendgrid.net\"\n        },\n        \"owner_cname\": {\n            \"valid\": true,\n            \"type\": \"cname\",\n            \"host\": \"7.example.com\",\n            \"data\": \"sendgrid.net\"\n        }\n    }\n}"
                  }
          securedBy:
            - null
    /default:
      displayName: default
      get:
        description: |-
          **This endpoint allows you to retrieve the default link whitelabel.**

          Default link whitelabel is the actual link whitelabel to be used when sending messages. If there are multiple link whitelabels, the default is determined by the following order:
          <ul>
            <li>Validated link whitelabels marked as "default"</li>
            <li>Legacy link whitelabels (migrated from the whitelabel wizard)</li>
            <li>Default SendGrid link whitelabel (i.e. 100.ct.sendgrid.net)</li>
          </ul>

          Email link whitelabels allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.

          For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/links.html).
        is:
          - onBehalfOfSubuser
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"link_whitelabel\"\n}",
                  "example": "{\n    \"id\": 1,\n    \"domain\": \"example.com\",\n    \"subdomain\": \"mail\",\n    \"username\": \"john@example.com\",\n    \"user_id\": 7,\n    \"default\": false,\n    \"valid\": true,\n    \"legacy\": false,\n    \"dns\": {\n        \"domain_cname\": {\n            \"valid\": true,\n            \"type\": \"cname\",\n            \"host\": \"mail.example.com\",\n            \"data\": \"sendgrid.net\"\n        },\n        \"owner_cname\": {\n            \"valid\": true,\n            \"type\": \"cname\",\n            \"host\": \"7.example.com\",\n            \"data\": \"sendgrid.net\"\n        }\n    }\n}"
                }
        queryParameters:
          domain:
            type: string
            description: The domain to match against when finding a corresponding link whitelabel.
            displayName: The domain to match against when finding a corresponding link whitelabel.
        securedBy:
          - null
    get:
      description: |-
        **This endpoint allows you to retrieve all link whitelabels.**

        Email link whitelabels allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.

        For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/links.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"link_whitelabel\"\n    }\n}",
                "example": "[\n    {\n        \"id\": 1,\n        \"domain\": \"example.com\",\n        \"subdomain\": \"mail\",\n        \"username\": \"john@example.com\",\n        \"user_id\": 7,\n        \"default\": true,\n        \"valid\": true,\n        \"legacy\": false,\n        \"dns\": {\n            \"domain_cname\": {\n                \"valid\": true,\n                \"type\": \"cname\",\n                \"host\": \"mail.example.com\",\n                \"data\": \"sendgrid.net\"\n            },\n            \"owner_cname\": {\n                \"valid\": true,\n                \"type\": \"cname\",\n                \"host\": \"7.example.com\",\n                \"data\": \"sendgrid.net\"\n            }\n        }\n    },\n    {\n        \"id\": 2,\n        \"domain\": \"example2.com\",\n        \"subdomain\": \"news\",\n        \"username\": \"john@example.com\",\n        \"user_id\": 8,\n        \"default\": false,\n        \"valid\": false,\n        \"legacy\": false,\n        \"dns\": {\n            \"domain_cname\": {\n                \"valid\": true,\n                \"type\": \"cname\",\n                \"host\": \"news.example2.com\",\n                \"data\": \"sendgrid.net\"\n            },\n            \"owner_cname\": {\n                \"valid\": false,\n                \"type\": \"cname\",\n                \"host\": \"8.example2.com\",\n                \"data\": \"sendgrid.net\"\n            }\n        }\n    }\n]"
              }
      queryParameters:
        limit:
          type: integer
          description: Limits the number of results returned per page.
          displayName: Limits the number of results returned per page.
      securedBy:
        - null
    /subuser:
      displayName: subuser
      delete:
        description: |-
          **This endpoint allows you to disassociate a link whitelabel from a subuser.**

          Link whitelables can be associated with subusers from the parent account. This functionality allows
          subusers to send mail using their parent's linke whitelabels. To associate a link whitelabel, the parent account
          must first create a whitelabel and validate it. The parent may then associate that whitelabel with a subuser via the API or the Subuser Management page in the user interface.

          Email link whitelabels allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.

          For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/links.html).
        is:
          - onBehalfOfSubuser
        responses:
          '204':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\"\n}"
                }
        queryParameters:
          username:
            type: string
            description: The username of the subuser account that you want to disassociate a link whitelabel from.
            displayName: The username of the subuser account that you want to disassociate a link whitelabel from.
        securedBy:
          - null
      get:
        description: |-
          **This endpoint allows you to retrieve the associated link whitelabel for a subuser.**

          Link whitelables can be associated with subusers from the parent account. This functionality allows
          subusers to send mail using their parent's linke whitelabels. To associate a link whitelabel, the parent account
          must first create a whitelabel and validate it. The parent may then associate that whitelabel with a subuser via the API or the Subuser Management page in the user interface.

          Email link whitelabels allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.

          For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/links.html).
        is:
          - onBehalfOfSubuser
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"link_whitelabel\"\n}",
                  "example": "{\n    \"id\": 1,\n    \"domain\": \"example.com\",\n    \"subdomain\": \"mail\",\n    \"username\": \"john@example.com\",\n    \"user_id\": 7,\n    \"default\": false,\n    \"valid\": true,\n    \"legacy\": false,\n    \"dns\": {\n        \"domain_cname\": {\n            \"valid\": true,\n            \"type\": \"cname\",\n            \"host\": \"mail.example.com\",\n            \"data\": \"sendgrid.net\"\n        },\n        \"owner_cname\": {\n            \"valid\": true,\n            \"type\": \"cname\",\n            \"host\": \"7.example.com\",\n            \"data\": \"sendgrid.net\"\n        }\n    }\n}"
                }
        queryParameters:
          username:
            type: string
            description: The username of the subuser to retrieve associated link whitelabels for.
            displayName: The username of the subuser to retrieve associated link whitelabels for.
        securedBy:
          - null
  /ips:
    displayName: ips
    post:
      description: |-
        **This endpoint allows you to create an IP whitelabel.**

        When creating an IP whitelable, you should use the same subdomain that you used when you created a domain whitelabel.

        A IP whitelabel consists of a subdomain and domain that will be used to generate a reverse DNS record for a given IP. Once SendGrid has verified that the appropriate A record for the IP has been created, the appropriate reverse DNS record for the IP is generated.

        For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/ips.html).
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"ip\": {\n            \"type\": \"string\",\n            \"description\": \"The IP address that you want to whitelabel.\"\n        },\n        \"subdomain\": {\n            \"type\": \"string\",\n            \"description\": \"The subdomain that will be used to send emails from the IP. Should be the same as the subdomain used for your domain whitelabel.\"\n        },\n        \"domain\": {\n            \"type\": \"string\",\n            \"description\": \"The root, or sending, domain that will be used to send message from the IP.\"\n        }\n    },\n    \"required\": [\n        \"ip\",\n        \"subdomain\",\n        \"domain\"\n    ]\n}",
            "example": "{\n    \"ip\": \"192.168.1.1\",\n    \"subdomain\": \"email\",\n    \"domain\": \"example.com\"\n}"
          }
      responses:
        '201':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"ip_whitelabel\"\n}",
                "example": "{\n    \"id\": 123,\n    \"ip\": \"192.168.1.2\",\n    \"rdns\": \"o1.email.example.com\",\n    \"users\": [],\n    \"subdomain\": \"email\",\n    \"domain\": \"example.com\",\n    \"valid\": true,\n    \"legacy\": false,\n    \"a_record\": {\n        \"valid\": true,\n        \"type\": \"a\",\n        \"host\": \"o1.email.example.com\",\n        \"data\": \"192.168.1.2\"\n    }\n}"
              }
      securedBy:
        - null
    '/{id}':
      displayName: id
      uriParameters:
        id:
          type: string
          description: The id of the IP whitelabel that you would like to retrieve.
          displayName: The id of the IP whitelabel that you would like to retrieve.
      delete:
        description: |-
          **This endpoint allows you to delete an IP whitelabel.**

          A IP whitelabel consists of a subdomain and domain that will be used to generate a reverse DNS record for a given IP. Once SendGrid has verified that the appropriate A record for the IP has been created, the appropriate reverse DNS record for the IP is generated.

          For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/ips.html).
        is:
          - onBehalfOfSubuser
        responses:
          '204':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\"\n}"
                }
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"description\": \"The errors preventing the IP whitelabel from being deleted.\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"A message explaining why the IP whitelabel could not be deleted.\"\n                    }\n                }\n            }\n        }\n    }\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"message\": \"Whitelabel ip not found.\"\n        }\n    ]\n}"
                }
        securedBy:
          - null
      get:
        description: |-
          **This endpoint allows you to retrieve an IP whitelabel.**

          A IP whitelabel consists of a subdomain and domain that will be used to generate a reverse DNS record for a given IP. Once SendGrid has verified that the appropriate A record for the IP has been created, the appropriate reverse DNS record for the IP is generated.

          For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/ips.html).
        is:
          - onBehalfOfSubuser
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"ip_whitelabel\"\n}",
                  "example": "{\n    \"id\": 123,\n    \"ip\": \"192.168.1.1\",\n    \"rdns\": \"o1.email.example.com\",\n    \"users\": [\n        {\n            \"username\": \"john@example.com\",\n            \"user_id\": 7\n        }\n    ],\n    \"subdomain\": \"email\",\n    \"domain\": \"example.com\",\n    \"valid\": true,\n    \"legacy\": false,\n    \"a_record\": {\n        \"valid\": true,\n        \"type\": \"a\",\n        \"host\": \"o1.email.example.com\",\n        \"data\": \"192.168.1.1\"\n    }\n}"
                }
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"description\": \"The errors preventing the retrieval of the IP whitelabel.\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"A message explaining why the IP whitelabel could not be found.\"\n                    }\n                },\n                \"required\": [\n                    \"message\"\n                ]\n            }\n        }\n    },\n    \"required\": [\n        \"errors\"\n    ]\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"message\": \"Whitelabel ip not found.\"\n        }\n    ]\n}"
                }
        securedBy:
          - null
      /validate:
        displayName: validate
        uriParameters:
          id:
            type: integer
        post:
          description: |-
            **This endpoint allows you to validate an IP whitelabel.**

            A IP whitelabel consists of a subdomain and domain that will be used to generate a reverse DNS record for a given IP. Once SendGrid has verified that the appropriate A record for the IP has been created, the appropriate reverse DNS record for the IP is generated.

            For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/ips.html).
          is:
            - onBehalfOfSubuser
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"null\"\n}"
              }
          responses:
            '200':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"The id of the IP whitelabel.\"\n        },\n        \"valid\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if the IP whitelabel is valid.\",\n            \"enum\": [\n                true,\n                false\n            ]\n        },\n        \"validation_results\": {\n            \"type\": \"object\",\n            \"description\": \"The specific results of the validation.\",\n            \"properties\": {\n                \"a_record\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"valid\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"Indicates if the IP whitelabel could be validated.\",\n                            \"enum\": [\n                                true,\n                                false\n                            ]\n                        },\n                        \"reason\": {\n                            \"type\": [\n                                \"null\",\n                                \"string\"\n                            ],\n                            \"description\": \"The reason the IP whitelabel could not be validated. Is null if the whitelabel was validated.\"\n                        }\n                    },\n                    \"required\": [\n                        \"valid\",\n                        \"reason\"\n                    ]\n                }\n            }\n        }\n    },\n    \"required\": [\n        \"id\",\n        \"valid\",\n        \"validation_results\"\n    ]\n}",
                    "example": "{\n    \"id\": 1,\n    \"valid\": true,\n    \"validation_results\": {\n        \"a_record\": {\n            \"valid\": true,\n            \"reason\": null\n        }\n    }\n}"
                  }
            '404':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"description\": \"The error messages for the failed validation.\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"A message describing why the IP could not be validated.\"\n                    }\n                },\n                \"required\": [\n                    \"message\"\n                ]\n            }\n        }\n    },\n    \"required\": [\n        \"errors\"\n    ]\n}",
                    "example": "{\n    \"errors\": [\n        {\n            \"message\": \"Whitelabel ip not found.\"\n        }\n    ]\n}"
                  }
              description: Unexpected error in API call. See HTTP response body for details.
            '500':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"description\": \"The error messages for the failed validation.\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"A message describing why the IP whitelabel could not be validated.\"\n                    }\n                },\n                \"required\": [\n                    \"message\"\n                ]\n            }\n        }\n    },\n    \"required\": [\n        \"errors\"\n    ]\n}",
                    "example": "{\n    \"errors\": [\n        {\n            \"message\": \"internal error getting rDNS\"\n        }\n    ]\n}"
                  }
          securedBy:
            - null
    get:
      description: |-
        **This endpoint allows you to retrieve all of the IP whitelabels that have been createdy by this account.**

        You may include a search key by using the "ip" parameter. This enables you to perform a prefix search for a given IP segment (e.g. "192.").

        A IP whitelabel consists of a subdomain and domain that will be used to generate a reverse DNS record for a given IP. Once SendGrid has verified that the appropriate A record for the IP has been created, the appropriate reverse DNS record for the IP is generated.

        For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/ips.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"ip_whitelabel\"\n    }\n}",
                "example": "[\n    {\n        \"id\": 1,\n        \"ip\": \"192.168.1.1\",\n        \"rdns\": \"o1.email.example.com\",\n        \"users\": [\n            {\n                \"username\": \"john@example.com\",\n                \"user_id\": 7\n            },\n            {\n                \"username\": \"jane@example.com\",\n                \"user_id\": 8\n            }\n        ],\n        \"subdomain\": \"email\",\n        \"domain\": \"example.com\",\n        \"valid\": true,\n        \"legacy\": false,\n        \"a_record\": {\n            \"valid\": true,\n            \"type\": \"a\",\n            \"host\": \"o1.email.example.com\",\n            \"data\": \"192.168.1.1\"\n        }\n    },\n    {\n        \"id\": 2,\n        \"ip\": \"192.168.1.2\",\n        \"rdns\": \"o2.email.example.com\",\n        \"users\": [\n            {\n                \"username\": \"john@example.com\",\n                \"user_id\": 7\n            },\n            {\n                \"username\": \"jane@example2.com\",\n                \"user_id\": 9\n            }\n        ],\n        \"subdomain\": \"email\",\n        \"domain\": \"example.com\",\n        \"valid\": true,\n        \"legacy\": false,\n        \"a_record\": {\n            \"valid\": true,\n            \"type\": \"a\",\n            \"host\": \"o2.email.example.com\",\n            \"data\": \"192.168.1.2\"\n        }\n    }\n]"
              }
      queryParameters:
        limit:
          type: integer
          description: The number of results to retrieve.
          displayName: The number of results to retrieve.
        offset:
          type: integer
          description: The point in the list of results to begin retrieving IPs from.
          displayName: The point in the list of results to begin retrieving IPs from.
        ip:
          type: string
          description: The IP segment that you would like to use in a prefix search.
          displayName: The IP segment that you would like to use in a prefix search.
      securedBy:
        - null
/access_settings:
  displayName: access_settings
  /whitelist:
    displayName: whitelist
    post:
      description: |-
        **This endpoint allows you to add one or more IP addresses to your IP whitelist.**

        When adding an IP to your whitelist, include the IP address in an array. You can whitelist one IP at a time, or you can whitelist multiple IPs at once.

        IP Access Management allows you to control which IP addresses can be used to access your account, either through the User Interface or the API. There is no limit to the number of IP addresses that you can add to your whitelist. It is possible to remove your own IP address from the whitelist, thus preventing yourself from accessing your account.

        For more information, please see our [User Guide](http://sendgrid.com/docs/User_Guide/Settings/ip_access_management.html).
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"ips\": {\n            \"type\": \"array\",\n            \"description\": \"An array containing the IP(s) you want to whitelist.\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"ip\": {\n                        \"type\": \"string\",\n                        \"description\": \"An IP address that you want to whitelist.\"\n                    }\n                },\n                \"required\": [\n                    \"ip\"\n                ]\n            }\n        }\n    },\n    \"required\": [\n        \"ips\"\n    ]\n}",
            "example": "{\n    \"ips\": [\n        {\n            \"ip\": \"192.168.1.1\"\n        },\n        {\n            \"ip\": \"192.*.*.*\"\n        },\n        {\n            \"ip\": \"192.168.1.3/32\"\n        }\n    ]\n}"
          }
      responses:
        '201':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"result\": {\n            \"type\": \"array\",\n            \"description\": \"An array listing all of your whitelisted IPs.\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID of the whitelisted IP.\"\n                    },\n                    \"ip\": {\n                        \"type\": \"string\",\n                        \"description\": \"The whitelisted IP.\"\n                    },\n                    \"created_at\": {\n                        \"type\": \"integer\",\n                        \"description\": \"A Unix timestamp indicating when the IP was whitelisted.\"\n                    },\n                    \"updated_at\": {\n                        \"type\": \"integer\",\n                        \"description\": \"A Unix timestamp indicating when the IPs whitelisting status was most recently updated.\"\n                    }\n                },\n                \"required\": [\n                    \"id\",\n                    \"ip\",\n                    \"created_at\",\n                    \"updated_at\"\n                ]\n            }\n        }\n    },\n    \"required\": [\n        \"result\"\n    ]\n}",
                "example": "{\n    \"result\": [\n        {\n            \"id\": 1,\n            \"ip\": \"192.168.1.1/32\",\n            \"created_at\": 1441824715,\n            \"updated_at\": 1441824715\n        },\n        {\n            \"id\": 2,\n            \"ip\": \"192.0.0.0/8\",\n            \"created_at\": 1441824715,\n            \"updated_at\": 1441824715\n        },\n        {\n            \"id\": 3,\n            \"ip\": \"192.168.1.3/32\",\n            \"created_at\": 1441824715,\n            \"updated_at\": 1441824715\n        }\n    ]\n}"
              }
      securedBy:
        - null
    '/{rule_id}':
      displayName: rule_id
      uriParameters:
        rule_id:
          type: string
          description: The ID of the IP address that you want to remove from your whitelist.
          displayName: The ID of the IP address that you want to remove from your whitelist.
      get:
        description: |-
          **This endpoint allows you to retreive a specific IP address that has been whitelisted.**

          You must include the ID for the specific IP address you want to retrieve in your call.

          IP Access Management allows you to control which IP addresses can be used to access your account, either through the User Interface or the API. There is no limit to the number of IP addresses that you can add to your whitelist. It is possible to remove your own IP address from the whitelist, thus preventing yourself from accessing your account.

          For more information, please see our [User Guide](http://sendgrid.com/docs/User_Guide/Settings/ip_access_management.html).
        is:
          - onBehalfOfSubuser
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"The ID of the IP address.\"\n        },\n        \"ip\": {\n            \"type\": \"string\",\n            \"description\": \"The IP address.\"\n        },\n        \"created_at\": {\n            \"type\": \"integer\",\n            \"description\": \"A Unix timestamp indicating when the IP was whitelisted.\"\n        },\n        \"updated_at\": {\n            \"type\": \"integer\",\n            \"description\": \"A Unix timestamp indicating when the IP address was last updated.\"\n        }\n    },\n    \"required\": [\n        \"id\",\n        \"ip\",\n        \"created_at\",\n        \"updated_at\"\n    ]\n}",
                  "example": "{\n    \"id\": 1,\n    \"ip\": \"192.168.1.1\",\n    \"created_at\": 1441824715,\n    \"updated_at\": 1441824715\n}"
                }
        securedBy:
          - null
      delete:
        description: |-
          **This endpoint allows you to remove a specific IP address from your IP whitelist.**

          When removing a specific IP address from your whitelist, you must include the ID in your call.

          IP Access Management allows you to control which IP addresses can be used to access your account, either through the User Interface or the API. There is no limit to the number of IP addresses that you can add to your whitelist. It is possible to remove your own IP address from the whitelist, thus preventing yourself from accessing your account.

          For more information, please see our [User Guide](http://sendgrid.com/docs/User_Guide/Settings/ip_access_management.html).
        is:
          - onBehalfOfSubuser
        responses:
          '204':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {}\n}"
                }
        securedBy:
          - null
    delete:
      description: |-
        **This endpoint allows you to remove one or more IPs from your IP whitelist.**

        You can remove one IP at a time, or you can remove multiple IP addresses.

        IP Access Management allows you to control which IP addresses can be used to access your account, either through the User Interface or the API. There is no limit to the number of IP addresses that you can add to your whitelist. It is possible to remove your own IP address from the whitelist, thus preventing yourself from accessing your account.

        For more information, please see our [User Guide](http://sendgrid.com/docs/User_Guide/Settings/ip_access_management.html).
      is:
        - onBehalfOfSubuser
      responses:
        '204':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {}\n}"
              }
      securedBy:
        - null
    get:
      description: |-
        **This endpoint allows you to retrieve a list of IP addresses that are currently whitelisted.**

        IP Access Management allows you to control which IP addresses can be used to access your account, either through the User Interface or the API. There is no limit to the number of IP addresses that you can add to your whitelist. It is possible to remove your own IP address from the whitelist, thus preventing yourself from accessing your account.

        For more information, please see our [User Guide](http://sendgrid.com/docs/User_Guide/Settings/ip_access_management.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"result\": {\n            \"type\": \"array\",\n            \"description\": \"An array listing all of your whitelisted IPs.\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID of the whitelisted IP.\"\n                    },\n                    \"ip\": {\n                        \"type\": \"string\",\n                        \"description\": \"The whitelisted IP.\"\n                    },\n                    \"created_at\": {\n                        \"type\": \"integer\",\n                        \"description\": \"A Unix timestamp indicating when the IP was whitelisted.\"\n                    },\n                    \"updated_at\": {\n                        \"type\": \"integer\",\n                        \"description\": \"A Unix timestamp indicating when the IPs whitelisting status was most recently updated.\"\n                    }\n                },\n                \"required\": [\n                    \"id\",\n                    \"ip\",\n                    \"created_at\",\n                    \"updated_at\"\n                ]\n            }\n        }\n    },\n    \"required\": [\n        \"result\"\n    ]\n}",
                "example": "{\n    \"result\": [\n        {\n            \"id\": 1,\n            \"ip\": \"192.168.1.1/32\",\n            \"created_at\": 1441824715,\n            \"updated_at\": 1441824715\n        },\n        {\n            \"id\": 2,\n            \"ip\": \"192.168.1.2/32\",\n            \"created_at\": 1441824715,\n            \"updated_at\": 1441824715\n        },\n        {\n            \"id\": 3,\n            \"ip\": \"192.168.1.3/32\",\n            \"created_at\": 1441824715,\n            \"updated_at\": 1441824715\n        }\n    ]\n}"
              }
      securedBy:
        - null
  /activity:
    displayName: activity
    get:
      description: |-
        **This endpoint allows you to retrieve a list of all of the IP addresses that recently attempted to access your account either through the User Interface or the API.**

        IP Access Management allows you to control which IP addresses can be used to access your account, either through the User Interface or the API. There is no limit to the number of IP addresses that you can add to your whitelist. It is possible to remove your own IP address from the whitelist, thus preventing yourself from accessing your account.

        For more information, please see our [User Guide](http://sendgrid.com/docs/User_Guide/Settings/ip_access_management.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"result\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"allowed\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"auth_method\": {\n                        \"type\": \"string\"\n                    },\n                    \"first_at\": {\n                        \"type\": \"integer\"\n                    },\n                    \"ip\": {\n                        \"type\": \"string\"\n                    },\n                    \"last_at\": {\n                        \"type\": \"integer\"\n                    },\n                    \"location\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
                "example": "{\n    \"result\": [\n        {\n            \"allowed\": false,\n            \"auth_method\": \"basic\",\n            \"first_at\": 1444087966,\n            \"ip\": \"1.1.1.1\",\n            \"last_at\": 1444406672,\n            \"location\": \"Australia\"\n        }\n    ]\n}"
              }
      queryParameters:
        limit:
          type: integer
          default: 20
          description: Limits the number of IPs to return.
          displayName: Limits the number of IPs to return.
      securedBy:
        - null
/campaigns:
  displayName: campaigns
  post:
    description: |-
      **This endpoint allows you to create a campaign.**

      Our Marketing Campaigns API lets you create, manage, send, and schedule campaigns.

      Note: In order to send or schedule the campaign, you will be required to provide a subject, sender ID, content (we suggest both html and plain text), and at least one list or segment ID. This information is not required when you create a campaign.

      For more information:

      * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
    body:
      application/json: |-
        {
          "schema": "{\n    \"type\": \"campaign_request\"\n}",
          "example": "{\n    \"title\": \"March Newsletter\",\n    \"subject\": \"New Products for Spring!\",\n    \"sender_id\": 124451,\n    \"list_ids\": [\n        110,\n        124\n    ],\n    \"segment_ids\": [\n        110\n    ],\n    \"categories\": [\n        \"spring line\"\n    ],\n    \"suppression_group_id\": 42,\n    \"custom_unsubscribe_url\": \"\",\n    \"ip_pool\": \"marketing\",\n    \"html_content\": \"<html><head><title></title></head><body><p>Check out our spring line!</p></body></html>\",\n    \"plain_content\": \"Check out our spring line!\"\n}"
        }
    responses:
      '201':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"campaign_response\"\n}",
              "example": "{\n    \"id\": 986724,\n    \"title\": \"March Newsletter\",\n    \"subject\": \"New Products for Spring!\",\n    \"sender_id\": 124451,\n    \"list_ids\": [\n        110,\n        124\n    ],\n    \"segment_ids\": [\n        110\n    ],\n    \"categories\": [\n        \"spring line\"\n    ],\n    \"suppression_group_id\": 42,\n    \"custom_unsubscribe_url\": \"\",\n    \"ip_pool\": \"marketing\",\n    \"html_content\": \"<html><head><title></title></head><body><p>Check out our spring line!</p></body></html>\",\n    \"plain_content\": \"Check out our spring line!\",\n    \"status\": \"Draft\"\n}"
            }
      '400':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
              "example": "{\n    \"errors\": [\n        {\n            \"field\": \"title\",\n            \"message\": \"title can't be blank\"\n        },\n        {\n            \"field\": \"title\",\n            \"message\": \"title is too long (maximum is 100 characters)\"\n        },\n        {\n            \"field\": \"categories\",\n            \"message\": \"categories exceeds 10 category limit\"\n        },\n        {\n            \"field\": \"html_content\",\n            \"message\": \"html_content exceeds the 1MB limit\"\n        },\n        {\n            \"field\": \"plain_content\",\n            \"message\": \"plain_content exceeds the 1MB limit\"\n        },\n        {\n            \"field\": \"sender_id\",\n            \"message\": \"sender_id does not exist\"\n        },\n        {\n            \"field\": \"sender_id\",\n            \"message\": \"sender_id is not a verified sender identity\"\n        },\n        {\n            \"field\": \"list_ids\",\n            \"message\": \"list_ids do not all exist\"\n        },\n        {\n            \"field\": \"segment_ids\",\n            \"message\": \"segment_ids do not all exist\"\n        },\n        {\n            \"field\": \"ip_pool\",\n            \"message\": \"The ip pool you provided is invalid\"\n        },\n        {\n            \"field\": \"suppression_group_id\",\n            \"message\": \"suppression_group_id does not exist\"\n        },\n        {\n            \"field\": \"unsubscribes\",\n            \"message\": \"Either suppression_group_id or custom_unsubscribe_url may be set/used, but not both. Please remove one before setting the other.\"\n        },\n        {\n            \"field\": null,\n            \"message\": \"The JSON you have submitted cannot be parsed.\"\n        },\n        {\n            \"field\": null,\n            \"message\": \"You've reached your limit of 250 campaigns. Please delete one or more and try again.\"\n        }\n    ]\n}"
            }
        description: |-
          "title": "title can't be blank"
          "title": "title is too long (maximum is 100 characters)"
          "categories": "categories exceeds 10 category limit"
          "html_content": "html_content exceeds the 1MB limit"
          "plain_content": "plain_content exceeds the 1MB limit"
          "sender_id": "sender_id does not exist"
          "sender_id": "sender_id is not a verified sender identity"
          "list_ids": "list_ids do not all exist"
          "segment_ids": "segment_ids do not all exist"
          "ip_pool": "The ip pool you provided is invalid"
          "suppression_group_id": "suppression_group_id does not exist"
          "unsubscribes": "Either suppression_group_id or custom_unsubscribe_url may be set/used, but not both. Please remove one before setting the other."
          "": "The JSON you have submitted cannot be parsed."
          "": "You've reached your limit of 250 campaigns. Please delete one or more and try again."
      '401':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\"\n}"
            }
    securedBy:
      - null
  '/{campaign_id}':
    displayName: campaign_id
    uriParameters:
      campaign_id:
        type: integer
        description: The ID of the campaign that you would like to update.
        displayName: The ID of the campaign that you would like to update.
    get:
      description: |-
        **This endpoint allows you to retrieve a specific campaign.**

        Our Marketing Campaigns API lets you create, manage, send, and schedule campaigns.

        For more information:

        * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"categories\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        },\n        \"custom_unsubscribe_url\": {\n            \"type\": \"string\"\n        },\n        \"html_content\": {\n            \"type\": \"string\"\n        },\n        \"id\": {\n            \"type\": \"integer\"\n        },\n        \"ip_pool\": {\n            \"type\": \"string\"\n        },\n        \"list_ids\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"integer\"\n            }\n        },\n        \"plain_content\": {\n            \"type\": \"string\"\n        },\n        \"segment_ids\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"integer\"\n            }\n        },\n        \"sender_id\": {\n            \"type\": \"integer\"\n        },\n        \"status\": {\n            \"type\": \"string\"\n        },\n        \"subject\": {\n            \"type\": \"string\"\n        },\n        \"suppression_group_id\": {\n            \"type\": \"integer\"\n        },\n        \"title\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                "example": "{\n    \"categories\": [\n        \"spring line\"\n    ],\n    \"custom_unsubscribe_url\": \"\",\n    \"html_content\": \"<html><head><title></title></head><body><p>Check out our spring line!</p></body></html>\",\n    \"id\": 986724,\n    \"ip_pool\": \"marketing\",\n    \"list_ids\": [\n        110\n    ],\n    \"plain_content\": \"Check out our spring line!\",\n    \"segment_ids\": [\n        110\n    ],\n    \"sender_id\": 124451,\n    \"status\": \"Draft\",\n    \"subject\": \"New Products for Spring!\",\n    \"suppression_group_id\": 42,\n    \"title\": \"March Newsletter\"\n}"
              }
        '401':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
              }
        '404':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"not found\"\n        }\n    ]\n}"
              }
          description: '"": "not found"'
      securedBy:
        - null
    /schedules:
      displayName: schedules
      /now:
        displayName: now
        post:
          description: |-
            **This endpoint allows you to immediately send a campaign at the time you make the API call.**

            Normally a POST would have a request body, but since this endpoint is telling us to send a resource that is already created, a request body is not needed.

            For more information:

            * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"null\"\n}"
              }
          responses:
            '201':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"title\": \"Send a Campaign response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n        },\n        \"status\": {\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"id\",\n        \"status\"\n    ]\n}",
                    "example": "{\n    \"id\": 1234,\n    \"status\": \"Scheduled\"\n}"
                  }
            '400':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                    "example": "{\n    \"errors\": [\n        {\n            \"field\": \"subject\",\n            \"message\": \"subject can't be blank\"\n        },\n        {\n            \"field\": \"sender_id\",\n            \"message\": \"sender_id can't be blank\"\n        },\n        {\n            \"field\": \"plain_content\",\n            \"message\": \"plain_content can't be blank, please provide plain text or html content\"\n        },\n        {\n            \"field\": \"list_id\",\n            \"message\": \"You must select at least 1 segment or 1 list to send to.\"\n        },\n        {\n            \"field\": \"unsubscribe_tag\",\n            \"message\": \"An [unsubscribe] tag in both your html and plain content is required to send a campaign.\"\n        },\n        {\n            \"field\": \"suppression_group_id\",\n            \"message\": \"Either a suppression_group_id or custom_unsubscribe_url is required to send a campaign.\"\n        },\n        {\n            \"field\": null,\n            \"message\": \"You do not have enough credits to send this campaign. Upgrade your plan to send more: https://app.sendgrid.com/settings/billing\"\n        }\n    ]\n}"
                  }
              description: |-
                "subject": "subject can't be blank"
                "sender_id": "sender_id can't be blank"
                "plain_content": "plain_content can't be blank, please provide plain text or html content"
                "list_ids": "You must select at least 1 segment or 1 list to send to."
                "unsubscribe_tag": "An [unsubscribe] tag in both your html and plain content is required to send a campaign."
                "suppression_group_id": "Either a suppression_group_id or custom_unsubscribe_url is required to send a campaign."
                "": "You do not have enough credits to send this campaign. Upgrade your plan to send more: https://app.sendgrid.com/settings/billing"
            '401':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                    "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                  }
            '403':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                    "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"You may only send a campaign when it is in draft mode.\"\n        }\n    ]\n}"
                  }
              description: '"": "You may only send a campaign when it is in draft mode."'
            '404':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                    "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"not found\"\n        }\n    ]\n}"
                  }
              description: '"": "not found"'
          securedBy:
            - null
      patch:
        description: |-
          **This endpoint allows to you change the scheduled time and date for a campaign to be sent.**

          For more information:

          * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
        body:
          application/json: |-
            {
              "schema": "{\n    \"title\": \"Update a Scheduled Campaign request\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"send_at\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n        }\n    },\n    \"required\": [\n        \"send_at\"\n    ]\n}",
              "example": "{\n    \"send_at\": 1489451436\n}"
            }
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"title\": \"Update a Scheduled Campaign response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"The campaign ID\"\n        },\n        \"send_at\": {\n            \"type\": \"integer\",\n            \"description\": \"The unix timestamp to send the campaign.\"\n        },\n        \"status\": {\n            \"type\": \"string\",\n            \"description\": \"The status of the schedule.\"\n        }\n    },\n    \"required\": [\n        \"id\",\n        \"send_at\",\n        \"status\"\n    ]\n}"
                }
          '400':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": \"send_at\",\n            \"message\": \"Please choose a future time for sending your campaign.\"\n        },\n        {\n            \"field\": null,\n            \"message\": \"The JSON you have submitted cannot be parsed.\"\n        },\n        {\n            \"field\": null,\n            \"message\": \"You do not have enough credits to send this campaign. Upgrade your plan to send https://app.sendgrid.com/settings/billing\"\n        }\n    ]\n}"
                }
            description: |-
              "": "The JSON you have submitted cannot be parsed."
              "send_at": "Please choose a future time for sending your campaign."
              "":"You do not have enough credits to send this campaign. Upgrade your plan to send more: https://app.sendgrid.com/settings/billing"
          '403':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": \"send_at\",\n            \"message\": \"You cannot update the send_at value of non-scheduled campaign.\"\n        }\n    ]\n}"
                }
            description: '"send_at": "You cannot update the send_at value of non-scheduled campaign."'
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"not found\"\n        }\n    ]\n}"
                }
            description: '"": "not found"'
        securedBy:
          - null
      get:
        description: |-
          **This endpoint allows you to retrieve the date and time that the given campaign has been scheduled to be sent.**

          For more information:

          * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"title\": \"View Scheduled Time of a Campaign response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"send_at\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n        }\n    },\n    \"required\": [\n        \"send_at\"\n    ]\n}",
                  "example": "{\n    \"send_at\": 1490778528\n}"
                }
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"not found\"\n        }\n    ]\n}"
                }
            description: '"": "not found"'
        securedBy:
          - null
      post:
        description: |-
          **This endpoint allows you to schedule a specific date and time for your campaign to be sent.**

          For more information:

          * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
        body:
          application/json: |-
            {
              "schema": "{\n    \"title\": \"Schedule a Campaign request\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"send_at\": {\n            \"type\": \"integer\",\n            \"description\": \"The unix timestamp for the date and time you would like your campaign to be sent out.\"\n        }\n    },\n    \"required\": [\n        \"send_at\"\n    ]\n}",
              "example": "{\n    \"send_at\": 1489771528\n}"
            }
        responses:
          '201':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"title\": \"Schedule a Campaign response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"The campaign ID.\"\n        },\n        \"send_at\": {\n            \"type\": \"integer\",\n            \"description\": \"The date time you scheduled your campaign to be sent.\"\n        },\n        \"status\": {\n            \"type\": \"string\",\n            \"description\": \"The status of your campaign.\",\n            \"enum\": [\n                \"Scheduled\"\n            ]\n        }\n    },\n    \"required\": [\n        \"id\",\n        \"send_at\",\n        \"status\"\n    ]\n}",
                  "example": "{\n    \"id\": 1234,\n    \"send_at\": 1489771528,\n    \"status\": \"Scheduled\"\n}"
                }
          '400':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": \"subject\",\n            \"message\": \"subject can't be blank\"\n        },\n        {\n            \"field\": \"sender_id\",\n            \"message\": \"sender_id can't be blank\"\n        },\n        {\n            \"field\": \"plain_content\",\n            \"message\": \"plain_content can't be blank, please provide plain text or html content\"\n        },\n        {\n            \"field\": \"list_id\",\n            \"message\": \"You must select at least 1 segment or 1 list to send to.\"\n        },\n        {\n            \"field\": \"unsubscribe_tag\",\n            \"message\": \"An [unsubscribe] tag in both your html and plain content is required to send a campaign.\"\n        },\n        {\n            \"field\": \"suppression_group_id\",\n            \"message\": \"Either a suppression_group_id or custom_unsubscribe_url is required to send a campaign.\"\n        },\n        {\n            \"field\": null,\n            \"message\": \"You do not have enough credits to send this campaign. Upgrade your plan to send more: https://app.sendgrid.com/settings/billing\"\n        }\n    ]\n}"
                }
            description: |-
              "subject": "subject can't be blank"
              "sender_id": "sender_id can't be blank"
              "plain_content": "plain_content can't be blank, please provide plain text or html content"
              "list_ids": "You must select at least 1 segment or 1 list to send to."
              "send_at": "Please choose a future time for sending your campaign."
              "unsubscribe_tag": "An [unsubscribe] tag in both your html and plain content is required to send a campaign."
              "suppression_group_id": "Either a suppression_group_id or custom_unsubscribe_url is required to send a campaign."
              "": "The JSON you have submitted cannot be parsed."
              "":"You do not have enough credits to send this campaign. Upgrade your plan to send more: https://app.sendgrid.com/settings/billing"
          '401':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                }
          '403':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"You cannot POST to a campaign that has already sent or scheduled. However you can update a scheduled campaign with a PATCH.\"\n        }\n    ]\n}"
                }
            description: '"": "You cannot POST to a campaign that has already sent or scheduled. However you can update a scheduled campaign with a PATCH."'
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"not found\"\n        }\n    ]\n}"
                }
            description: '"": "not found"'
        securedBy:
          - null
      /test:
        displayName: test
        post:
          description: |-
            **This endpoint allows you to send a test campaign.**

            To send to multiple addresses, use an array for the JSON "to" value ["one@address","two@address"]

            For more information:

            * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"to\": {\n            \"type\": \"string\",\n            \"description\": \"The email address that should receive the test campaign.\"\n        }\n    },\n    \"required\": [\n        \"to\"\n    ]\n}",
                "example": "{\n    \"to\": \"your.email@example.com\"\n}"
              }
          responses:
            '204':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"title\": \"Send a Test Campaign request\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"to\": {\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"to\"\n    ]\n}"
                  }
            '400':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                    "example": "{\n    \"errors\": [\n        {\n            \"field\": \"send_at\",\n            \"message\": \"Please choose a future time for sending your campaign.\"\n        },\n        {\n            \"field\": null,\n            \"message\": \"The JSON you have submitted cannot be parsed.\"\n        },\n        {\n            \"field\": null,\n            \"message\": \"You do not have enough credits to send this campaign. Upgrade your plan to send more: https://app.sendgrid.com/settings/billing\"\n        }\n    ]\n}"
                  }
              description: |-
                "": "The JSON you have submitted cannot be parsed."
                "to": "Please provide an email address to which the test should be sent."
                "to": "You can only send tests to 10 addresses at a time."
                "subject": "Please add a subject to your campaign before sending a test."
                "plain_content": "Plain content and html content can't both be blank. Please set one of these values before sending a test."
                "sender_id": "Please assign a sender identity to your campaign before sending a test."
            '404':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                    "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"not found\"\n        }\n    ]\n}"
                  }
              description: '"": "not found"'
          securedBy:
            - null
      delete:
        description: |-
          **This endpoint allows you to unschedule a campaign that has already been scheduled to be sent.**

          A successful unschedule will return a 204.
          If the specified campaign is in the process of being sent, the only option is to cancel (a different method).

          For more information:

          * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
        responses:
          '204':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"null\"\n}"
                }
          '403':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"This campaign is already In Progress.\"\n        },\n        {\n            \"field\": null,\n            \"message\": \"This campaign is already Sent.\"\n        },\n        {\n            \"field\": null,\n            \"message\": \"This campaign is already Paused.\"\n        },\n        {\n            \"field\": null,\n            \"message\": \"This campaign is already Canceled.\"\n        }\n    ]\n}"
                }
            description: |-
              "": "This campaign is already In Progress."
              "": "This campaign is already Sent."
              "": "This campaign is already Paused."
              "": "This campaign is already Canceled."
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"not found\"\n        }\n    ]\n}"
                }
            description: '"": "not found"'
        securedBy:
          - null
    delete:
      description: |-
        **This endpoint allows you to delete a specific campaign.**

        Our Marketing Campaigns API lets you create, manage, send, and schedule campaigns.

        For more information:

        * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
      responses:
        '204':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"null\"\n}"
              }
        '401':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
              }
        '404':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\"\n}"
              }
          description: '"": "not found"'
      securedBy:
        - null
    patch:
      description: |-
        Update a campaign. This is especially useful if you only set up the campaign using POST /campaigns, but didn't set many of the parameters.

        For more information:

        * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
      body:
        application/json: |-
          {
            "schema": "{\n    \"title\": \"Update a Campaign request\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"title\": {\n            \"type\": \"string\",\n            \"description\": \"The title of the campaign.\"\n        },\n        \"subject\": {\n            \"type\": \"string\",\n            \"description\": \"The subject line for your campaign.\"\n        },\n        \"categories\": {\n            \"type\": \"array\",\n            \"description\": \"The categories you want to tag on this campaign.\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        },\n        \"html_content\": {\n            \"type\": \"string\",\n            \"description\": \"The HTML content of this campaign.\"\n        },\n        \"plain_content\": {\n            \"type\": \"string\",\n            \"description\": \"The plain content of this campaign.\"\n        }\n    },\n    \"required\": [\n        \"title\",\n        \"subject\",\n        \"categories\",\n        \"html_content\",\n        \"plain_content\"\n    ]\n}",
            "example": "{\n    \"title\": \"May Newsletter\",\n    \"subject\": \"New Products for Summer!\",\n    \"categories\": [\n        \"summer line\"\n    ],\n    \"html_content\": \"<html><head><title></title></head><body><p>Check out our summer line!</p></body></html>\",\n    \"plain_content\": \"Check out our summer line!\"\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"campaign_response\"\n}",
                "example": "{\n    \"id\": 986724,\n    \"title\": \"May Newsletter\",\n    \"subject\": \"New Products for Summer!\",\n    \"sender_id\": 124451,\n    \"list_ids\": [\n        110,\n        124\n    ],\n    \"segment_ids\": [\n        110\n    ],\n    \"categories\": [\n        \"summer line\"\n    ],\n    \"suppression_group_id\": 42,\n    \"custom_unsubscribe_url\": \"\",\n    \"ip_pool\": \"marketing\",\n    \"html_content\": \"<html><head><title></title></head><body><p>Check out our summer line!</p></body></html>\",\n    \"plain_content\": \"Check out our summer line!\",\n    \"status\": \"Draft\"\n}"
              }
        '400':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": \"title\",\n            \"message\": \"title can't be blank\"\n        },\n        {\n            \"field\": \"title\",\n            \"message\": \"title is too long (maximum is 100 characters)\"\n        },\n        {\n            \"field\": \"categories\",\n            \"message\": \"categories exceeds 10 category limit\"\n        },\n        {\n            \"field\": \"html_content\",\n            \"message\": \"html_content exceeds the 1MB limit\"\n        },\n        {\n            \"field\": \"plain_content\",\n            \"message\": \"plain_content exceeds the 1MB limit\"\n        },\n        {\n            \"field\": \"sender_id\",\n            \"message\": \"sender_id does not exist\"\n        },\n        {\n            \"field\": \"sender_id\",\n            \"message\": \"sender_id is not a verified sender identity\"\n        },\n        {\n            \"field\": \"list_ids\",\n            \"message\": \"list_ids do not all exist\"\n        },\n        {\n            \"field\": \"segment_ids\",\n            \"message\": \"segment_ids do not all exist\"\n        },\n        {\n            \"field\": \"ip_pool\",\n            \"message\": \"The ip pool you provided is invalid\"\n        },\n        {\n            \"field\": \"suppression_group_id\",\n            \"message\": \"suppression_group_id does not exist\"\n        },\n        {\n            \"field\": \"unsubscribes\",\n            \"message\": \"Either suppression_group_id or custom_unsubscribe_url may be set/used, but not both. Please remove one before setting the other.\"\n        },\n        {\n            \"field\": null,\n            \"message\": \"The JSON you have submitted cannot be parsed.\"\n        }\n    ]\n}"
              }
          description: |-
            "title": "title can't be blank"
            "title": "title is too long (maximum is 100 characters)"
            "categories": "categories exceeds 10 category limit"
            "html_content": "html_content exceeds the 1MB limit"
            "plain_content": "plain_content exceeds the 1MB limit"
            "sender_id": "sender_id does not exist"
            "sender_id": "sender_id is not a verified sender identity"
            "list_ids": "list_ids do not all exist"
            "segment_ids": "segment_ids do not all exist"
            "ip_pool": "The ip pool you provided is invalid"
            "suppression_group_id": "suppression_group_id does not exist"
            "unsubscribes": "Either suppression_group_id or custom_unsubscribe_url may be set/used, but not both. Please remove one before setting the other."
            "": "The JSON you have submitted cannot be parsed."
        '401':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
              }
        '403':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"You may only update a campaign when it is in draft mode.\"\n        }\n    ]\n}"
              }
          description: '"": "You may only update a campaign when it is in draft mode."'
        '404':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"not found\"\n        }\n    ]\n}"
              }
          description: '"": "not found"'
      securedBy:
        - null
  get:
    description: |-
      **This endpoint allows you to retrieve a list of all of your campaigns.**

      Returns campaigns in reverse order they were created (newest first).

      Returns an empty array if no campaigns exist.

      For more information:

      * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
    responses:
      '200':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"result\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"categories\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"custom_unsubscribe_url\": {\n                        \"type\": \"string\"\n                    },\n                    \"html_content\": {\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"type\": \"integer\"\n                    },\n                    \"ip_pool\": {\n                        \"type\": \"string\"\n                    },\n                    \"list_ids\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    \"plain_content\": {\n                        \"type\": \"string\"\n                    },\n                    \"segment_ids\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    \"sender_id\": {\n                        \"type\": \"integer\"\n                    },\n                    \"status\": {\n                        \"type\": \"string\"\n                    },\n                    \"subject\": {\n                        \"type\": \"string\"\n                    },\n                    \"suppression_group_id\": {\n                        \"type\": \"integer\"\n                    },\n                    \"title\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
              "example": "{\n    \"result\": [\n        {\n            \"categories\": [\n                \"spring line\"\n            ],\n            \"custom_unsubscribe_url\": \"\",\n            \"html_content\": \"<html><head><title></title></head><body><p>Check out our spring line!</p></body></html>\",\n            \"id\": 986724,\n            \"ip_pool\": \"marketing\",\n            \"list_ids\": [\n                110\n            ],\n            \"plain_content\": \"Check out our spring line!\",\n            \"segment_ids\": [\n                110\n            ],\n            \"sender_id\": 124451,\n            \"status\": \"Draft\",\n            \"subject\": \"New Products for Spring!\",\n            \"suppression_group_id\": 42,\n            \"title\": \"March Newsletter\"\n        }\n    ]\n}"
            }
    queryParameters:
      limit:
        type: integer
        default: 10
        description: The number of results you would like to receive at a time.
        displayName: The number of results you would like to receive at a time.
      offset:
        type: integer
        description: 'The index of the first campaign to return, where 0 is the first campaign.'
        displayName: 'The index of the first campaign to return, where 0 is the first campaign.'
    securedBy:
      - null
/api_keys:
  displayName: api_keys
  post:
    description: |-
      **This endpoint allows you to create a new random API Key for the user.**

      A JSON request body containing a "name" property is required. If number of maximum keys is reached, HTTP 403 will be returned.

      There is a limit of 100 API Keys on your account.

      The API Keys feature allows customers to be able to generate an API Key credential which can be used for authentication with the SendGrid v3 Web API or the [Mail API Endpoint](https://sendgrid.com/docs/API_Reference/Web_API/mail.html).

      See the [API Key Permissions List](https://sendgrid.com/docs/API_Reference/Web_API_v3/API_Keys/api_key_permissions_list.html) for a list of all available scopes.
    is:
      - onBehalfOfSubuser
    body:
      application/json: |-
        {
          "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name you will use to describe this API Key.\"\n        },\n        \"scopes\": {\n            \"type\": \"array\",\n            \"description\": \"The individual permissions that you are giving to this API Key.\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        },\n        \"sample\": {\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"name\"\n    ]\n}",
          "example": "{\n    \"name\": \"My API Key\",\n    \"scopes\": [\n        \"mail.send\",\n        \"alerts.create\",\n        \"alerts.read\"\n    ],\n    \"sample\": \"data\"\n}"
        }
    responses:
      '201':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"api_key\": {\n            \"type\": \"string\"\n        },\n        \"api_key_id\": {\n            \"type\": \"string\"\n        },\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"scopes\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        }\n    }\n}",
              "example": "{\n    \"api_key\": \"SG.xxxxxxxx.yyyyyyyy\",\n    \"api_key_id\": \"xxxxxxxx\",\n    \"name\": \"My API Key\",\n    \"scopes\": [\n        \"mail.send\",\n        \"alerts.create\",\n        \"alerts.read\"\n    ]\n}"
            }
      '400':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
              "example": "{\n    \"errors\": [\n        {\n            \"field\": \"name\",\n            \"message\": \"missing required argument\"\n        }\n    ]\n}"
            }
      '401':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
              "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
            }
      '403':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
              "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"Cannot create more than 100 API Keys\"\n        }\n    ]\n}"
            }
    securedBy:
      - null
  get:
    description: |-
      **This endpoint allows you to retrieve all API Keys that belong to the authenticated user.**

      The API Keys feature allows customers to be able to generate an API Key credential which can be used for authentication with the SendGrid v3 Web API or the [Mail API Endpoint](https://sendgrid.com/docs/API_Reference/Web_API/mail.html).
    is:
      - onBehalfOfSubuser
    responses:
      '200':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"result\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"api_key_name_id\"\n            }\n        }\n    }\n}",
              "example": "{\n    \"result\": [\n        {\n            \"name\": \"API Key Name\",\n            \"api_key_id\": \"some-apikey-id\"\n        },\n        {\n            \"name\": \"API Key Name 2\",\n            \"api_key_id\": \"another-apikey-id\"\n        }\n    ]\n}"
            }
      '401':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
              "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
            }
    queryParameters:
      limit:
        type: integer
    securedBy:
      - null
  '/{api_key_id}':
    displayName: api_key_id
    uriParameters:
      api_key_id:
        type: string
    patch:
      description: |-
        **This endpoint allows you to update the name of an existing API Key.**

        A JSON request body with a "name" property is required.

        The API Keys feature allows customers to be able to generate an API Key credential which can be used for authentication with the SendGrid v3 Web API or the [Mail API Endpoint](https://sendgrid.com/docs/API_Reference/Web_API/mail.html).

        ## URI Parameters

        | URI Parameter   | Type  | Required?  | Description  |
        |---|---|---|---|
        |api_key_id |string | required | The ID of the API Key you are updating.|
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The new name of the API Key.\"\n        }\n    }\n}",
            "example": "{\n    \"name\": \"A New Hope\"\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"api_key_name_id\"\n}",
                "example": "{\n    \"api_key_id\": \"qfTQ6KG0QBiwWdJ0-pCLCA\",\n    \"name\": \"A New Hope\"\n}"
              }
        '401':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
              }
      securedBy:
        - null
    put:
      description: |-
        **This endpoint allows you to update the name and scopes of a given API key.**

        A JSON request body with a "name" property is required.
        Most provide the list of all the scopes an api key should have.

        The API Keys feature allows customers to be able to generate an API Key credential which can be used for authentication with the SendGrid v3 Web API or the [Mail API Endpoint](https://sendgrid.com/docs/API_Reference/Web_API/mail.html).
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"scopes\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        }\n    }\n}",
            "example": "{\n    \"name\": \"A New Hope\",\n    \"scopes\": [\n        \"user.profile.read\",\n        \"user.profile.update\"\n    ]\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"api_key_name_id_scopes\"\n}",
                "example": "{\n    \"api_key_id\": \"qfTQ6KG0QBiwWdJ0-pCLCA\",\n    \"name\": \"A New Hope\",\n    \"scopes\": [\n        \"user.profile.read\",\n        \"user.profile.update\"\n    ]\n}"
              }
        '400':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"expected JSON request body with 'name' property\"\n        }\n    ]\n}"
              }
          description: Unexpected error in API call. See HTTP response body for details.
        '401':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\"\n}"
              }
        '404':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"unable to find API Key to update\"\n        }\n    ]\n}"
              }
          description: Unexpected error in API call. See HTTP response body for details.
      securedBy:
        - null
    get:
      description: |-
        **This endpoint allows you to retrieve a single api key.**

        If the API Key ID does not exist an HTTP 404 will be returned.
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"result\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"api_key_name_id_scopes\"\n            }\n        }\n    }\n}",
                "example": "{\n    \"result\": [\n        {\n            \"name\": \"API Key Name\",\n            \"api_key_id\": \"some-apikey-id\"\n        },\n        {\n            \"name\": \"API Key Name 2\",\n            \"api_key_id\": \"another-apikey-id\"\n        }\n    ]\n}"
              }
        '401':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
              }
        '404':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"unable to find API Key\"\n        }\n    ]\n}"
              }
          description: Unexpected error in API call. See HTTP response body for details.
      securedBy:
        - null
    delete:
      description: |-
        **This endpoint allows you to revoke an existing API Key**

        Authentications using this API Key will fail after this request is made, with some small propogation delay.If the API Key ID does not exist an HTTP 404 will be returned.

        The API Keys feature allows customers to be able to generate an API Key credential which can be used for authentication with the SendGrid v3 Web API or the [Mail API Endpoint](https://sendgrid.com/docs/API_Reference/Web_API/mail.html).

        ## URI Parameters

        | URI Parameter   | Type  | Required?  | Description  |
        |---|---|---|---|
        |api_key_id |string | required | The ID of the API Key you are deleting.|
      is:
        - onBehalfOfSubuser
      responses:
        '204':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"null\"\n}",
                "example": "null"
              }
        '404':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"unable to find API Key\"\n        }\n    ]\n}"
              }
      securedBy:
        - null
/teammates:
  displayName: teammates
  post:
    description: |-
      This endpoint allows you to send a teammate invitation via email with a predefined set of scopes, or permissions.

      **Note:** A teammate invite will expire after 7 days, but you may resend the invite at any time to reset the expiration date.

      Essentials, [Legacy Lite](https://sendgrid.com/docs/Classroom/Basics/Billing/legacy_lite_plan.html), and Free Trial users may create up to one teammate per account. There are no limits for how many teammates a Pro or higher account may create.
    body:
      application/json: |-
        {
          "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"email\": {\n            \"type\": \"string\",\n            \"description\": \"New teammate's email\",\n            \"minLength\": 5,\n            \"maxLength\": 255,\n            \"pattern\": \"^.*@.*\\\\..*\"\n        },\n        \"scopes\": {\n            \"type\": \"array\",\n            \"description\": \"Set to specify list of scopes that teammate should have. Should be empty if teammate is an admin.\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        },\n        \"is_admin\": {\n            \"type\": \"boolean\",\n            \"default\": false,\n            \"description\": \"Set to true if teammate should be an admin user\"\n        }\n    },\n    \"required\": [\n        \"email\",\n        \"scopes\",\n        \"is_admin\"\n    ]\n}",
          "example": "{\n    \"email\": \"teammate1@example.com\",\n    \"scopes\": [\n        \"user.profile.read\",\n        \"user.profile.update\"\n    ],\n    \"is_admin\": false\n}"
        }
    responses:
      '201':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"token\": {\n            \"type\": \"string\",\n            \"description\": \"Token to identify invite\"\n        },\n        \"email\": {\n            \"type\": \"string\",\n            \"description\": \"Teammate's email address\"\n        },\n        \"scopes\": {\n            \"type\": \"array\",\n            \"description\": \"Initial set of permissions to give to teammate if they accept the invite\",\n            \"items\": {}\n        },\n        \"is_admin\": {\n            \"type\": \"boolean\",\n            \"description\": \"Set to true if teammate should have admin privileges\"\n        }\n    }\n}",
              "example": "{\n    \"email\": \"teammate1@example.com\",\n    \"scopes\": [\n        \"user.profile.read\",\n        \"user.profile.update\"\n    ],\n    \"is_admin\": false\n}"
            }
      '400':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\"\n                    },\n                    \"field\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}"
            }
    securedBy:
      - null
  get:
    description: |-
      This endpoint allows you to retrieve a list of all current teammates.

      **Note:** The Response Header will include pagination info. For example:

      link: ```<https://api.sendgrid.com/v3/teammates?limit=10&offset=0>; rel="first"; title="1", <https://api.sendgrid.com/v3/teammates?limit=10&offset=10>; rel="last"; title="2", <https://api.sendgrid.com/v3/teammates?limit=10&offset=0>; rel="prev"; title="1"```
    responses:
      '200':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"result\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"username\": {\n                        \"type\": \"string\",\n                        \"description\": \"Teammate's username\"\n                    },\n                    \"email\": {\n                        \"type\": \"string\",\n                        \"description\": \"Teammate's email\"\n                    },\n                    \"first_name\": {\n                        \"type\": \"string\",\n                        \"description\": \"Teammate's first name\"\n                    },\n                    \"last_name\": {\n                        \"type\": \"string\",\n                        \"description\": \"Teammate's last name\"\n                    },\n                    \"user_type\": {\n                        \"type\": \"string\",\n                        \"description\": \"Indicate the type of user: owner user, teammate admin user, or normal teammate\",\n                        \"enum\": [\n                            \"admin\",\n                            \"owner\",\n                            \"teammate\"\n                        ]\n                    },\n                    \"is_admin\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"Set to true if teammate has admin privileges\"\n                    },\n                    \"phone\": {\n                        \"type\": \"string\",\n                        \"description\": \"(optional) Teammate's phone number\"\n                    },\n                    \"website\": {\n                        \"type\": \"string\",\n                        \"description\": \"(optional) Teammate's website\"\n                    },\n                    \"address\": {\n                        \"type\": \"string\",\n                        \"description\": \"(optional) Teammate's address\"\n                    },\n                    \"address2\": {\n                        \"type\": \"string\",\n                        \"description\": \"(optional) Teammate's address\"\n                    },\n                    \"city\": {\n                        \"type\": \"string\",\n                        \"description\": \"(optional) Teammate's city\"\n                    },\n                    \"state\": {\n                        \"type\": \"string\",\n                        \"description\": \"(optional) Teammate's state\"\n                    },\n                    \"zip\": {\n                        \"type\": \"string\",\n                        \"description\": \"(optional) Teammate's zip\"\n                    },\n                    \"country\": {\n                        \"type\": \"string\",\n                        \"description\": \"(optional) Teammate's country\"\n                    }\n                }\n            }\n        }\n    }\n}",
              "example": "{\n    \"results\": [\n        {\n            \"username\": \"teammate1\",\n            \"email\": \"teammate1@example.com\",\n            \"first_name\": \"Jane\",\n            \"last_name\": \"Doe\",\n            \"user_type\": \"owner\",\n            \"is_admin\": true,\n            \"phone\": \"123-345-3453\",\n            \"website\": \"www.example.com\",\n            \"company\": \"ACME Inc.\",\n            \"address\": \"123 Acme St\",\n            \"address2\": \"\",\n            \"city\": \"City\",\n            \"state\": \"CA\",\n            \"country\": \"USA\",\n            \"zip\": \"12345\"\n        },\n        {\n            \"username\": \"teammate2\",\n            \"email\": \"teammate2@example.com\",\n            \"first_name\": \"John\",\n            \"last_name\": \"Doe\",\n            \"user_type\": \"teammate\",\n            \"is_admin\": false,\n            \"phone\": \"123-345-3453\",\n            \"website\": \"www.example.com\",\n            \"company\": \"ACME Inc.\",\n            \"address\": \"123 Acme St\",\n            \"address2\": \"\",\n            \"city\": \"City\",\n            \"state\": \"CA\",\n            \"country\": \"USA\",\n            \"zip\": \"12345\"\n        },\n        {\n            \"username\": \"teammate3\",\n            \"email\": \"teammate3@example.com\",\n            \"first_name\": \"Steve\",\n            \"last_name\": \"Doe\",\n            \"user_type\": \"admin\",\n            \"is_admin\": true,\n            \"phone\": \"123-345-3453\",\n            \"website\": \"www.example.com\",\n            \"company\": \"ACME Inc.\",\n            \"address\": \"123 Acme St\",\n            \"address2\": \"\",\n            \"city\": \"City\",\n            \"state\": \"CA\",\n            \"country\": \"USA\",\n            \"zip\": \"12345\"\n        }\n    ]\n}"
            }
    queryParameters:
      limit:
        description: Number of items to return
        type: integer
        default: 500
        maximum: 500
        displayName: Number of items to return
      offset:
        description: Paging offset
        type: integer
        displayName: Paging offset
    securedBy:
      - null
  '/{username}':
    displayName: username
    uriParameters:
      username:
        type: string
        description: The username of the teammate that you want to update.
        displayName: The username of the teammate that you want to update.
    delete:
      description: |-
        This endpoint allows you to delete a teammate.

        **Only the parent user or an admin teammate can delete another teammate.**
      responses:
        '204':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\"\n                    },\n                    \"field\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}"
              }
        '404':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\"\n                    },\n                    \"field\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"message\": \"username not found\",\n            \"field\": \"username\"\n        }\n    ]\n}"
              }
      securedBy:
        - null
    get:
      description: This endpoint allows you to retrieve a specific teammate by username.
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"username\": {\n            \"type\": \"string\",\n            \"description\": \"Teammate's username\"\n        },\n        \"first_name\": {\n            \"type\": \"string\",\n            \"description\": \"Teammate's first name\"\n        },\n        \"last_name\": {\n            \"type\": \"string\",\n            \"description\": \"Teammate's last name\"\n        },\n        \"email\": {\n            \"type\": \"string\",\n            \"description\": \"Teammate's email\"\n        },\n        \"scopes\": {\n            \"type\": \"array\",\n            \"description\": \"Scopes associated to teammate\",\n            \"items\": {}\n        },\n        \"user_type\": {\n            \"type\": \"string\",\n            \"description\": \"Indicate the type of user: account owner, teammate admin user, or normal teammate\",\n            \"enum\": [\n                \"admin\",\n                \"owner\",\n                \"teammate\"\n            ]\n        },\n        \"is_admin\": {\n            \"type\": \"boolean\",\n            \"description\": \"Set to true if teammate has admin privileges\"\n        },\n        \"phone\": {\n            \"type\": \"string\",\n            \"description\": \"(optional) Teammate's phone number\"\n        },\n        \"website\": {\n            \"type\": \"string\",\n            \"description\": \"(optional) Teammate's website\"\n        },\n        \"address\": {\n            \"type\": \"string\",\n            \"description\": \"(optional) Teammate's address\"\n        },\n        \"address2\": {\n            \"type\": \"string\",\n            \"description\": \"(optional) Teammate's address\"\n        },\n        \"city\": {\n            \"type\": \"string\",\n            \"description\": \"(optional) Teammate's city\"\n        },\n        \"state\": {\n            \"type\": \"string\",\n            \"description\": \"(optional) Teammate's state\"\n        },\n        \"zip\": {\n            \"type\": \"string\",\n            \"description\": \"(optional) Teammate's zip\"\n        },\n        \"country\": {\n            \"type\": \"string\",\n            \"description\": \"(optional) Teammate's country\"\n        }\n    }\n}",
                "example": "{\n    \"username\": \"teammate1\",\n    \"first_name\": \"Jane\",\n    \"last_name\": \"Doe\",\n    \"email\": \"teammate1@example.com\",\n    \"scopes\": [\n        \"user.profile.read\",\n        \"user.profile.update\",\n        \"...\"\n    ],\n    \"user_type\": \"admin\",\n    \"is_admin\": true,\n    \"phone\": \"123-345-3453\",\n    \"website\": \"www.example.com\",\n    \"company\": \"ACME Inc.\",\n    \"address\": \"123 Acme St\",\n    \"address2\": \"\",\n    \"city\": \"City\",\n    \"state\": \"CA\",\n    \"country\": \"USA\",\n    \"zip\": \"12345\"\n}"
              }
      securedBy:
        - null
    patch:
      description: |-
        This endpoint allows you to update a teammate’s permissions.

        To turn a teammate into an admin, the request body should contain an `is_admin` set to `true`. Otherwise, set `is_admin` to `false` and pass in all the scopes that a teammate should have.

        **Only the parent user or other admin teammates can update another teammate’s permissions.**

        **Admin users can only update permissions.**
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"scopes\": {\n            \"type\": \"array\",\n            \"description\": \"Provide list of scopes that should be given to teammate. If specifying list of scopes, is_admin should be set to False.\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        },\n        \"is_admin\": {\n            \"type\": \"boolean\",\n            \"description\": \"Set to True if this teammate should be promoted to an admin user. If True, scopes should be an empty array.\"\n        }\n    },\n    \"required\": [\n        \"scopes\",\n        \"is_admin\"\n    ]\n}",
            "example": "{\n    \"scopes\": [\n        \"user.profile.read\",\n        \"user.profile.edit\"\n    ],\n    \"is_admin\": false\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"username\": {\n            \"type\": \"string\",\n            \"description\": \"Teammate's username\"\n        },\n        \"first_name\": {\n            \"type\": \"string\",\n            \"description\": \"Teammate's first name\"\n        },\n        \"last_name\": {\n            \"type\": \"string\",\n            \"description\": \"Teammate's last name\"\n        },\n        \"email\": {\n            \"type\": \"string\",\n            \"description\": \"Teammate's email address\"\n        },\n        \"scopes\": {\n            \"type\": \"array\",\n            \"description\": \"Scopes given to teammate\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        },\n        \"user_type\": {\n            \"type\": \"string\",\n            \"description\": \"Indicate the type of user: owner user, teammate admin user, or normal teammate\",\n            \"enum\": [\n                \"admin\",\n                \"owner\",\n                \"teammate\"\n            ]\n        },\n        \"is_admin\": {\n            \"type\": \"boolean\",\n            \"description\": \"Set to true if teammate has admin priveleges\"\n        },\n        \"phone\": {\n            \"type\": \"string\",\n            \"description\": \"(optional) Teammate's phone number\"\n        },\n        \"website\": {\n            \"type\": \"string\",\n            \"description\": \"(optional) Teammate's website\"\n        },\n        \"address\": {\n            \"type\": \"string\",\n            \"description\": \"(optional) Teammate's address\"\n        },\n        \"address2\": {\n            \"type\": \"string\",\n            \"description\": \"(optional) Teammate's address\"\n        },\n        \"city\": {\n            \"type\": \"string\",\n            \"description\": \"(optional) Teammate's city\"\n        },\n        \"state\": {\n            \"type\": \"string\",\n            \"description\": \"(optional) Teammate's state\"\n        },\n        \"zip\": {\n            \"type\": \"string\",\n            \"description\": \"(optional) Teammate's zip\"\n        },\n        \"country\": {\n            \"type\": \"string\",\n            \"description\": \"(optional) Teammate's country\"\n        }\n    }\n}",
                "example": "{\n    \"username\": \"teammate1\",\n    \"first_name\": \"Jane\",\n    \"last_name\": \"Doe\",\n    \"email\": \"teammate1@example.com\",\n    \"scopes\": [\n        \"user.profile.read\",\n        \"user.profile.edit\"\n    ],\n    \"user_type\": \"teammate\",\n    \"is_admin\": false,\n    \"phone\": \"123-345-3453\",\n    \"website\": \"www.example.com\",\n    \"company\": \"ACME Inc.\",\n    \"address\": \"123 Acme St\",\n    \"address2\": \"\",\n    \"city\": \"City\",\n    \"state\": \"CA\",\n    \"country\": \"USA\",\n    \"zip\": \"12345\"\n}"
              }
        '400':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\"\n                    },\n                    \"field\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"message\": \"one or more of given scopes are invalid\",\n            \"field\": \"scopes\"\n        }\n    ]\n}"
              }
        '404':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\"\n                    },\n                    \"field\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"message\": \"username not found\",\n            \"field\": \"username\"\n        }\n    ]\n}"
              }
      securedBy:
        - null
  /pending:
    displayName: pending
    get:
      description: |-
        This endpoint allows you to retrieve a list of all pending teammate invitations.

        **Note:** Each teammate invitation is valid for 7 days. Users may resend the invite to refresh the expiration date.
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"result\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"email\": {\n                        \"type\": \"string\",\n                        \"description\": \"Email address teammate invite will be sent to\"\n                    },\n                    \"scopes\": {\n                        \"type\": \"array\",\n                        \"description\": \"List of permissions to give teammate if they accept\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"is_admin\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"Set to true to indicate teammate should have the same set of permissions as parent user\"\n                    },\n                    \"token\": {\n                        \"type\": \"string\",\n                        \"description\": \"Invitation token used to identify user\"\n                    },\n                    \"expiration_date\": {\n                        \"type\": \"integer\",\n                        \"description\": \"timestamp indicates when invite will expire. Expiration is 7 days after invite creation\"\n                    }\n                }\n            }\n        }\n    }\n}",
                "example": "{\n    \"result\": [\n        {\n            \"email\": \"user1@example.com\",\n            \"scopes\": [\n                \"user.profile.read\",\n                \"user.profile.edit\"\n            ],\n            \"is_admin\": false,\n            \"pending_id\": \"abcd123abc\",\n            \"expiration_date\": 1456424263\n        },\n        {\n            \"email\": \"user2@example.com\",\n            \"scopes\": [],\n            \"is_admin\": true,\n            \"pending_id\": \"bcde234bcd\",\n            \"expiration_date\": 1456424263\n        }\n    ]\n}"
              }
      securedBy:
        - null
    '/{token}':
      displayName: token
      /resend:
        displayName: resend
        post:
          description: |-
            This endpoint allows you to resend a teammate invite.

            **Note:** Teammate invitations will expire after 7 days. Resending an invite will reset the expiration date.
          body: {}
          responses:
            '200':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"token\": {\n            \"type\": \"string\",\n            \"description\": \"ID to identify invite\"\n        },\n        \"email\": {\n            \"type\": \"string\",\n            \"description\": \"Teammate's email address\"\n        },\n        \"scopes\": {\n            \"type\": \"array\",\n            \"description\": \"Initial set of permissions to give to teammate if they accept the invite\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        },\n        \"is_admin\": {\n            \"type\": \"boolean\",\n            \"description\": \"Set to true if teammate should have admin privileges\"\n        }\n    }\n}",
                    "example": "{\n    \"pending_id\": \"abc123abc\",\n    \"email\": \"teammate1@example.com\",\n    \"scopes\": [\n        \"user.profile.read\",\n        \"user.profile.update\"\n    ],\n    \"is_admin\": false\n}"
                  }
            '404':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\"\n                    },\n                    \"field\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
                    "example": "{\n    \"errors\": [\n        {\n            \"message\": \"invalid pending key\",\n            \"field\": \"pending_key\"\n        }\n    ]\n}"
                  }
          securedBy:
            - null
      uriParameters:
        token:
          type: string
          description: The token for the invite you want to delete.
          displayName: The token for the invite you want to delete.
      delete:
        description: This endpoint allows you to delete a pending teammate invite.
        responses:
          '204':
            body:
              application/json: '{}'
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\"\n                    },\n                    \"field\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}"
                }
        securedBy:
          - null
/scopes:
  displayName: scopes
  /requests:
    displayName: requests
    get:
      description: |-
        This endpoint allows you to retrieve a list of all recent access requests.

        **Note:** The Response Header's 'link' parameter will include pagination info. For example:

        link: ```<https://api.sendgrid.com/v3/scopes/requests?limit=10&offset=0>; rel="first"; title="1", <https://api.sendgrid.com/v3/scopes/requests?limit=10&offset=10>; rel="last"; title="2", <https://api.sendgrid.com/v3/scopes/requests?limit=10&offset=0>; rel="prev"; title="1"```
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"id\": {\n                \"type\": \"integer\",\n                \"description\": \"Request ID\"\n            },\n            \"scope_group_name\": {\n                \"type\": \"string\",\n                \"description\": \"Name of group of scopes associated to page teammate is requesting access to\"\n            },\n            \"username\": {\n                \"type\": \"string\",\n                \"description\": \"Teammate's username\"\n            },\n            \"email\": {\n                \"type\": \"string\",\n                \"description\": \"Teammate's email\"\n            },\n            \"first_name\": {\n                \"type\": \"string\",\n                \"description\": \"Teammate's first name\"\n            },\n            \"last_name\": {\n                \"type\": \"string\",\n                \"description\": \"Teammate's last name\"\n            }\n        }\n    }\n}",
                "example": "[\n    {\n        \"id\": 1,\n        \"scope_group_name\": \"Mail Settings\",\n        \"username\": \"teammate1\",\n        \"email\": \"teammate1@example.com\",\n        \"first_name\": \"Teammate\",\n        \"last_name\": \"One\"\n    },\n    {\n        \"id\": 2,\n        \"scope_group_name\": \"Stats\",\n        \"username\": \"teammate2\",\n        \"email\": \"teammate2@example.com\",\n        \"first_name\": \"Teammate\",\n        \"last_name\": \"Two\"\n    }\n]"
              }
      queryParameters:
        limit:
          description: Optional field to limit the number of results returned.
          type: integer
          default: 50
          displayName: Optional field to limit the number of results returned.
        offset:
          description: Optional beginning point in the list to retrieve from.
          type: integer
          displayName: Optional beginning point in the list to retrieve from.
      securedBy:
        - null
    '/{request_id}':
      displayName: request_id
      uriParameters:
        request_id:
          type: string
          description: The ID of the request that you want to deny.
          displayName: The ID of the request that you want to deny.
      delete:
        description: |-
          This endpoint allows you to deny an attempt to access your account.

          **Note:** Only teammate admins may delete a teammate's access request.
        responses:
          '204':
            body:
              application/json: '{}'
          '401':
            body:
              application/json: '{}'
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\"\n                    },\n                    \"field\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"message\": \"Cannot find request\",\n            \"field\": \"request_id\"\n        }\n    ]\n}"
                }
        securedBy:
          - null
      /approve:
        displayName: approve
        patch:
          description: |-
            This endpoint allows you to approve an access attempt.

            **Note:** Only teammate admins may approve another teammate’s access request.
          body: {}
          responses:
            '200':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"scope_group_name\": {\n            \"type\": \"string\",\n            \"description\": \"name of feature teammate will be given access to\"\n        }\n    }\n}",
                    "example": "{\n    \"scope_group_name\": \"Stats\"\n}"
                  }
            '401':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"object\"\n}"
                  }
            '404':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\"\n                    },\n                    \"field\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}"
                  }
          securedBy:
            - null
  get:
    description: |-
      **This endpoint returns a list of all scopes that this user has access to.**

      API Keys can be used to authenticate the use of [SendGrid’s v3 Web API](https://sendgrid.com/docs/API_Reference/Web_API_v3/index.html), or the [Mail API Endpoint](https://sendgrid.com/docs/API_Reference/Web_API/mail.html). API Keys may be assigned certain permissions, or scopes, that limit which API endpoints they are able to access. For a more detailed explanation of how you can use API Key permissios, please visit our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/api_keys.html#-API-Key-Permissions) or [Classroom](https://sendgrid.com/docs/Classroom/Basics/API/api_key_permissions.html).
    is:
      - onBehalfOfSubuser
    responses:
      '200':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"scopes\": {\n            \"type\": \"array\",\n            \"description\": \"The list of scopes for which this user has access.\",\n            \"uniqueItems\": true,\n            \"items\": {\n                \"type\": \"string\"\n            }\n        }\n    },\n    \"required\": [\n        \"scopes\"\n    ]\n}",
              "example": "{\n    \"scopes\": [\n        \"mail.send\",\n        \"alerts.create\",\n        \"alerts.read\"\n    ]\n}"
            }
      '401':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"description\": \"This 401 response indicates that the user making the call doesn't have the authorization to view the list of scopes.\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"field\": {\n                        \"type\": \"null\",\n                        \"description\": \"This empty field is returned instead of the list of scopes if the user making the call doesn't have the authorization required.\"\n                    },\n                    \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"Explains why the scopes cannot be returned.\"\n                    }\n                },\n                \"required\": [\n                    \"message\"\n                ]\n            }\n        }\n    },\n    \"required\": [\n        \"errors\"\n    ]\n}",
              "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
            }
    securedBy:
      - null
/categories:
  displayName: categories
  /stats:
    displayName: stats
    get:
      description: |-
        **This endpoint allows you to retrieve all of your email statistics for each of your categories.**

        If you do not define any query parameters, this endpoint will return a sum for each category in groups of 10.

        Categories allow you to group your emails together according to broad topics that you define. For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/categories.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"category_stats\"\n    }\n}",
                "example": "[\n    {\n        \"date\": \"2015-10-01\",\n        \"stats\": [\n            {\n                \"type\": \"category\",\n                \"name\": \"docs\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounce_drops\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"invalid_emails\": 0,\n                    \"opens\": 0,\n                    \"processed\": 0,\n                    \"requests\": 0,\n                    \"spam_report_drops\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0,\n                    \"unsubscribe_drops\": 0,\n                    \"unsubscribes\": 0\n                }\n            },\n            {\n                \"type\": \"category\",\n                \"name\": \"mattscategory\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounce_drops\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"invalid_emails\": 0,\n                    \"opens\": 0,\n                    \"processed\": 0,\n                    \"requests\": 0,\n                    \"spam_report_drops\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0,\n                    \"unsubscribe_drops\": 0,\n                    \"unsubscribes\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-01\",\n        \"stats\": [\n            {\n                \"type\": \"category\",\n                \"name\": \"docs\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounce_drops\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"invalid_emails\": 0,\n                    \"opens\": 0,\n                    \"processed\": 0,\n                    \"requests\": 0,\n                    \"spam_report_drops\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0,\n                    \"unsubscribe_drops\": 0,\n                    \"unsubscribes\": 0\n                }\n            },\n            {\n                \"type\": \"category\",\n                \"name\": \"mattscategory\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounce_drops\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"invalid_emails\": 0,\n                    \"opens\": 0,\n                    \"processed\": 0,\n                    \"requests\": 0,\n                    \"spam_report_drops\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0,\n                    \"unsubscribe_drops\": 0,\n                    \"unsubscribes\": 0\n                }\n            }\n        ]\n    }\n]"
              }
      queryParameters:
        start_date:
          type: string
          description: The starting date of the statistics to retrieve. Must follow format YYYY-MM-DD
          displayName: The starting date of the statistics to retrieve. Must follow format YYYY-MM-DD
        end_date:
          type: string
          description: The end date of the statistics to retrieve. Defaults to today. Must follow format YYYY-MM-DD.
          displayName: The end date of the statistics to retrieve. Defaults to today. Must follow format YYYY-MM-DD.
        categories:
          type: string
          description: The individual categories that you want to retrieve statistics for. You may include up to 10 different categories.
          displayName: The individual categories that you want to retrieve statistics for. You may include up to 10 different categories.
        limit:
          type: integer
          default: 500
          description: The number of results to include.
          maximum: 500
          displayName: The number of results to include.
        offset:
          type: integer
          description: The number of results to skip.
          displayName: The number of results to skip.
        aggregated_by:
          type: string
          description: 'How to group the statistics. Must be either "day", "week", or "month".'
          enum:
            - day
            - week
            - month
          displayName: 'How to group the statistics. Must be either "day", "week", or "month".'
      securedBy:
        - null
    /sums:
      displayName: sums
      get:
        description: |-
          **This endpoint allows you to retrieve the total sum of each email statistic for every category over the given date range.**

          If you do not define any query parameters, this endpoint will return a sum for each category in groups of 10.

          Categories allow you to group your emails together according to broad topics that you define. For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/categories.html).
        is:
          - onBehalfOfSubuser
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"category_stats\"\n}",
                  "example": "{\n    \"date\": \"2015-01-01\",\n    \"stats\": [\n        {\n            \"metrics\": {\n                \"blocks\": 0,\n                \"bounce_drops\": 0,\n                \"bounces\": 0,\n                \"clicks\": 20,\n                \"deferred\": 0,\n                \"delivered\": 20,\n                \"invalid_emails\": 0,\n                \"opens\": 20,\n                \"processed\": 0,\n                \"requests\": 20,\n                \"spam_report_drops\": 0,\n                \"spam_reports\": 0,\n                \"unique_clicks\": 20,\n                \"unique_opens\": 20,\n                \"unsubscribe_drops\": 0,\n                \"unsubscribes\": 20\n            },\n            \"name\": \"cat1\",\n            \"type\": \"category\"\n        },\n        {\n            \"metrics\": {\n                \"blocks\": 1,\n                \"bounce_drops\": 0,\n                \"bounces\": 0,\n                \"clicks\": 19,\n                \"deferred\": 0,\n                \"delivered\": 19,\n                \"invalid_emails\": 0,\n                \"opens\": 19,\n                \"processed\": 0,\n                \"requests\": 20,\n                \"spam_report_drops\": 0,\n                \"spam_reports\": 0,\n                \"unique_clicks\": 19,\n                \"unique_opens\": 19,\n                \"unsubscribe_drops\": 0,\n                \"unsubscribes\": 19\n            },\n            \"name\": \"cat2\",\n            \"type\": \"category\"\n        },\n        {\n            \"metrics\": {\n                \"blocks\": 0,\n                \"bounce_drops\": 0,\n                \"bounces\": 0,\n                \"clicks\": 5,\n                \"deferred\": 0,\n                \"delivered\": 5,\n                \"invalid_emails\": 0,\n                \"opens\": 5,\n                \"processed\": 0,\n                \"requests\": 5,\n                \"spam_report_drops\": 0,\n                \"spam_reports\": 0,\n                \"unique_clicks\": 5,\n                \"unique_opens\": 5,\n                \"unsubscribe_drops\": 0,\n                \"unsubscribes\": 5\n            },\n            \"name\": \"cat3\",\n            \"type\": \"category\"\n        },\n        {\n            \"metrics\": {\n                \"blocks\": 0,\n                \"bounce_drops\": 0,\n                \"bounces\": 0,\n                \"clicks\": 6,\n                \"deferred\": 0,\n                \"delivered\": 5,\n                \"invalid_emails\": 0,\n                \"opens\": 6,\n                \"processed\": 0,\n                \"requests\": 5,\n                \"spam_report_drops\": 0,\n                \"spam_reports\": 0,\n                \"unique_clicks\": 5,\n                \"unique_opens\": 5,\n                \"unsubscribe_drops\": 0,\n                \"unsubscribes\": 6\n            },\n            \"name\": \"cat4\",\n            \"type\": \"category\"\n        },\n        {\n            \"metrics\": {\n                \"blocks\": 10,\n                \"bounce_drops\": 0,\n                \"bounces\": 0,\n                \"clicks\": 0,\n                \"deferred\": 0,\n                \"delivered\": 0,\n                \"invalid_emails\": 0,\n                \"opens\": 0,\n                \"processed\": 0,\n                \"requests\": 10,\n                \"spam_report_drops\": 0,\n                \"spam_reports\": 0,\n                \"unique_clicks\": 0,\n                \"unique_opens\": 0,\n                \"unsubscribe_drops\": 0,\n                \"unsubscribes\": 0\n            },\n            \"name\": \"cat5\",\n            \"type\": \"category\"\n        }\n    ]\n}"
                }
        queryParameters:
          sort_by_metric:
            type: string
            default: delivered
            description: The metric that you want to sort by.  Must be a single metric.
            displayName: The metric that you want to sort by.  Must be a single metric.
          sort_by_direction:
            type: string
            default: desc
            description: The direction you want to sort.
            enum:
              - desc
              - asc
            displayName: The direction you want to sort.
          start_date:
            type: string
            description: The starting date of the statistics to retrieve. Must follow format YYYY-MM-DD.
            displayName: The starting date of the statistics to retrieve. Must follow format YYYY-MM-DD.
          end_date:
            type: string
            description: The end date of the statistics to retrieve. Defaults to today. Must follow format YYYY-MM-DD.
            displayName: The end date of the statistics to retrieve. Defaults to today. Must follow format YYYY-MM-DD.
          limit:
            type: integer
            default: 5
            description: Limits the number of results returned.
            displayName: Limits the number of results returned.
          offset:
            type: integer
            description: The point in the list to begin retrieving results.
            displayName: The point in the list to begin retrieving results.
          aggregated_by:
            type: string
            description: 'How to group the statistics. Must be either "day", "week", or "month".'
            enum:
              - day
              - week
              - month
            displayName: 'How to group the statistics. Must be either "day", "week", or "month".'
        securedBy:
          - null
  get:
    description: |-
      **This endpoint allows you to retrieve a list of all of your categories.**

      Categories can help organize your email analytics by enabling you to “tag” emails by type or broad topic. You can define your own custom categories. For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/categories.html).
    is:
      - onBehalfOfSubuser
    responses:
      '200':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"category\": {\n                \"type\": \"string\",\n                \"description\": \"A category used to group emails by broad topic.\"\n            }\n        },\n        \"required\": [\n            \"category\"\n        ]\n    }\n}",
              "example": "[\n    {\n        \"category\": \"category 1\"\n    },\n    {\n        \"category\": \"category 2\"\n    }\n]"
            }
      '400':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"description\": \"The error returned.\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"field\": {\n                        \"type\": \"string\"\n                    },\n                    \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"A message explaining why your categories could not be retrieved.\"\n                    }\n                },\n                \"required\": [\n                    \"field\",\n                    \"message\"\n                ]\n            }\n        }\n    }\n}",
              "example": "{\n    \"errors\": [\n        {\n            \"field\": \"sort_by\",\n            \"message\": \"invalid sort value\"\n        }\n    ]\n}"
            }
    queryParameters:
      limit:
        type: integer
        default: 50
        description: The number of categories to display per page.
        displayName: The number of categories to display per page.
      category:
        type: string
        description: Allows you to perform a prefix search on this particular category.
        displayName: Allows you to perform a prefix search on this particular category.
      offset:
        type: integer
        description: The point in the list that you would like to begin displaying results.
        displayName: The point in the list that you would like to begin displaying results.
    securedBy:
      - null
/partner_settings:
  displayName: partner_settings
  get:
    description: |-
      **This endpoint allows you to retrieve a list of all partner settings that you can enable.**

      Our partner settings allow you to integrate your SendGrid account with our partners to increase your SendGrid experience and functionality. For more information about our partners, and how you can begin integrating with them, please visit our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/partners.html).
    responses:
      '200':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"result\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"title\": {\n                        \"type\": \"string\",\n                        \"description\": \"The title of the partner.\"\n                    },\n                    \"enabled\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"Indicates if this partner setting has been enabled.\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the partner setting.\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\",\n                        \"description\": \"A description of this partner setting.\"\n                    }\n                },\n                \"required\": [\n                    \"title\",\n                    \"enabled\",\n                    \"name\",\n                    \"description\"\n                ]\n            }\n        }\n    }\n}",
              "example": "{\n    \"result\": [\n        {\n            \"title\": \"Partner title\",\n            \"enabled\": true,\n            \"name\": \"partner_name\",\n            \"description\": \"A description of a partner.\"\n        }\n    ]\n}"
            }
    queryParameters:
      limit:
        type: integer
        description: The number of settings to return per page.
        displayName: The number of settings to return per page.
      offset:
        type: integer
        description: The paging offset.
        displayName: The paging offset.
    securedBy:
      - null
  /new_relic:
    displayName: new_relic
    get:
      description: |-
        **This endpoint allows you to retrieve your current New Relic partner settings.**

        Our partner settings allow you to integrate your SendGrid account with our partners to increase your SendGrid experience and functionality. For more information about our partners, and how you can begin integrating with them, please visit our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/partners.html).

        By integrating with New Relic, you can send your SendGrid email statistics to your New Relic Dashboard. If you enable this setting, your stats will be sent to New Relic every 5 minutes. You will need your New Relic License Key to enable this setting. For more information, please see our [Classroom](https://sendgrid.com/docs/Classroom/Track/Collecting_Data/new_relic.html).
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"partner_settings_new_relic\"\n}",
                "example": "{\n    \"enable_subuser_statistics\": false,\n    \"enabled\": true,\n    \"license_key\": \"\"\n}"
              }
      securedBy:
        - null
    patch:
      description: |-
        **This endpoint allows you to update or change your New Relic partner settings.**

        Our partner settings allow you to integrate your SendGrid account with our partners to increase your SendGrid experience and functionality. For more information about our partners, and how you can begin integrating with them, please visit our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/partners.html).

        By integrating with New Relic, you can send your SendGrid email statistics to your New Relic Dashboard. If you enable this setting, your stats will be sent to New Relic every 5 minutes. You will need your New Relic License Key to enable this setting. For more information, please see our [Classroom](https://sendgrid.com/docs/Classroom/Track/Collecting_Data/new_relic.html).
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"license_key\": {\n            \"type\": \"string\",\n            \"description\": \"The license key for your New Relic account.\"\n        },\n        \"enabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if this partner setting is enabled.\"\n        },\n        \"enable_subuser_statistics\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if your subuser statistics will be sent to your New Relic Dashboard.\"\n        }\n    }\n}",
            "example": "{\n    \"license_key\": \"\",\n    \"enabled\": true,\n    \"enable_subuser_statistics\": true\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"partner_settings_new_relic\"\n}",
                "example": "{\n    \"enable_subuser_statistics\": true,\n    \"enabled\": true,\n    \"license_key\": \"\"\n}"
              }
      securedBy:
        - null
/templates:
  displayName: templates
  '/{template_id}':
    displayName: template_id
    /versions:
      displayName: versions
      post:
        description: |-
          **This endpoint allows you to create a new version of a template.**

          Each transactional template can have multiple versions, each version with its own subject and content. Each user can have up to 300 versions across across all templates.

          For more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).
        is:
          - onBehalfOfSubuser
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"transactional_template_version\"\n}",
              "example": "{\n    \"template_id\": \"ddb96bbc-9b92-425e-8979-99464621b543\",\n    \"active\": 1,\n    \"name\": \"example_version_name\",\n    \"html_content\": \"<%body%>\",\n    \"plain_content\": \"<%body%>\",\n    \"subject\": \"<%subject%>\"\n}"
            }
        responses:
          '201':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\",\n            \"description\": \"The id of the new transactional template version.\"\n        },\n        \"updated_at\": {\n            \"type\": \"string\",\n            \"description\": \"The date and time that this transactional template version was updated.\"\n        },\n        \"Transactional Template Version\": {\n            \"type\": \"transactional_template_version\"\n        }\n    },\n    \"required\": [\n        \"id\",\n        \"updated_at\"\n    ]\n}",
                  "example": "{\n    \"id\": \"8aefe0ee-f12b-4575-b5b7-c97e21cb36f3\",\n    \"template_id\": \"ddb96bbc-9b92-425e-8979-99464621b543\",\n    \"active\": 1,\n    \"name\": \"example_version_name\",\n    \"html_content\": \"<%body%>\",\n    \"plain_content\": \"<%body%>\",\n    \"subject\": \"<%subject%>\",\n    \"updated_at\": \"2014-03-19 18:56:33\"\n}"
                }
        securedBy:
          - null
      '/{version_id}':
        displayName: version_id
        uriParameters:
          version_id:
            type: string
        get:
          description: |-
            **This endpoint allows you to retrieve a specific version of a template.**

            Each transactional template can have multiple versions, each version with its own subject and content. Each user can have up to 300 versions across across all templates.

            For more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).

            ## URI Parameters
            | URI Parameter | Type | Description |
            |---|---|---|
            | template_id | string | The ID of the original template |
            | version_id | string |  The ID of the template version |
          is:
            - onBehalfOfSubuser
          responses:
            '200':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\",\n            \"description\": \"The ID of the template version.\"\n        },\n        \"updated_at\": {\n            \"type\": \"string\",\n            \"description\": \"The date and time that the template version was last updated.\"\n        },\n        \"Transactional Template Version\": {\n            \"type\": \"transactional_template_version\"\n        }\n    },\n    \"required\": [\n        \"id\",\n        \"updated_at\"\n    ]\n}",
                    "example": "{\n    \"id\": \"5997fcf6-2b9f-484d-acd5-7e9a99f0dc1f\",\n    \"template_id\": \"d51480ca-ca3f-465c-bc3e-ceb71d73c38d\",\n    \"active\": 1,\n    \"name\": \"version 1 name\",\n    \"html_content\": \"<%body%>\",\n    \"plain_content\": \"<%body%>\",\n    \"subject\": \"<%subject%>\",\n    \"updated_at\": \"2014-03-19 18:56:33\"\n}"
                  }
          securedBy:
            - null
        /activate:
          displayName: activate
          post:
            description: |-
              **This endpoint allows you to activate a version of one of your templates.**

              Each transactional template can have multiple versions, each version with its own subject and content. Each user can have up to 300 versions across across all templates.


              For more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).

              ## URI Parameters
              | URI Parameter | Type | Description |
              |---|---|---|
              | template_id | string | The ID of the original template |
              | version_id | string |  The ID of the template version |
            is:
              - onBehalfOfSubuser
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"null\"\n}"
                }
            responses:
              '200':
                body:
                  application/json: |-
                    {
                      "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\",\n            \"description\": \"The ID of the template version.\"\n        },\n        \"updated_at\": {\n            \"type\": \"string\",\n            \"description\": \"The date and time that the version was last updated.\"\n        },\n        \"Transactional Template Version\": {\n            \"type\": \"transactional_template_version\"\n        }\n    },\n    \"required\": [\n        \"id\",\n        \"updated_at\"\n    ]\n}",
                      "example": "{\n    \"id\": \"8aefe0ee-f12b-4575-b5b7-c97e21cb36f3\",\n    \"template_id\": \"e3a61852-1acb-4b32-a1bc-b44b3814ab78\",\n    \"active\": 1,\n    \"name\": \"example_version_name\",\n    \"html_content\": \"<%body%>\",\n    \"plain_content\": \"<%body%>\",\n    \"subject\": \"<%subject%>\",\n    \"updated_at\": \"2014-06-12 11:33:00\"\n}"
                    }
            securedBy:
              - null
        delete:
          description: |-
            **This endpoint allows you to delete one of your transactional template versions.**

            Each transactional template can have multiple versions, each version with its own subject and content. Each user can have up to 300 versions across across all templates.

            For more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).

            ## URI Parameters
            | URI Parameter | Type | Description |
            |---|---|---|
            | template_id | string | The ID of the original template |
            | version_id | string | The ID of the template version |
          is:
            - onBehalfOfSubuser
          responses:
            '204':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"null\"\n}"
                  }
          securedBy:
            - null
        patch:
          description: |-
            **This endpoint allows you to edit a version of one of your transactional templates.**

            Each transactional template can have multiple versions, each version with its own subject and content. Each user can have up to 300 versions across across all templates.

            For more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).

            ## URI Parameters
            | URI Parameter | Type | Description |
            |---|---|---|
            | template_id | string | The ID of the original template |
            | version_id | string | The ID of the template version |
          is:
            - onBehalfOfSubuser
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"active\": {\n            \"type\": \"integer\",\n            \"description\": \"Indicates if the template version is active.\"\n        },\n        \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the template version.\"\n        },\n        \"html_content\": {\n            \"type\": \"string\",\n            \"description\": \"The HTML content of the template version.\"\n        },\n        \"plain_content\": {\n            \"type\": \"string\",\n            \"description\": \"The text/plain content of the template version.\"\n        },\n        \"subject\": {\n            \"type\": \"string\",\n            \"description\": \"The subject of the template version.\"\n        }\n    }\n}",
                "example": "{\n    \"active\": 1,\n    \"name\": \"updated_example_name\",\n    \"html_content\": \"<%body%>\",\n    \"plain_content\": \"<%body%>\",\n    \"subject\": \"<%subject%>\"\n}"
              }
          responses:
            '200':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\",\n            \"description\": \"The ID of the template version.\"\n        },\n        \"updated_at\": {\n            \"type\": \"string\",\n            \"description\": \"The date and time that the template version was last updated.\"\n        },\n        \"Transactional Template Version\": {\n            \"type\": \"transactional_template_version\"\n        }\n    },\n    \"required\": [\n        \"id\",\n        \"updated_at\"\n    ]\n}",
                    "example": "{\n    \"id\": \"5997fcf6-2b9f-484d-acd5-7e9a99f0dc1f\",\n    \"template_id\": \"d51480ca-ca3f-465c-bc3e-ceb71d73c38d\",\n    \"active\": 1,\n    \"name\": \"version 1 name\",\n    \"html_content\": \"<%body%>\",\n    \"plain_content\": \"<%body%>\",\n    \"subject\": \"<%subject%>\",\n    \"updated_at\": \"2014-03-19 18:56:33\"\n}"
                  }
          securedBy:
            - null
    uriParameters:
      template_id:
        type: string
        description: The id of the transactional template you want to retrieve.
        displayName: The id of the transactional template you want to retrieve.
    delete:
      description: |-
        **This endpoint allows you to delete a transactional template.**

        Each user can create up to 300 different transactional templates. Transactional templates are specific to accounts and subusers. Templates created on a parent account will not be accessible from the subuser accounts.

        Transactional templates are templates created specifically for transactional email and are not to be confused with [Marketing Campaigns templates](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/templates.html). For more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).
      is:
        - onBehalfOfSubuser
      responses:
        '204':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\"\n}"
              }
      securedBy:
        - null
    patch:
      description: |-
        **This endpoint allows you to edit a transactional template.**

        Each user can create up to 300 different transactional templates. Transactional templates are specific to accounts and subusers. Templates created on a parent account will not be accessible from the subuser accounts.

        Transactional templates are templates created specifically for transactional email and are not to be confused with [Marketing Campaigns templates](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/templates.html). For more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the transactional template.\",\n            \"maxLength\": 100\n        }\n    }\n}",
            "example": "{\n    \"name\": \"new_example_name\"\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"transactional_template\"\n}",
                "example": "{\n    \"id\": \"733ba07f-ead1-41fc-933a-3976baa23716\",\n    \"name\": \"new_example_name\",\n    \"versions\": []\n}"
              }
      securedBy:
        - null
    get:
      description: |-
        **This endpoint allows you to retrieve a single transactional template.**

        Each user can create up to 300 different transactional templates. Transactional templates are specific to accounts and subusers. Templates created on a parent account will not be accessible from the subuser accounts.

        Transactional templates are templates created specifically for transactional email and are not to be confused with [Marketing Campaigns templates](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/templates.html). For more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"transactional_template\"\n}"
              }
      securedBy:
        - null
  post:
    description: |-
      **This endpoint allows you to create a transactional template.**

      Each user can create up to 300 different transactional templates. Transactional templates are specific to accounts and subusers. Templates created on a parent account will not be accessible from the subuser accounts.

      Transactional templates are templates created specifically for transactional email and are not to be confused with [Marketing Campaigns templates](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/templates.html). For more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).
    is:
      - onBehalfOfSubuser
    body:
      application/json: |-
        {
          "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name for the new transactional template.\",\n            \"maxLength\": 100\n        }\n    },\n    \"required\": [\n        \"name\"\n    ]\n}",
          "example": "{\n    \"name\": \"example_name\"\n}"
        }
    responses:
      '201':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"transactional_template\"\n}",
              "example": "{\n    \"id\": \"733ba07f-ead1-41fc-933a-3976baa23716\",\n    \"name\": \"example_name\",\n    \"versions\": []\n}"
            }
    securedBy:
      - null
  get:
    description: |-
      **This endpoint allows you to retrieve all transactional templates.**

      Each user can create up to 300 different transactional templates. Transactional templates are specific to accounts and subusers. Templates created on a parent account will not be accessible from the subuser accounts.

      Transactional templates are templates created specifically for transactional email and are not to be confused with [Marketing Campaigns templates](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/templates.html). For more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).
    is:
      - onBehalfOfSubuser
    responses:
      '200':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"transactional_template\"\n    }\n}"
            }
    securedBy:
      - null
/tracking_settings:
  displayName: tracking_settings
  /subscription:
    displayName: subscription
    get:
      description: |-
        **This endpoint allows you to retrieve your current settings for subscription tracking.**

        Subscription tracking adds links to the bottom of your emails that allows your recipients to subscribe to, or unsubscribe from, your emails.

        You can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.

        For more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"subscription_tracking_settings\"\n}",
                "example": "{\n    \"enabled\": true,\n    \"html_content\": \"<p>Something something unsubscribe <% %> something something</p>\\n\",\n    \"landing\": \"<p>subscribehere</p>\\n\",\n    \"plain_content\": \"Something something unsubscribe <% %> something something\",\n    \"replace\": \"thetag\",\n    \"url\": \"\"\n}"
              }
      securedBy:
        - null
    patch:
      description: |-
        **This endpoint allows you to update your current settings for subscription tracking.**

        Subscription tracking adds links to the bottom of your emails that allows your recipients to subscribe to, or unsubscribe from, your emails.

        You can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.

        For more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"subscription_tracking_settings\"\n}",
            "example": "{\n    \"enabled\": true,\n    \"landing\": \"landing page html\",\n    \"url\": \"url\",\n    \"replace\": \"replacement tag\",\n    \"html_content\": \"html content\",\n    \"plain_content\": \"text content\"\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"subscription_tracking_settings\"\n}",
                "example": "{\n    \"enabled\": true,\n    \"landing\": \"landing page html\",\n    \"url\": \"url\",\n    \"replace\": \"replacement tag\",\n    \"html_content\": \"html content\",\n    \"plain_content\": \"text content\"\n}"
              }
      securedBy:
        - null
  /open:
    displayName: open
    patch:
      description: |-
        **This endpoint allows you to update your current settings for open tracking.**

        Open Tracking adds an invisible image at the end of the email which can track email opens. If the email recipient has images enabled on their email client, a request to SendGrid’s server for the invisible image is executed and an open event is logged. These events are logged in the Statistics portal, Email Activity interface, and are reported by the Event Webhook.

        You can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.

        For more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"enabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"The new status that you want to set for open tracking.\"\n        }\n    }\n}",
            "example": "{\n    \"enabled\": true\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"enabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if open tracking is enabled.\"\n        }\n    },\n    \"required\": [\n        \"enabled\"\n    ]\n}",
                "example": "{\n    \"enabled\": true\n}"
              }
      securedBy:
        - null
    get:
      description: |-
        **This endpoint allows you to retrieve your current settings for open tracking.**

        Open Tracking adds an invisible image at the end of the email which can track email opens. If the email recipient has images enabled on their email client, a request to SendGrid’s server for the invisible image is executed and an open event is logged. These events are logged in the Statistics portal, Email Activity interface, and are reported by the Event Webhook.

        You can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.

        For more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"enabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if open tracking is enabled.\"\n        }\n    },\n    \"required\": [\n        \"enabled\"\n    ]\n}",
                "example": "{\n    \"enabled\": true\n}"
              }
      securedBy:
        - null
  /click:
    displayName: click
    patch:
      description: |-
        **This endpoint allows you to change your current click tracking setting. You can enable, or disable, click tracking using this endpoint.**

        You can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.

        For more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"enabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"The setting you want to use for click tracking.\"\n        }\n    }\n}",
            "example": "{\n    \"enabled\": true\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"enable_text\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if click tracking is enabled for plain text emails\"\n        },\n        \"enabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"The new setting new setting for click tracking.\"\n        }\n    },\n    \"required\": [\n        \"enable_text\",\n        \"enabled\"\n    ]\n}",
                "example": "{\n    \"enable_text\": false,\n    \"enabled\": true\n}"
              }
      securedBy:
        - null
    get:
      description: |-
        **This endpoint allows you to retrieve your current click tracking setting.**

        You can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.

        For more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"enable_text\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if click tracking is enabled for plain text emails.\"\n        },\n        \"enabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if click tracking is enabled or disabled.\"\n        }\n    },\n    \"required\": [\n        \"enable_text\",\n        \"enabled\"\n    ]\n}",
                "example": "{\n    \"enable_text\": false,\n    \"enabled\": true\n}"
              }
      securedBy:
        - null
  /google_analytics:
    displayName: google_analytics
    patch:
      description: |-
        **This endpoint allows you to update your current setting for Google Analytics.**

        For more information about using Google Analytics, please refer to [Google’s URL Builder](https://support.google.com/analytics/answer/1033867?hl=en) and their article on ["Best Practices for Campaign Building"](https://support.google.com/analytics/answer/1037445).

        We default the settings to Google’s recommendations. For more information, see [Google Analytics Demystified](https://sendgrid.com/docs/Classroom/Track/Collecting_Data/google_analytics_demystified_ga_statistics_vs_sg_statistics.html).

        You can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.

        For more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"google_analytics_settings\"\n}",
            "example": "{\n    \"enabled\": true,\n    \"utm_source\": \"sendgrid.com\",\n    \"utm_medium\": \"email\",\n    \"utm_term\": \"\",\n    \"utm_content\": \"\",\n    \"utm_campaign\": \"website\"\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"google_analytics_settings\"\n}",
                "example": "{\n    \"enabled\": true,\n    \"utm_campaign\": \"\",\n    \"utm_content\": \"lotsandlotsofcontent\",\n    \"utm_medium\": \"\",\n    \"utm_source\": \"\",\n    \"utm_term\": \"\"\n}"
              }
      securedBy:
        - null
    get:
      description: |-
        **This endpoint allows you to retrieve your current setting for Google Analytics.**

        For more information about using Google Analytics, please refer to [Google’s URL Builder](https://support.google.com/analytics/answer/1033867?hl=en) and their article on ["Best Practices for Campaign Building"](https://support.google.com/analytics/answer/1037445).

        We default the settings to Google’s recommendations. For more information, see [Google Analytics Demystified](https://sendgrid.com/docs/Classroom/Track/Collecting_Data/google_analytics_demystified_ga_statistics_vs_sg_statistics.html).

        You can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.

        For more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"google_analytics_settings\"\n}",
                "example": "{\n    \"enabled\": true,\n    \"utm_campaign\": \"\",\n    \"utm_content\": \"lotsandlotsofcontent\",\n    \"utm_medium\": \"\",\n    \"utm_source\": \"\",\n    \"utm_term\": \"\"\n}"
              }
      securedBy:
        - null
  get:
    description: |-
      **This endpoint allows you to retrieve a list of all tracking settings that you can enable on your account.**

      You can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.

      For more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).
    is:
      - onBehalfOfSubuser
    responses:
      '200':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"result\": {\n            \"type\": \"array\",\n            \"description\": \"The list of all tracking settings.\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the event being tracked.\"\n                    },\n                    \"title\": {\n                        \"type\": \"string\",\n                        \"description\": \"The title of the tracking setting.\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\",\n                        \"description\": \"A description about the event that is being tracked.\"\n                    },\n                    \"enabled\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"Indicates if this tracking setting is currently enabled.\"\n                    }\n                }\n            }\n        }\n    }\n}",
              "example": "{\n    \"result\": [\n        {\n            \"name\": \"open\",\n            \"title\": \"Open Tracking\",\n            \"description\": \"lorem ipsum... .\",\n            \"enabled\": true\n        }\n    ]\n}"
            }
    queryParameters:
      limit:
        type: integer
        description: The number of settings to return.
        displayName: The number of settings to return.
      offset:
        type: integer
        description: Where in the list of results you want to begin retrieving settings.
        displayName: Where in the list of results you want to begin retrieving settings.
    securedBy:
      - null
/subusers:
  displayName: subusers
  '/{subuser_name}':
    displayName: subuser_name
    uriParameters:
      subuser_name:
        type: string
    delete:
      description: |-
        This endpoint allows you to delete a subuser. This is a permanent action, once deleted a subuser cannot be retrieved.

        For more information about Subusers:

        * [User Guide > Subusers](https://sendgrid.com/docs/User_Guide/Settings/Subusers/index.html)
        * [Classroom > How do I add more subusers to my account?](https://sendgrid.com/docs/Classroom/Basics/Account/how_do_i_add_more_subusers_to_my_account.html)
      responses:
        '204':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {}\n}",
                "example": "{}"
              }
        '401':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
              }
      securedBy:
        - null
    /monitor:
      displayName: monitor
      delete:
        description: Subuser monitor settings allow you to receive a sample of an outgoing message by a specific customer at a specific frequency of emails.
        is:
          - authorizationHeader
        responses:
          '204':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {}\n}",
                  "example": "{}"
                }
          '401':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                }
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"No monitor settings for this user\"\n        }\n    ]\n}"
                }
      get:
        description: Subuser monitor settings allow you to receive a sample of an outgoing message by a specific customer at a specific frequency of emails.
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"monitor\"\n}",
                  "example": "{\n    \"email\": \"example@example.com\",\n    \"frequency\": 500\n}"
                }
          '401':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                }
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"No monitor settings for this user\"\n        }\n    ]\n}"
                }
        securedBy:
          - null
      put:
        description: Subuser monitor settings allow you to receive a sample of an outgoing message by a specific customer at a specific frequency of emails.
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"monitor\"\n}",
              "example": "{\n    \"email\": \"example@example.com\",\n    \"frequency\": 500\n}"
            }
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"monitor\"\n}",
                  "example": "{\n    \"email\": \"example@example.com\",\n    \"frequency\": 500\n}"
                }
          '400':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": \"email\",\n            \"message\": \"Email is required\"\n        }\n    ]\n}"
                }
          '401':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                }
        securedBy:
          - null
      post:
        description: Subuser monitor settings allow you to receive a sample of an outgoing message by a specific customer at a specific frequency of emails.
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"monitor\"\n}",
              "example": "{\n    \"email\": \"example@example.com\",\n    \"frequency\": 50000\n}"
            }
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"monitor\"\n}",
                  "example": "{\n    \"email\": \"example@example.com\",\n    \"frequency\": 50000\n}"
                }
          '400':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"User already has a monitor\"\n        }\n    ]\n}"
                }
          '401':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                }
        securedBy:
          - null
    /ips:
      displayName: ips
      put:
        description: |-
          Each subuser should be assigned to an IP address, from which all of this subuser's mail will be sent. Often, this is the same IP as the parent account, but each subuser can have their own, or multiple, IP addresses as well. 

          More information:

          * [How to request more IPs](https://sendgrid.com/docs/Classroom/Basics/Account/adding_an_additional_dedicated_ip_to_your_account.html)
          * [IPs can be whitelabeled](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/ips.html)
        is:
          - authorizationHeader
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"array\",\n    \"description\": \"The IP addresses you would like to assign to the subuser.\",\n    \"items\": {\n        \"type\": \"string\"\n    }\n}",
              "example": "[\n    \"127.0.0.1\"\n]"
            }
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"ips\": {\n            \"type\": \"array\",\n            \"description\": \"The IP addresses that are assigned to the subuser.\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        }\n    }\n}",
                  "example": "{\n    \"ips\": [\n        \"127.0.0.1\"\n    ]\n}"
                }
          '401':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                }
    /stats:
      displayName: stats
      /monthly:
        displayName: monthly
        get:
          description: |-
            **This endpoint allows you to retrive the monthly email statistics for a specific subuser.**

            While you can always view the statistics for all email activity on your account, subuser statistics enable you to view specific segments of your stats for your subusers. Emails sent, bounces, and spam reports are always tracked for subusers. Unsubscribes, clicks, and opens are tracked if you have enabled the required settings.

            When using the `sort_by_metric` to sort your stats by a specific metric, you can not sort by the following metrics:
            `bounce_drops`, `deferred`, `invalid_emails`, `processed`, `spam_report_drops`, `spam_reports`, or `unsubscribe_drops`.

            For more information, see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/subuser.html).
          responses:
            '200':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"subuser_stats\"\n}",
                    "example": "{\n    \"date\": \"2016-02-01\",\n    \"stats\": [\n        {\n            \"first_name\": \"John\",\n            \"last_name\": \"Doe\",\n            \"metrics\": {\n                \"blocks\": 0,\n                \"bounce_drops\": 0,\n                \"bounces\": 0,\n                \"clicks\": 5,\n                \"deferred\": 0,\n                \"delivered\": 0,\n                \"invalid_emails\": 0,\n                \"opens\": 10,\n                \"processed\": 10,\n                \"requests\": 10,\n                \"spam_report_drops\": 0,\n                \"spam_reports\": 0,\n                \"unique_clicks\": 0,\n                \"unique_opens\": 0,\n                \"unsubscribe_drops\": 0,\n                \"unsubscribes\": 0\n            },\n            \"name\": \"user1\",\n            \"type\": \"subuser\"\n        }\n    ]\n}"
                  }
          queryParameters:
            date:
              type: string
              description: The date of the month to retrieve statistics for. Must be formatted YYYY-MM-DD
              displayName: The date of the month to retrieve statistics for. Must be formatted YYYY-MM-DD
            sort_by_metric:
              type: string
              default: delivered
              description: 'The metric that you want to sort by. Metrics that you can sort by are: `blocks`, `bounces`, `clicks`, `delivered`, `opens`, `requests`, `unique_clicks`, `unique_opens`, and `unsubscribes`.'''
              displayName: 'The metric that you want to sort by. Metrics that you can sort by are: `blocks`, `bounces`, `clicks`, `delivered`, `opens`, `requests`, `unique_clicks`, `unique_opens`, and `unsubscribes`.'''
            sort_by_direction:
              type: string
              default: desc
              description: The direction you want to sort.
              enum:
                - desc
                - asc
              displayName: The direction you want to sort.
            limit:
              type: integer
              default: 5
              description: Optional field to limit the number of results returned.
              displayName: Optional field to limit the number of results returned.
            offset:
              type: integer
              description: Optional beginning point in the list to retrieve from.
              displayName: Optional beginning point in the list to retrieve from.
          securedBy:
            - null
    patch:
      description: |-
        This endpoint allows you to enable or disable a subuser.

        For more information about Subusers:

        * [User Guide > Subusers](https://sendgrid.com/docs/User_Guide/Settings/Subusers/index.html)
        * [Classroom > How do I add more subusers to my account?](https://sendgrid.com/docs/Classroom/Basics/Account/how_do_i_add_more_subusers_to_my_account.html)
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"disabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether or not this subuser is disabled. True means disabled, False means enabled.\"\n        }\n    }\n}",
            "example": "{\n    \"disabled\": false\n}"
          }
      responses:
        '204':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {}\n}",
                "example": "{}"
              }
        '400':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"message\": \"invalid username\"\n        },\n        {\n            \"message\": \"no fields provided\"\n        }\n    ]\n}"
              }
        '401':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
              }
        '500':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"message\": \"unable to enable user\"\n        }\n    ]\n}"
              }
      securedBy:
        - null
  /stats:
    displayName: stats
    /monthly:
      displayName: monthly
      get:
        description: |-
          **This endpoint allows you to retrieve the monthly email statistics for all subusers over the given date range.**

          While you can always view the statistics for all email activity on your account, subuser statistics enable you to view specific segments of your stats for your subusers. Emails sent, bounces, and spam reports are always tracked for subusers. Unsubscribes, clicks, and opens are tracked if you have enabled the required settings.

          When using the `sort_by_metric` to sort your stats by a specific metric, you can not sort by the following metrics:
          `bounce_drops`, `deferred`, `invalid_emails`, `processed`, `spam_report_drops`, `spam_reports`, or `unsubscribe_drops`.

          For more information, see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/subuser.html).
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"subuser_stats\"\n}",
                  "example": "{\n    \"date\": \"2016-02-01\",\n    \"stats\": [\n        {\n            \"first_name\": \"John\",\n            \"last_name\": \"Doe\",\n            \"metrics\": {\n                \"blocks\": 0,\n                \"bounce_drops\": 0,\n                \"bounces\": 0,\n                \"clicks\": 0,\n                \"deferred\": 0,\n                \"delivered\": 0,\n                \"invalid_emails\": 0,\n                \"opens\": 1,\n                \"processed\": 0,\n                \"requests\": 100,\n                \"spam_report_drops\": 0,\n                \"spam_reports\": 99,\n                \"unique_clicks\": 0,\n                \"unique_opens\": 0,\n                \"unsubscribe_drops\": 0,\n                \"unsubscribes\": 0\n            },\n            \"name\": \"user1\",\n            \"type\": \"subuser\"\n        },\n        {\n            \"first_name\": \"Jane\",\n            \"last_name\": \"Doe\",\n            \"metrics\": {\n                \"blocks\": 0,\n                \"bounce_drops\": 0,\n                \"bounces\": 0,\n                \"clicks\": 5,\n                \"deferred\": 0,\n                \"delivered\": 0,\n                \"invalid_emails\": 0,\n                \"opens\": 10,\n                \"processed\": 10,\n                \"requests\": 10,\n                \"spam_report_drops\": 0,\n                \"spam_reports\": 0,\n                \"unique_clicks\": 0,\n                \"unique_opens\": 0,\n                \"unsubscribe_drops\": 0,\n                \"unsubscribes\": 0\n            },\n            \"name\": \"user2\",\n            \"type\": \"subuser\"\n        }\n    ]\n}"
                }
        queryParameters:
          date:
            type: string
            description: The date of the month to retrieve statistics for. Must be formatted YYYY-MM-DD
            displayName: The date of the month to retrieve statistics for. Must be formatted YYYY-MM-DD
          subuser:
            type: string
            description: A substring search of your subusers.
            displayName: A substring search of your subusers.
          sort_by_metric:
            type: string
            default: delivered
            description: 'The metric that you want to sort by. Metrics that you can sort by are: `blocks`, `bounces`, `clicks`, `delivered`, `opens`, `requests`, `unique_clicks`, `unique_opens`, and `unsubscribes`.'''
            displayName: 'The metric that you want to sort by. Metrics that you can sort by are: `blocks`, `bounces`, `clicks`, `delivered`, `opens`, `requests`, `unique_clicks`, `unique_opens`, and `unsubscribes`.'''
          sort_by_direction:
            type: string
            default: desc
            description: The direction you want to sort.
            enum:
              - desc
              - asc
            displayName: The direction you want to sort.
          limit:
            type: integer
            default: 5
            description: Optional field to limit the number of results returned.
            displayName: Optional field to limit the number of results returned.
          offset:
            type: integer
            description: Optional beginning point in the list to retrieve from.
            displayName: Optional beginning point in the list to retrieve from.
        securedBy:
          - null
    get:
      description: |-
        **This endpoint allows you to retrieve the email statistics for the given subusers.**

        You may retrieve statistics for up to 10 different subusers by including an additional _subusers_ parameter for each additional subuser.

        While you can always view the statistics for all email activity on your account, subuser statistics enable you to view specific segments of your stats. Emails sent, bounces, and spam reports are always tracked for subusers. Unsubscribes, clicks, and opens are tracked if you have enabled the required settings.

        For more information, see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/subuser.html).
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"stats\"\n}",
                "example": "[\n    {\n        \"date\": \"2015-10-01\",\n        \"stats\": [\n            {\n                \"type\": \"subuser\",\n                \"name\": \"Matt_subuser\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounce_drops\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"invalid_emails\": 0,\n                    \"opens\": 0,\n                    \"processed\": 0,\n                    \"requests\": 0,\n                    \"spam_report_drops\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0,\n                    \"unsubscribe_drops\": 0,\n                    \"unsubscribes\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-02\",\n        \"stats\": [\n            {\n                \"type\": \"subuser\",\n                \"name\": \"Matt_subuser\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounce_drops\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"invalid_emails\": 0,\n                    \"opens\": 0,\n                    \"processed\": 0,\n                    \"requests\": 0,\n                    \"spam_report_drops\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0,\n                    \"unsubscribe_drops\": 0,\n                    \"unsubscribes\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-03\",\n        \"stats\": [\n            {\n                \"type\": \"subuser\",\n                \"name\": \"Matt_subuser\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounce_drops\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"invalid_emails\": 0,\n                    \"opens\": 0,\n                    \"processed\": 0,\n                    \"requests\": 0,\n                    \"spam_report_drops\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0,\n                    \"unsubscribe_drops\": 0,\n                    \"unsubscribes\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-04\",\n        \"stats\": [\n            {\n                \"type\": \"subuser\",\n                \"name\": \"Matt_subuser\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounce_drops\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"invalid_emails\": 0,\n                    \"opens\": 0,\n                    \"processed\": 0,\n                    \"requests\": 0,\n                    \"spam_report_drops\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0,\n                    \"unsubscribe_drops\": 0,\n                    \"unsubscribes\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-05\",\n        \"stats\": [\n            {\n                \"type\": \"subuser\",\n                \"name\": \"Matt_subuser\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounce_drops\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"invalid_emails\": 0,\n                    \"opens\": 0,\n                    \"processed\": 0,\n                    \"requests\": 0,\n                    \"spam_report_drops\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0,\n                    \"unsubscribe_drops\": 0,\n                    \"unsubscribes\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-06\",\n        \"stats\": [\n            {\n                \"type\": \"subuser\",\n                \"name\": \"Matt_subuser\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounce_drops\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"invalid_emails\": 0,\n                    \"opens\": 0,\n                    \"processed\": 0,\n                    \"requests\": 0,\n                    \"spam_report_drops\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0,\n                    \"unsubscribe_drops\": 0,\n                    \"unsubscribes\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-07\",\n        \"stats\": [\n            {\n                \"type\": \"subuser\",\n                \"name\": \"Matt_subuser\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounce_drops\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"invalid_emails\": 0,\n                    \"opens\": 0,\n                    \"processed\": 0,\n                    \"requests\": 0,\n                    \"spam_report_drops\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0,\n                    \"unsubscribe_drops\": 0,\n                    \"unsubscribes\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-08\",\n        \"stats\": [\n            {\n                \"type\": \"subuser\",\n                \"name\": \"Matt_subuser\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounce_drops\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"invalid_emails\": 0,\n                    \"opens\": 0,\n                    \"processed\": 0,\n                    \"requests\": 0,\n                    \"spam_report_drops\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0,\n                    \"unsubscribe_drops\": 0,\n                    \"unsubscribes\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-09\",\n        \"stats\": [\n            {\n                \"type\": \"subuser\",\n                \"name\": \"Matt_subuser\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounce_drops\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"invalid_emails\": 0,\n                    \"opens\": 0,\n                    \"processed\": 0,\n                    \"requests\": 0,\n                    \"spam_report_drops\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0,\n                    \"unsubscribe_drops\": 0,\n                    \"unsubscribes\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-10\",\n        \"stats\": [\n            {\n                \"type\": \"subuser\",\n                \"name\": \"Matt_subuser\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounce_drops\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"invalid_emails\": 0,\n                    \"opens\": 0,\n                    \"processed\": 0,\n                    \"requests\": 0,\n                    \"spam_report_drops\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0,\n                    \"unsubscribe_drops\": 0,\n                    \"unsubscribes\": 0\n                }\n            }\n        ]\n    }\n]"
              }
      queryParameters:
        limit:
          type: integer
          description: Limits the number of results returned per page.
          displayName: Limits the number of results returned per page.
        offset:
          type: integer
          description: The point in the list to begin retrieving results from.
          displayName: The point in the list to begin retrieving results from.
        aggregated_by:
          type: string
          description: 'How to group the statistics. Must be either "day", "week", or "month".'
          enum:
            - day
            - week
            - month
          displayName: 'How to group the statistics. Must be either "day", "week", or "month".'
        subusers:
          type: string
          description: The subuser you want to retrieve statistics for. You may include this parameter up to 10 times to retrieve statistics for multiple subusers.
          displayName: The subuser you want to retrieve statistics for. You may include this parameter up to 10 times to retrieve statistics for multiple subusers.
        start_date:
          type: string
          description: The starting date of the statistics to retrieve. Must follow format YYYY-MM-DD.
          displayName: The starting date of the statistics to retrieve. Must follow format YYYY-MM-DD.
        end_date:
          type: string
          description: The end date of the statistics to retrieve. Defaults to today.
          displayName: The end date of the statistics to retrieve. Defaults to today.
      securedBy:
        - null
    /sums:
      displayName: sums
      get:
        description: |-
          **This endpoint allows you to retrieve the total sums of each email statistic metric for all subusers over the given date range.**


          While you can always view the statistics for all email activity on your account, subuser statistics enable you to view specific segments of your stats. Emails sent, bounces, and spam reports are always tracked for subusers. Unsubscribes, clicks, and opens are tracked if you have enabled the required settings.

          For more information, see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/subuser.html).
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"category_stats\"\n}",
                  "example": "{\n    \"date\": \"2015-10-11\",\n    \"stats\": []\n}"
                }
        queryParameters:
          sort_by_direction:
            type: string
            default: desc
            description: 'The direction you want to sort. '
            enum:
              - desc
              - asc
            displayName: 'The direction you want to sort. '
          start_date:
            type: string
            description: The starting date of the statistics to retrieve. Must follow format YYYY-MM-DD.
            displayName: The starting date of the statistics to retrieve. Must follow format YYYY-MM-DD.
          end_date:
            type: string
            description: The end date of the statistics to retrieve. Defaults to today. Must follow format YYYY-MM-DD.
            displayName: The end date of the statistics to retrieve. Defaults to today. Must follow format YYYY-MM-DD.
          limit:
            type: integer
            default: 5
            description: Limits the number of results returned per page.
            displayName: Limits the number of results returned per page.
          offset:
            type: integer
            description: The point in the list to begin retrieving results from.
            displayName: The point in the list to begin retrieving results from.
          aggregated_by:
            type: string
            description: How to group the statistics. Defaults to today. Must follow format YYYY-MM-DD.
            displayName: How to group the statistics. Defaults to today. Must follow format YYYY-MM-DD.
          sort_by_metric:
            type: string
            default: delivered
            description: The metric that you want to sort by.  Must be a single metric.
            displayName: The metric that you want to sort by.  Must be a single metric.
        securedBy:
          - null
  post:
    description: |-
      This endpoint allows you to retrieve a list of all of your subusers. You can choose to retrieve specific subusers as well as limit the results that come back from the API.

      For more information about Subusers:

      * [User Guide > Subusers](https://sendgrid.com/docs/User_Guide/Settings/Subusers/index.html)
      * [Classroom > How do I add more subusers to my account?](https://sendgrid.com/docs/Classroom/Basics/Account/how_do_i_add_more_subusers_to_my_account.html)
    body:
      application/json: |-
        {
          "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"username\": {\n            \"type\": \"string\",\n            \"description\": \"The username for this subuser.\"\n        },\n        \"email\": {\n            \"type\": \"string\",\n            \"description\": \"The email address of the subuser.\"\n        },\n        \"password\": {\n            \"type\": \"string\",\n            \"description\": \"The password this subuser will use when logging into SendGrid.\"\n        },\n        \"ips\": {\n            \"type\": \"array\",\n            \"description\": \"The IP addresses that should be assigned to this subuser.\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        }\n    },\n    \"required\": [\n        \"username\",\n        \"email\",\n        \"password\",\n        \"ips\"\n    ]\n}",
          "example": "{\n    \"username\": \"John@example.com\",\n    \"email\": \"John@example.com\",\n    \"password\": \"johns_password\",\n    \"ips\": [\n        \"1.1.1.1\",\n        \"2.2.2.2\"\n    ]\n}"
        }
    responses:
      '200':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"subuser_post\"\n}",
              "example": "{\n    \"username\": \"example_subuser\",\n    \"user_id\": 1234,\n    \"email\": \"example@example.com\",\n    \"signup_session_token\": \"\",\n    \"authorization_token\": \"\",\n    \"credit_allocation\": {\n        \"type\": \"unlimited\"\n    }\n}"
            }
      '400':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
              "example": "{\n    \"errors\": [\n        {\n            \"message\": \"username exists\"\n        },\n        {\n            \"message\": \"unable to validate IPs at this time\"\n        }\n    ]\n}"
            }
      '401':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
              "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
            }
      '403':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
              "example": "{\n    \"errors\": [\n        {\n            \"message\": \"you dont have permission to access this resource\"\n        }\n    ]\n}"
            }
      '500':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\"\n}",
              "example": "{\n    \"errors\": [\n        {\n            \"message\": \"unable to validate IPs at this time\"\n        }\n    ]\n}"
            }
    securedBy:
      - null
  get:
    description: |-
      This endpoint allows you to retrieve a list of all of your subusers. You can choose to retrieve specific subusers as well as limit the results that come back from the API.

      For more information about Subusers:

      * [User Guide > Subusers](https://sendgrid.com/docs/User_Guide/Settings/Subusers/index.html)
      * [Classroom > How do I add more subusers to my account?](https://sendgrid.com/docs/Classroom/Basics/Account/how_do_i_add_more_subusers_to_my_account.html)
    responses:
      '200':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"subuser\"\n    }\n}",
              "example": "[\n    {\n        \"disabled\": false,\n        \"email\": \"example@example.com\",\n        \"id\": 1234,\n        \"username\": \"example_subuser\"\n    },\n    {\n        \"disabled\": false,\n        \"email\": \"example2@example.com\",\n        \"id\": 1234,\n        \"username\": \"example_subuser2\"\n    }\n]"
            }
      '401':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
              "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
            }
        description: Unexpected error in API call. See HTTP response body for details.
    queryParameters:
      username:
        type: string
        description: The username of this subuser.
        displayName: The username of this subuser.
      limit:
        type: integer
        description: The number of results you would like to get in each request.
        displayName: The number of results you would like to get in each request.
      offset:
        type: integer
        description: The number of subusers to skip.
        displayName: The number of subusers to skip.
    securedBy:
      - null
  /reputations:
    displayName: reputations
    get:
      description: |-
        Subuser sender reputations give a good idea how well a sender is doing with regards to how recipients and recipient servers react to the mail that is being received. When a bounce, spam report, or other negative action happens on a sent email, it will effect your sender rating.

        This endpoint allows you to request the reputations for your subusers.
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"reputation\": {\n                \"type\": \"number\",\n                \"description\": \"The sender reputation this subuser has attained.\"\n            },\n            \"username\": {\n                \"type\": \"string\",\n                \"description\": \"The subuser that has this reputation.f\"\n            }\n        },\n        \"required\": [\n            \"reputation\",\n            \"username\"\n        ]\n    }\n}",
                "example": "[\n    {\n        \"username\": \"example_subuser\",\n        \"reputation\": 99\n    },\n    {\n        \"username\": \"example_subuser2\",\n        \"reputation\": 95.2\n    }\n]"
              }
      queryParameters:
        usernames:
          type: string
      securedBy:
        - null
/ips:
  displayName: ips
  get:
    description: |-
      **This endpoint allows you to retrieve a list of all assigned and unassigned IPs.**

      Response includes warm up status, pools, assigned subusers, and whitelabel info. The start_date field corresponds to when warmup started for that IP.

      A single IP address or a range of IP addresses may be dedicated to an account in order to send email for multiple domains. The reputation of this IP is based on the aggregate performance of all the senders who use it.
    responses:
      '200':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"ip\": {\n                \"type\": \"string\",\n                \"description\": \"An IP address.\"\n            },\n            \"subusers\": {\n                \"type\": \"array\",\n                \"description\": \"The subusers that are able to send email from this IP.\",\n                \"items\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"rdns\": {\n                \"type\": \"string\",\n                \"description\": \"The reverse DNS record for this IP address.\"\n            },\n            \"pools\": {\n                \"type\": \"array\",\n                \"description\": \"The IP pools that this IP has been added to.\",\n                \"items\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"warmup\": {\n                \"type\": \"boolean\",\n                \"description\": \"Indicates if this IP address is currently warming up.\"\n            },\n            \"start_date\": {\n                \"type\": [\n                    \"number\",\n                    \"null\"\n                ],\n                \"description\": \"The date that the IP address was entered into warmup.\"\n            },\n            \"whitelabeled\": {\n                \"type\": \"boolean\",\n                \"description\": \"Indicates if this IP address has been whitelabeled.\"\n            },\n            \"assigned_at\": {\n                \"type\": [\n                    \"integer\",\n                    \"null\"\n                ],\n                \"description\": \"The date that the IP address was assigned to the user.\"\n            }\n        },\n        \"required\": [\n            \"ip\",\n            \"subusers\",\n            \"pools\",\n            \"warmup\",\n            \"start_date\",\n            \"whitelabeled\",\n            \"assigned_at\"\n        ]\n    }\n}",
              "example": "[\n    {\n        \"ip\": \"192.168.1.1\",\n        \"pools\": [\n            \"pool1\",\n            \"pool2\"\n        ],\n        \"whitelabeled\": false,\n        \"start_date\": 1409616000,\n        \"subusers\": [\n            \"tim@sendgrid.net\"\n        ],\n        \"warmup\": false,\n        \"assigned_at\": 1482883200\n    },\n    {\n        \"ip\": \"208.115.214.22\",\n        \"pools\": [],\n        \"whitelabeled\": true,\n        \"rdns\": \"o1.email.burgermail.com\",\n        \"start_date\": 1409616000,\n        \"subusers\": [],\n        \"warmup\": false,\n        \"assigned_at\": 1482883200\n    }\n]"
            }
    queryParameters:
      ip:
        type: string
        description: The IP address to get
        displayName: The IP address to get
      exclude_whitelabels:
        type: boolean
        description: Should we exclude whitelabels?
        displayName: Should we exclude whitelabels?
      limit:
        type: integer
        default: 10
        description: The number of IPs you want returned at the same time.
        displayName: The number of IPs you want returned at the same time.
      offset:
        type: integer
        description: The offset for the number of IPs that you are requesting.
        displayName: The offset for the number of IPs that you are requesting.
      subuser:
        type: string
        description: The subuser you are requesting for.
        displayName: The subuser you are requesting for.
      sort_by_direction:
        type: string
        enum:
          - desc
          - asc
        description: The direction to sort the results.
        displayName: The direction to sort the results.
    securedBy:
      - null
  /pools:
    displayName: pools
    '/{pool_name}':
      displayName: pool_name
      uriParameters:
        pool_name:
          type: string
          description: The name of the IP pool that you want to delete.
          displayName: The name of the IP pool that you want to delete.
      get:
        description: |-
          **This endpoint allows you to list all of the IP addresses that are in a specific IP pool.**

          IP Pools allow you to group your dedicated SendGrid IP addresses together. For example, you could create separate pools for your transactional and marketing email. When sending marketing emails, specify that you want to use the marketing IP pool. This allows you to maintain separate reputations for your different email traffic.

          IP pools can only be used with whitelabeled IP addresses.

          If an IP pool is NOT specified for an email, it will use any IP available, including ones in pools.
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"pool_name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the IP pool.\",\n            \"maxLength\": 64\n        },\n        \"ips\": {\n            \"type\": \"array\",\n            \"description\": \"The list of IP addresses that belong to this IP pool.\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        }\n    },\n    \"required\": [\n        \"pool_name\"\n    ]\n}"
                }
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"field\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the error.\"\n                    },\n                    \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"A message explaining why the IP addresses could not be listed.\"\n                    }\n                }\n            }\n        }\n    }\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": \"error\",\n            \"message\": \"Unable to locate specified IPs Pool\"\n        }\n    ]\n}"
                }
        securedBy:
          - null
      put:
        description: |-
          **This endpoint allows you to update the name of an IP pool.**

          IP Pools allow you to group your dedicated SendGrid IP addresses together. For example, you could create separate pools for your transactional and marketing email. When sending marketing emails, specify that you want to use the marketing IP pool. This allows you to maintain separate reputations for your different email traffic.

          IP pools can only be used with whitelabeled IP addresses.

          If an IP pool is NOT specified for an email, it will use any IP available, including ones in pools.
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The new name for your IP pool.\",\n            \"maxLength\": 64\n        }\n    }\n}",
              "example": "{\n    \"name\": \"new_pool_name\"\n}"
            }
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"ip_pool\"\n}",
                  "example": "{\n    \"name\": \"new_pool_name\"\n}"
                }
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"field\": {\n                        \"type\": \"null\"\n                    },\n                    \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"A message explaining why the name of your IP pool could not be updated.\"\n                    }\n                }\n            }\n        }\n    }\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"ip pool not found\"\n        }\n    ]\n}"
                }
        securedBy:
          - null
      /ips:
        displayName: ips
        '/{ip}':
          displayName: ip
          uriParameters:
            ip:
              type: string
              description: The IP address that you are removing.
              displayName: The IP address that you are removing.
          delete:
            description: |-
              **This endpoint allows you to remove an IP address from an IP pool.**

              The same IP address can be added to multiple IP pools.

              A single IP address or a range of IP addresses may be dedicated to an account in order to send email for multiple domains. The reputation of this IP is based on the aggregate performance of all the senders who use it.
            responses:
              '204':
                body:
                  application/json: |-
                    {
                      "schema": "{\n    \"type\": \"object\"\n}"
                    }
              '404':
                body:
                  application/json: |-
                    {
                      "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"error\": {\n            \"type\": \"string\",\n            \"description\": \"An error explaining why the IP address could not be removed from the IP pool.\"\n        }\n    }\n}",
                      "example": "{\n    \"error\": \"Unable to locate specified IPs Pool\"\n}"
                    }
            securedBy:
              - null
        post:
          description: |-
            **This endpoint allows you to add an IP address to an IP pool.**

            You can add the same IP address to multiple pools. It may take up to 60 seconds for your IP address to be added to a pool after your request is made.

            A single IP address or a range of IP addresses may be dedicated to an account in order to send email for multiple domains. The reputation of this IP is based on the aggregate performance of all the senders who use it.
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"ip\": {\n            \"type\": \"string\",\n            \"description\": \"The IP address that you want to add to an IP pool.\"\n        }\n    }\n}",
                "example": "{\n    \"ip\": \"0.0.0.0\"\n}"
              }
          responses:
            '201':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"ip\": {\n            \"type\": \"string\",\n            \"description\": \"The IP address.\"\n        },\n        \"pools\": {\n            \"type\": \"array\",\n            \"description\": \"The list of IP pools that this IP address has been added to.\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        },\n        \"start_date\": {\n            \"type\": \"integer\",\n            \"description\": \"A unix timestamp indicating when the warmup process began for the IP address.\"\n        },\n        \"warmup\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if the IP address is in warmup.\"\n        }\n    },\n    \"required\": [\n        \"ip\",\n        \"pools\",\n        \"start_date\",\n        \"warmup\"\n    ]\n}",
                    "example": "{\n    \"ip\": \"000.00.00.0\",\n    \"pools\": [\n        \"test1\"\n    ],\n    \"start_date\": 1409616000,\n    \"warmup\": true\n}"
                  }
            '404':
              body:
                application/json: |-
                  {
                    "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"description\": \"The error returned.\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"field\": {\n                        \"type\": \"null\"\n                    },\n                    \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"A message explaining why the IP address could not be added to the IP Pool.\"\n                    }\n                }\n            }\n        }\n    }\n}",
                    "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"resource not found\"\n        }\n    ]\n}"
                  }
          securedBy:
            - null
      delete:
        description: |-
          **This endpoint allows you to delete an IP pool.**

          IP Pools allow you to group your dedicated SendGrid IP addresses together. For example, you could create separate pools for your transactional and marketing email. When sending marketing emails, specify that you want to use the marketing IP pool. This allows you to maintain separate reputations for your different email traffic.

          IP pools can only be used with whitelabeled IP addresses.

          If an IP pool is NOT specified for an email, it will use any IP available, including ones in pools.
        responses:
          '204':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\"\n}"
                }
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"error\": {\n            \"type\": \"string\",\n            \"description\": \"An error explaining why the pool could not be deleted.\"\n        }\n    }\n}",
                  "example": "{\n    \"error\": \"Unable to locate specified IPs Pool\"\n}"
                }
        securedBy:
          - null
    post:
      description: |-
        **This endpoint allows you to create an IP pool.**

        **Each user can create up to 10 different IP pools.**

        IP Pools allow you to group your dedicated SendGrid IP addresses together. For example, you could create separate pools for your transactional and marketing email. When sending marketing emails, specify that you want to use the marketing IP pool. This allows you to maintain separate reputations for your different email traffic.

        IP pools can only be used with whitelabeled IP addresses.

        If an IP pool is NOT specified for an email, it will use any IP available, including ones in pools.
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of your new IP pool.\",\n            \"maxLength\": 64\n        }\n    },\n    \"required\": [\n        \"name\"\n    ]\n}",
            "example": "{\n    \"name\": \"marketing\"\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"ip_pool\"\n}",
                "example": "{\n    \"name\": \"marketing\"\n}"
              }
      securedBy:
        - null
    get:
      description: |-
        **This endpoint allows you to retreive all of your IP pools.**

        IP Pools allow you to group your dedicated SendGrid IP addresses together. For example, you could create separate pools for your transactional and marketing email. When sending marketing emails, specify that you want to use the marketing IP pool. This allows you to maintain separate reputations for your different email traffic.

        IP pools can only be used with whitelabeled IP addresses.

        If an IP pool is NOT specified for an email, it will use any IP available, including ones in pools.
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"ip_pool\"\n    }\n}",
                "example": "[\n    {\n        \"name\": \"marketing\"\n    },\n    {\n        \"name\": \"transactional\"\n    }\n]"
              }
      securedBy:
        - null
  /warmup:
    displayName: warmup
    post:
      description: |-
        **This endpoint allows you to enter an IP address into warmup mode.**

        SendGrid can automatically warm up dedicated IP addresses by limiting the amount of mail that can be sent through them per hour, with the limit determined by how long the IP address has been in warmup. See the [warmup schedule](https://sendgrid.com/docs/API_Reference/Web_API_v3/IP_Management/ip_warmup_schedule.html) for more details on how SendGrid limits your email traffic for IPs in warmup.

        For more general information about warming up IPs, please see our [Classroom](https://sendgrid.com/docs/Classroom/Deliver/Delivery_Introduction/warming_up_ips.html).
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"ip\": {\n            \"type\": \"string\",\n            \"description\": \"The IP address that you want to begin warming up.\"\n        }\n    }\n}",
            "example": "{\n    \"ip\": \"0.0.0.0\"\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"ip_warmup_response\"\n}",
                "example": "[\n    {\n        \"ip\": \"0.0.0.0\",\n        \"start_date\": 1409616000\n    }\n]"
              }
        '404':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"description\": \"The errors that were encountered.\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"field\": {\n                        \"type\": \"null\"\n                    },\n                    \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"A message explaining why the IP couldn't entered into warmup mode.\"\n                    }\n                }\n            }\n        }\n    }\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"resource not found\"\n        }\n    ]\n}"
              }
      securedBy:
        - null
    '/{ip_address}':
      displayName: ip_address
      uriParameters:
        ip_address:
          type: string
          description: The IP address that you want to remove from warmup mode.
          displayName: The IP address that you want to remove from warmup mode.
      get:
        description: |-
          **This endpoint allows you to retrieve the warmup status for a specific IP address.**

          SendGrid can automatically warm up dedicated IP addresses by limiting the amount of mail that can be sent through them per hour, with the limit determined by how long the IP address has been in warmup. See the [warmup schedule](https://sendgrid.com/docs/API_Reference/Web_API_v3/IP_Management/ip_warmup_schedule.html) for more details on how SendGrid limits your email traffic for IPs in warmup.

          For more general information about warming up IPs, please see our [Classroom](https://sendgrid.com/docs/Classroom/Deliver/Delivery_Introduction/warming_up_ips.html).
        is:
          - onBehalfOfSubuser
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"ip_warmup_response\"\n}"
                }
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"description\": \"The errors that were encountered.\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"field\": {\n                        \"type\": \"null\"\n                    },\n                    \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"A message explaining why the warmup status could not be retrieved.\"\n                    }\n                }\n            }\n        }\n    }\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"resource not found\"\n        }\n    ]\n}"
                }
        securedBy:
          - null
      delete:
        description: |-
          **This endpoint allows you to remove an IP address from warmup mode.**

          SendGrid can automatically warm up dedicated IP addresses by limiting the amount of mail that can be sent through them per hour, with the limit determined by how long the IP address has been in warmup. See the [warmup schedule](https://sendgrid.com/docs/API_Reference/Web_API_v3/IP_Management/ip_warmup_schedule.html) for more details on how SendGrid limits your email traffic for IPs in warmup.

          For more general information about warming up IPs, please see our [Classroom](https://sendgrid.com/docs/Classroom/Deliver/Delivery_Introduction/warming_up_ips.html).
        is:
          - onBehalfOfSubuser
        responses:
          '204':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\"\n}"
                }
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"description\": \"The errors that were encountered.\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"field\": {\n                        \"type\": \"null\"\n                    },\n                    \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"A message explaining why the IP couldn't be removed from warmup.\"\n                    }\n                }\n            }\n        }\n    }\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"resource not found\"\n        }\n    ]\n}"
                }
        securedBy:
          - null
    get:
      description: |-
        **This endpoint allows you to retrieve all of your IP addresses that are currently warming up.**

        SendGrid can automatically warm up dedicated IP addresses by limiting the amount of mail that can be sent through them per hour, with the limit determined by how long the IP address has been in warmup. See the [warmup schedule](https://sendgrid.com/docs/API_Reference/Web_API_v3/IP_Management/ip_warmup_schedule.html) for more details on how SendGrid limits your email traffic for IPs in warmup.

        For more general information about warming up IPs, please see our [Classroom](https://sendgrid.com/docs/Classroom/Deliver/Delivery_Introduction/warming_up_ips.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"ip_warmup_response\"\n}",
                "example": "[\n    {\n        \"ip\": \"0.0.0.0\",\n        \"start_date\": 1409616000\n    }\n]"
              }
      securedBy:
        - null
  post:
    description: This endpoint is for adding a(n) IP Address(es) to your account.
    body:
      application/json: |-
        {
          "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"count\": {\n            \"type\": \"integer\",\n            \"description\": \"The amount of IPs to add to the account.\"\n        },\n        \"subusers\": {\n            \"type\": \"array\",\n            \"description\": \"Array of usernames to be assigned a send IP.\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        },\n        \"warmup\": {\n            \"type\": \"boolean\",\n            \"default\": false,\n            \"description\": \"Whether or not to warmup the IPs being added.\"\n        }\n    },\n    \"required\": [\n        \"count\"\n    ]\n}",
          "example": "{\n    \"count\": 90323478,\n    \"subusers\": [\n        \"subuser1\",\n        \"subuser2\"\n    ],\n    \"warmup\": true,\n    \"user_can_send\": true\n}"
        }
    responses:
      '201':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"ips\": {\n            \"type\": \"array\",\n            \"description\": \"List of IP objects.\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"ip\": {\n                        \"type\": \"string\",\n                        \"description\": \"IP added to account.\"\n                    },\n                    \"subusers\": {\n                        \"type\": \"array\",\n                        \"description\": \"Array of usernames assigned a send IP.\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"required\": [\n                    \"ip\",\n                    \"subusers\"\n                ]\n            }\n        },\n        \"remaining_ips\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of IPs that can still be added to the user.\"\n        },\n        \"warmup\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether or not the IPs are being warmed up.\"\n        }\n    },\n    \"required\": [\n        \"ips\",\n        \"remaining_ips\",\n        \"warmup\"\n    ]\n}",
              "example": "{\n    \"ips\": [\n        {\n            \"ip\": \"1.2.3.4\",\n            \"subusers\": [\n                \"user\",\n                \"subuser1\"\n            ]\n        },\n        {\n            \"ip\": \"1.2.3.5\",\n            \"subusers\": [\n                \"user\",\n                \"subuser1\"\n            ]\n        }\n    ],\n    \"remaining_ips\": 1,\n    \"warmup\": true\n}"
            }
      '400':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"errors\"\n}",
              "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"one or more subusers do not belong to this user\"\n        }\n    ]\n}"
            }
    securedBy:
      - null
  '/{ip_address}':
    displayName: ip_address
    uriParameters:
      ip_address:
        type: string
        description: The IP address you are retrieving the IP pools for.
        displayName: The IP address you are retrieving the IP pools for.
    get:
      description: |-
        **This endpoint allows you to see which IP pools a particular IP address has been added to.**

        The same IP address can be added to multiple IP pools.

        A single IP address or a range of IP addresses may be dedicated to an account in order to send email for multiple domains. The reputation of this IP is based on the aggregate performance of all the senders who use it.
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"ip\": {\n            \"type\": \"string\",\n            \"description\": \"The IP address.\"\n        },\n        \"subusers\": {\n            \"type\": \"array\",\n            \"description\": \"The subusers that can send email using this IP address.\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        },\n        \"rdns\": {\n            \"type\": \"string\",\n            \"description\": \"The reverse DNS record for this IP address.\"\n        },\n        \"pools\": {\n            \"type\": \"array\",\n            \"description\": \"The list of IP pools that this IP address belongs to.\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        },\n        \"warmup\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if this IP address is currently warming up.\"\n        },\n        \"start_date\": {\n            \"type\": [\n                \"integer\",\n                \"null\"\n            ],\n            \"description\": \"The date that the IP address was entered into warmup.\"\n        },\n        \"whitelabeled\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if this IP address has been whitelabeled.\"\n        }\n    },\n    \"required\": [\n        \"ip\",\n        \"subusers\",\n        \"rdns\",\n        \"pools\",\n        \"warmup\",\n        \"start_date\",\n        \"whitelabeled\"\n    ]\n}",
                "example": "{\n    \"ip\": \"000.00.00.0\",\n    \"subusers\": [\n        \"subuser1\",\n        \"subuser2\"\n    ],\n    \"rdns\": \"o1.em.example.com\",\n    \"pools\": [\n        \"test1\"\n    ],\n    \"warmup\": false,\n    \"start_date\": null,\n    \"whitelabeled\": true\n}"
              }
      securedBy:
        - null
  /remaining:
    displayName: remaining
    get:
      description: This endpoint gets amount of IP Addresses that can still be created during a given period and the price of those IPs.
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"remaining\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The number of IPs that can still be added to the user.\"\n                    },\n                    \"period\": {\n                        \"type\": \"string\",\n                        \"description\": \"The length of time until user can add more IPs.\"\n                    },\n                    \"price_per_ip\": {\n                        \"type\": \"number\",\n                        \"description\": \"The current cost to add an IP.\"\n                    }\n                },\n                \"required\": [\n                    \"remaining\",\n                    \"period\",\n                    \"price_per_ip\"\n                ]\n            }\n        }\n    },\n    \"required\": [\n        \"results\"\n    ]\n}",
                "example": "{\n    \"results\": [\n        {\n            \"remaining\": 2,\n            \"period\": \"month\",\n            \"price_per_ip\": 20\n        }\n    ]\n}"
              }
      securedBy:
        - null
  /assigned:
    displayName: assigned
    get:
      description: |-
        **This endpoint allows you to retrieve only assigned IP addresses.**

        A single IP address or a range of IP addresses may be dedicated to an account in order to send email for multiple domains. The reputation of this IP is based on the aggregate performance of all the senders who use it.
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"array\",\n    \"title\": \"List all assigned IPs response\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"ip\": {\n                \"type\": \"string\",\n                \"description\": \"The IP address.\"\n            },\n            \"pools\": {\n                \"type\": \"array\",\n                \"description\": \"The IP pools that this IP address has been added to.\",\n                \"items\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"warmup\": {\n                \"type\": \"boolean\",\n                \"description\": \"Indicates if this IP address is currently warming up.\"\n            },\n            \"start_date\": {\n                \"type\": \"integer\",\n                \"description\": \"The start date that this IP address was entered into warmup.\"\n            }\n        },\n        \"required\": [\n            \"ip\",\n            \"pools\",\n            \"warmup\",\n            \"start_date\"\n        ]\n    }\n}",
                "example": "[\n    {\n        \"ip\": \"167.89.21.3\",\n        \"pools\": [\n            \"new_test5\"\n        ],\n        \"warmup\": true,\n        \"start_date\": 1409616000\n    }\n]"
              }
      securedBy:
        - null
/senders:
  displayName: senders
  '/{sender_id}':
    displayName: sender_id
    uriParameters:
      sender_id:
        type: integer
        description: The ID of the sender identity that you want to retrieve.
        displayName: The ID of the sender identity that you want to retrieve.
    delete:
      description: |-
        **This endoint allows you to delete one of your sender identities.**

        Sender Identities are required to be verified before use. If your domain has been whitelabeled it will auto verify on creation. Otherwise an email will be sent to the `from.email`.
      is:
        - onBehalfOfSubuser
      responses:
        '204':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {}\n}"
              }
        '403':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\"\n                    },\n                    \"field\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"message\": \"You may only delete a sender identity when it is unlocked.\",\n            \"field\": \"locked\"\n        }\n    ]\n}"
              }
        '404':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\"\n                    },\n                    \"field\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"message\": \"resource not found\",\n            \"field\": \"id\"\n        }\n    ]\n}"
              }
      securedBy:
        - null
    /resend_verification:
      displayName: resend_verification
      post:
        description: |-
          **This enpdoint allows you to resend a sender identity verification email.**

          Sender Identities are required to be verified before use. If your domain has been whitelabeled it will auto verify on creation. Otherwise an email will be sent to the `from.email`.
        is:
          - onBehalfOfSubuser
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {}\n}"
            }
        responses:
          '204':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {}\n}"
                }
          '400':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\"\n                    },\n                    \"field\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"message\": \"The Sender Identity is already verified.  No email sent.\",\n            \"field\": \"\"\n        }\n    ]\n}"
                }
          '404':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\"\n                    },\n                    \"field\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"message\": \"resource not found\",\n            \"field\": \"id\"\n        }\n    ]\n}"
                }
        securedBy:
          - null
    patch:
      description: |-
        **This endpoint allows you to update a sender identity.**

        Updates to `from.email` require re-verification. If your domain has been whitelabeled it will auto verify on creation. Otherwise an email will be sent to the `from.email`.

        Partial updates are allowed, but fields that are marked as "required" in the POST (create) endpoint must not be nil if that field is included in the PATCH request.
      is:
        - onBehalfOfSubuser
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"nickname\": {\n            \"type\": \"string\",\n            \"description\": \"A nickname for the sender identity. Not used for sending.\"\n        },\n        \"from\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"email\": {\n                    \"type\": \"string\",\n                    \"description\": \"This is where the email will appear to originate from for your recipient\"\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"This is the name appended to the from email field. IE - Your name or company name.\"\n                }\n            }\n        },\n        \"reply_to\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"email\": {\n                    \"type\": \"string\",\n                    \"description\": \"This is the email that your recipient will reply to.\"\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"This is the name appended to the reply to email field. IE - Your name or company name.\"\n                }\n            }\n        },\n        \"address\": {\n            \"type\": \"string\",\n            \"description\": \"The physical address of the sender identity.\"\n        },\n        \"address_2\": {\n            \"type\": \"string\",\n            \"description\": \"Additional sender identity address information.\"\n        },\n        \"city\": {\n            \"type\": \"string\",\n            \"description\": \"The city of the sender identity.\"\n        },\n        \"state\": {\n            \"type\": \"string\",\n            \"description\": \"The state of the sender identity.\"\n        },\n        \"zip\": {\n            \"type\": \"string\",\n            \"description\": \"The zipcode of the sender identity.\"\n        },\n        \"country\": {\n            \"type\": \"string\",\n            \"description\": \"The country of the sender identity.\"\n        }\n    }\n}",
            "example": "{\n    \"nickname\": \"My Sender ID\",\n    \"from\": {\n        \"email\": \"from@example.com\",\n        \"name\": \"Example INC\"\n    },\n    \"reply_to\": {\n        \"email\": \"replyto@example.com\",\n        \"name\": \"Example INC\"\n    },\n    \"address\": \"123 Elm St.\",\n    \"address_2\": \"Apt. 456\",\n    \"city\": \"Denver\",\n    \"state\": \"Colorado\",\n    \"zip\": \"80202\",\n    \"country\": \"United States\"\n}"
          }
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"senderID\"\n}",
                "example": "{\n    \"id\": 1,\n    \"nickname\": \"My Sender ID\",\n    \"from\": {\n        \"email\": \"from@example.com\",\n        \"name\": \"Example INC\"\n    },\n    \"reply_to\": {\n        \"email\": \"replyto@example.com\",\n        \"name\": \"Example INC\"\n    },\n    \"address\": \"123 Elm St.\",\n    \"address_2\": \"Apt. 456\",\n    \"city\": \"Denver\",\n    \"state\": \"Colorado\",\n    \"zip\": \"80202\",\n    \"country\": \"United States\",\n    \"verified\": true,\n    \"updated_at\": 1449872165,\n    \"created_at\": 1449872165,\n    \"locked\": false\n}"
              }
        '400':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\"\n                    },\n                    \"field\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"message\": \"The JSON you have submitted cannot be parsed.\",\n            \"field\": \"\"\n        },\n        {\n            \"message\": \"nickname is required.\",\n            \"field\": \"nickname\"\n        },\n        {\n            \"message\": \"You already have a sender identity with the same nickname.\",\n            \"field\": \"nickname\"\n        },\n        {\n            \"message\": \"from_name is required.\",\n            \"field\": \"from_name\"\n        },\n        {\n            \"message\": \"from_email is required.\",\n            \"field\": \"from_email\"\n        },\n        {\n            \"message\": \"From email is not a valid email address.\",\n            \"field\": \"from_email\"\n        },\n        {\n            \"message\": \"reply_to is required.\",\n            \"field\": \"reply_to\"\n        },\n        {\n            \"message\": \"Reply to email is not a valid email address.\",\n            \"field\": \"reply_to\"\n        },\n        {\n            \"message\": \"address is required.\",\n            \"field\": \"address\"\n        },\n        {\n            \"message\": \"city is required.\",\n            \"field\": \"city\"\n        },\n        {\n            \"message\": \"country is required.\",\n            \"field\": \"country\"\n        }\n    ]\n}"
              }
        '403':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\"\n                    },\n                    \"field\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"message\": \"You may only update a sender identity when it is unlocked.\",\n            \"field\": \"locked\"\n        }\n    ]\n}"
              }
        '404':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\"\n                    },\n                    \"field\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"message\": \"resource not found\",\n            \"field\": \"id\"\n        }\n    ]\n}"
              }
      securedBy:
        - null
    get:
      description: |-
        **This endpoint allows you to retrieve a specific sender identity.**

        Sender Identities are required to be verified before use. If your domain has been whitelabeled it will auto verify on creation. Otherwise an email will be sent to the `from.email`.
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"senderID\"\n}",
                "example": "{\n    \"id\": 1,\n    \"nickname\": \"My Sender ID\",\n    \"from\": {\n        \"email\": \"from@example.com\",\n        \"name\": \"Example INC\"\n    },\n    \"reply_to\": {\n        \"email\": \"replyto@example.com\",\n        \"name\": \"Example INC\"\n    },\n    \"address\": \"123 Elm St.\",\n    \"address_2\": \"Apt. 456\",\n    \"city\": \"Denver\",\n    \"state\": \"Colorado\",\n    \"zip\": \"80202\",\n    \"country\": \"United States\",\n    \"verified\": true,\n    \"updated_at\": 1449872165,\n    \"created_at\": 1449872165,\n    \"locked\": false\n}"
              }
        '404':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\"\n                    },\n                    \"field\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"message\": \"resource not found\",\n            \"field\": \"id\"\n        }\n    ]\n}"
              }
      securedBy:
        - null
  post:
    description: |-
      **This endpoint allows you to create a new sender identity.**

      *You may create up to 100 unique sender identities.*

      Sender Identities are required to be verified before use. If your domain has been whitelabeled it will auto verify on creation. Otherwise an email will be sent to the `from.email`.
    is:
      - onBehalfOfSubuser
    body:
      application/json: |-
        {
          "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"nickname\": {\n            \"type\": \"string\",\n            \"description\": \"A nickname for the sender identity. Not used for sending.\"\n        },\n        \"from\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"email\": {\n                    \"type\": \"string\",\n                    \"description\": \"This is where the email will appear to originate from for your recipient\"\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"This is the name appended to the from email field. IE - Your name or company name.\"\n                }\n            },\n            \"required\": [\n                \"email\"\n            ]\n        },\n        \"reply_to\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"email\": {\n                    \"type\": \"string\",\n                    \"description\": \"This is the email that your recipient will reply to.\"\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"This is the name appended to the reply to email field. IE - Your name or company name.\"\n                }\n            },\n            \"required\": [\n                \"email\"\n            ]\n        },\n        \"address\": {\n            \"type\": \"string\",\n            \"description\": \"The physical address of the sender identity.\"\n        },\n        \"address_2\": {\n            \"type\": \"string\",\n            \"description\": \"Additional sender identity address information.\"\n        },\n        \"city\": {\n            \"type\": \"string\",\n            \"description\": \"The city of the sender identity.\"\n        },\n        \"state\": {\n            \"type\": \"string\",\n            \"description\": \"The state of the sender identity.\"\n        },\n        \"zip\": {\n            \"type\": \"string\",\n            \"description\": \"The zipcode of the sender identity.\"\n        },\n        \"country\": {\n            \"type\": \"string\",\n            \"description\": \"The country of the sender identity.\"\n        }\n    },\n    \"required\": [\n        \"nickname\",\n        \"address\",\n        \"city\",\n        \"country\"\n    ]\n}",
          "example": "{\n    \"nickname\": \"My Sender ID\",\n    \"from\": {\n        \"email\": \"from@example.com\",\n        \"name\": \"Example INC\"\n    },\n    \"reply_to\": {\n        \"email\": \"replyto@example.com\",\n        \"name\": \"Example INC\"\n    },\n    \"address\": \"123 Elm St.\",\n    \"address_2\": \"Apt. 456\",\n    \"city\": \"Denver\",\n    \"state\": \"Colorado\",\n    \"zip\": \"80202\",\n    \"country\": \"United States\"\n}"
        }
    responses:
      '201':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"senderID\"\n}",
              "example": "{\n    \"id\": 1,\n    \"nickname\": \"My Sender ID\",\n    \"from\": {\n        \"email\": \"from@example.com\",\n        \"name\": \"Example INC\"\n    },\n    \"reply_to\": {\n        \"email\": \"replyto@example.com\",\n        \"name\": \"Example INC\"\n    },\n    \"address\": \"123 Elm St.\",\n    \"address_2\": \"Apt. 456\",\n    \"city\": \"Denver\",\n    \"state\": \"Colorado\",\n    \"zip\": \"80202\",\n    \"country\": \"United States\",\n    \"verified\": true,\n    \"updated_at\": 1449872165,\n    \"created_at\": 1449872165,\n    \"locked\": false\n}"
            }
      '400':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\"\n                    },\n                    \"field\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
              "example": "{\n    \"errors\": [\n        {\n            \"message\": \"The JSON you have submitted cannot be parsed.\",\n            \"field\": \"\"\n        },\n        {\n            \"message\": \"You've reached your limit of 100 sender identities. Please delete one or more and try again.\",\n            \"field\": \"\"\n        },\n        {\n            \"message\": \"nickname is required.\",\n            \"field\": \"nickname\"\n        },\n        {\n            \"message\": \"You already have a sender identity with the same nickname.\",\n            \"field\": \"nickname\"\n        },\n        {\n            \"message\": \"from_name is required.\",\n            \"field\": \"from_name\"\n        },\n        {\n            \"message\": \"from_email is required.\",\n            \"field\": \"from_email\"\n        },\n        {\n            \"message\": \"From email is not a valid email address.\",\n            \"field\": \"from_email\"\n        },\n        {\n            \"message\": \"reply_to is required.\",\n            \"field\": \"reply_to\"\n        },\n        {\n            \"message\": \"Reply to email is not a valid email address.\",\n            \"field\": \"reply_to\"\n        },\n        {\n            \"message\": \"address is required.\",\n            \"field\": \"address\"\n        },\n        {\n            \"message\": \"city is required.\",\n            \"field\": \"city\"\n        },\n        {\n            \"message\": \"country is required.\",\n            \"field\": \"country\"\n        }\n    ]\n}"
            }
    securedBy:
      - null
  get:
    description: |-
      **This endpoint allows you to retrieve a list of all sender identities that have been created for your account.**

      Sender Identities are required to be verified before use. If your domain has been whitelabeled it will auto verify on creation. Otherwise an email will be sent to the `from.email`.
    is:
      - onBehalfOfSubuser
    responses:
      '200':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"result\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"senderID\"\n            }\n        }\n    }\n}",
              "example": "{\n    \"result\": [\n        {\n            \"id\": 1,\n            \"nickname\": \"My Sender ID\",\n            \"from\": {\n                \"email\": \"from@example.com\",\n                \"name\": \"Example INC\"\n            },\n            \"reply_to\": {\n                \"email\": \"replyto@example.com\",\n                \"name\": \"Example INC\"\n            },\n            \"address\": \"123 Elm St.\",\n            \"address_2\": \"Apt. 456\",\n            \"city\": \"Denver\",\n            \"state\": \"Colorado\",\n            \"zip\": \"80202\",\n            \"country\": \"United States\",\n            \"verified\": true,\n            \"updated_at\": 1449872165,\n            \"created_at\": 1449872165,\n            \"locked\": false\n        }\n    ]\n}"
            }
    securedBy:
      - null
/mail:
  displayName: mail
  /batch:
    displayName: batch
    post:
      description: |-
        **This endpoint allows you to generate a new batch ID. This batch ID can be associated with scheduled sends via the mail/send endpoint.**

        If you set the SMTPAPI header `batch_id`, it allows you to then associate multiple scheduled mail/send requests together with the same ID. Then at anytime up to 10 minutes before the schedule date, you can cancel all of the mail/send requests that have this batch ID by calling the Cancel Scheduled Send endpoint. 

        More Information:

        * [Scheduling Parameters > Batch ID](https://sendgrid.com/docs/API_Reference/SMTP_API/scheduling_parameters.html)
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"null\"\n}"
          }
      responses:
        '201':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"mail_batch_id\"\n}",
                "example": "{\n    \"batch_id\": \"YOUR_BATCH_ID\"\n}"
              }
        '401':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
              }
      securedBy:
        - null
    '/{batch_id}':
      displayName: batch_id
      uriParameters:
        batch_id:
          type: string
      get:
        description: |-
          **This endpoint allows you to validate a batch ID.**

          If you set the SMTPAPI header `batch_id`, it allows you to then associate multiple scheduled mail/send requests together with the same ID. Then at anytime up to 10 minutes before the schedule date, you can cancel all of the mail/send requests that have this batch ID by calling the Cancel Scheduled Send endpoint. 

          More Information:

          * [Scheduling Parameters > Batch ID](https://sendgrid.com/docs/API_Reference/SMTP_API/scheduling_parameters.html)
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"mail_batch_id\"\n}",
                  "example": "{\n    \"batch_id\": \"HkJ5yLYULb7Rj8GKSx7u025ouWVlMgAi\"\n}"
                }
          '400':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"invalid batch id\"\n        }\n    ]\n}"
                }
          '401':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"global:ErrorResponse\"\n}",
                  "example": "{\n    \"errors\": [\n        {\n            \"field\": null,\n            \"message\": \"authorization required\"\n        }\n    ]\n}"
                }
            description: Unexpected error in API call. See HTTP response body for details.
        securedBy:
          - null
  /send:
    displayName: send
    post:
      description: |-
        This endpoint allows you to send email over SendGrid’s v3 Web API, the most recent version of our API. If you are looking for documentation about the v2 Mail Send endpoint, please see our [v2 API Reference](https://sendgrid.com/docs/API_Reference/Web_API/mail.html).

        * Top level parameters are referred to as "global".
        * Individual fields within the personalizations array will override any other global, or “message level”, parameters that are defined outside of personalizations.
         
        **SendGrid provides libraries to help you quickly and easily integrate with the v3 Web API in 7 different languages: [C#](https://github.com/sendgrid/sendgrid-csharp), [Go](https://github.com/sendgrid/sendgrid-go), [Java](https://github.com/sendgrid/sendgrid-java), [Node JS](https://github.com/sendgrid/sendgrid-nodejs), [PHP](https://github.com/sendgrid/sendgrid-php), [Python](https://github.com/sendgrid/sendgrid-python), and [Ruby](https://github.com/sendgrid/sendgrid-ruby).**


        For more detailed information about how to use the v3 Mail Send endpoint, please visit our [Classroom](https://sendgrid.com/docs/Classroom/Send/v3_Mail_Send/index.html).
      body:
        application/json: |-
          {
            "schema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"personalizations\": {\n            \"type\": \"array\",\n            \"description\": \"An array of messages and their metadata. Each object within personalizations can be thought of as an envelope - it defines who should receive an individual message and how that message should be handled.\",\n            \"uniqueItems\": false,\n            \"maxItems\": 1000,\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"to\": {\n                        \"type\": \"array\",\n                        \"description\": \"An array of recipients. Each object within this array may contain the name, but must always contain the email, of a recipient.\",\n                        \"minItems\": 1,\n                        \"maxItems\": 1000,\n                        \"items\": {\n                            \"type\": \"email_object\"\n                        }\n                    },\n                    \"cc\": {\n                        \"type\": \"array\",\n                        \"description\": \"An array of recipients who will receive a copy of your email. Each object within this array may contain the name, but must always contain the email, of a recipient.\",\n                        \"maxItems\": 1000,\n                        \"items\": {\n                            \"type\": \"email_object\"\n                        }\n                    },\n                    \"bcc\": {\n                        \"type\": \"array\",\n                        \"description\": \"An array of recipients who will receive a blind carbon copy of your email. Each object within this array may contain the name, but must always contain the email, of a recipient.\",\n                        \"maxItems\": 1000,\n                        \"items\": {\n                            \"type\": \"email_object\"\n                        }\n                    },\n                    \"subject\": {\n                        \"type\": \"string\",\n                        \"description\": \"The subject of your email. Char length requirements, according to the RFC - http://stackoverflow.com/questions/1592291/what-is-the-email-subject-length-limit#answer-1592310\",\n                        \"minLength\": 1\n                    },\n                    \"headers\": {\n                        \"type\": \"object\",\n                        \"description\": \"A collection of JSON key/value pairs allowing you to specify specific handling instructions for your email. You may not overwrite the following headers: x-sg-id, x-sg-eid, received, dkim-signature, Content-Type, Content-Transfer-Encoding, To, From, Subject, Reply-To, CC, BCC\"\n                    },\n                    \"substitutions\": {\n                        \"type\": \"object\",\n                        \"description\": \"A collection of key/value pairs following the pattern \\\"substitution_tag\\\":\\\"value to substitute\\\". All are assumed to be strings. These substitutions will apply to the text and html content of the body of your email, in addition to the `subject` and `reply-to` parameters.\",\n                        \"maxProperties\": 10000\n                    },\n                    \"custom_args\": {\n                        \"type\": \"object\",\n                        \"description\": \"Values that are specific to this personalization that will be carried along with the email and its activity data. Substitutions will not be made on custom arguments, so any string that is entered into this parameter will be assumed to be the custom argument that you would like to be used. May not exceed 10,000 bytes.\"\n                    },\n                    \"send_at\": {\n                        \"type\": \"integer\",\n                        \"description\": \"A unix timestamp allowing you to specify when you want your email to be delivered. Scheduling more than 72 hours in advance is forbidden.\"\n                    }\n                },\n                \"required\": [\n                    \"to\"\n                ]\n            }\n        },\n        \"from\": {\n            \"type\": \"email_object\"\n        },\n        \"reply_to\": {\n            \"type\": \"email_object\"\n        },\n        \"subject\": {\n            \"type\": \"string\",\n            \"description\": \"The global, or “message level”, subject of your email. This may be overridden by personalizations[x].subject.\",\n            \"minLength\": 1\n        },\n        \"content\": {\n            \"type\": \"array\",\n            \"description\": \"An array in which you may specify the content of your email. You can include multiple mime types of content, but you must specify at least one mime type. To include more than one mime type, simply add another object to the array containing the `type` and `value` parameters.\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"type\": {\n                        \"type\": \"string\",\n                        \"description\": \"The mime type of the content you are including in your email. For example, “text/plain” or “text/html”.\",\n                        \"minLength\": 1\n                    },\n                    \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The actual content of the specified mime type that you are including in your email.\",\n                        \"minLength\": 1\n                    }\n                },\n                \"required\": [\n                    \"type\",\n                    \"value\"\n                ]\n            }\n        },\n        \"attachments\": {\n            \"type\": \"array\",\n            \"description\": \"An array of objects in which you can specify any attachments you want to include.\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"content\": {\n                        \"type\": \"string\",\n                        \"description\": \"The Base64 encoded content of the attachment.\",\n                        \"minLength\": 1\n                    },\n                    \"type\": {\n                        \"type\": \"string\",\n                        \"description\": \"The mime type of the content you are attaching. For example, “text/plain” or “text/html”.\",\n                        \"minLength\": 1\n                    },\n                    \"filename\": {\n                        \"type\": \"string\",\n                        \"description\": \"The filename of the attachment.\"\n                    },\n                    \"disposition\": {\n                        \"type\": \"string\",\n                        \"default\": \"attachment\",\n                        \"description\": \"The content-disposition of the attachment specifying how you would like the attachment to be displayed. For example, “inline” results in the attached file being displayed automatically within the message while “attachment” results in the attached file requiring some action to be taken before it is displayed (e.g. opening or downloading the file).\",\n                        \"enum\": [\n                            \"inline\",\n                            \"attachment\"\n                        ]\n                    },\n                    \"content_id\": {\n                        \"type\": \"string\",\n                        \"description\": \"The content id for the attachment. This is used when the disposition is set to “inline” and the attachment is an image, allowing the file to be displayed within the body of your email.\"\n                    }\n                },\n                \"required\": [\n                    \"content\",\n                    \"filename\"\n                ]\n            }\n        },\n        \"template_id\": {\n            \"type\": \"string\",\n            \"description\": \"The id of a template that you would like to use. If you use a template that contains a subject and content (either text or html), you do not need to specify those at the personalizations nor message level. \"\n        },\n        \"sections\": {\n            \"type\": \"object\",\n            \"description\": \"An object of key/value pairs that define block sections of code to be used as substitutions.\"\n        },\n        \"headers\": {\n            \"type\": \"object\",\n            \"description\": \"An object containing key/value pairs of header names and the value to substitute for them. You must ensure these are properly encoded if they contain unicode characters. Must not be one of the reserved headers.\"\n        },\n        \"categories\": {\n            \"type\": \"array\",\n            \"description\": \"An array of category names for this message. Each category name may not exceed 255 characters. \",\n            \"uniqueItems\": true,\n            \"maxItems\": 10,\n            \"items\": {\n                \"type\": \"string\",\n                \"maxLength\": 255\n            }\n        },\n        \"custom_args\": {\n            \"type\": \"object\",\n            \"description\": \"Values that are specific to the entire send that will be carried along with the email and its activity data. Substitutions will not be made on custom arguments, so any string that is entered into this parameter will be assumed to be the custom argument that you would like to be used. This parameter is overridden by personalizations[x].custom_args if that parameter has been defined. Total custom args size may not exceed 10,000 bytes.\"\n        },\n        \"send_at\": {\n            \"type\": \"integer\",\n            \"description\": \"A unix timestamp allowing you to specify when you want your email to be delivered. This may be overridden by the personalizations[x].send_at parameter. Scheduling more ta 72 hours in advance is forbidden.\"\n        },\n        \"batch_id\": {\n            \"type\": \"string\",\n            \"description\": \"This ID represents a batch of emails to be sent at the same time. Including a batch_id in your request allows you include this email in that batch, and also enables you to cancel or pause the delivery of that batch. For more information, see https://sendgrid.com/docs/API_Reference/Web_API_v3/cancel_schedule_send.html \"\n        },\n        \"asm\": {\n            \"type\": \"object\",\n            \"description\": \"An object allowing you to specify how to handle unsubscribes.\",\n            \"properties\": {\n                \"group_id\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The unsubscribe group to associate with this email.\"\n                },\n                \"groups_to_display\": {\n                    \"type\": \"array\",\n                    \"description\": \"An array containing the unsubscribe groups that you would like to be displayed on the unsubscribe preferences page.\",\n                    \"maxItems\": 25,\n                    \"items\": {\n                        \"type\": \"integer\"\n                    }\n                }\n            },\n            \"required\": [\n                \"group_id\"\n            ]\n        },\n        \"ip_pool_name\": {\n            \"type\": \"string\",\n            \"description\": \"The IP Pool that you would like to send this email from.\",\n            \"minLength\": 2,\n            \"maxLength\": 64\n        },\n        \"mail_settings\": {\n            \"type\": \"object\",\n            \"description\": \"A collection of different mail settings that you can use to specify how you would like this email to be handled.\",\n            \"properties\": {\n                \"bcc\": {\n                    \"type\": \"object\",\n                    \"description\": \"This allows you to have a blind carbon copy automatically sent to the specified email address for every email that is sent.\",\n                    \"properties\": {\n                        \"enable\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"Indicates if this setting is enabled.\"\n                        },\n                        \"email\": {\n                            \"type\": \"string\",\n                            \"description\": \"The email address that you would like to receive the BCC.\"\n                        }\n                    }\n                },\n                \"bypass_list_management\": {\n                    \"type\": \"object\",\n                    \"description\": \"Allows you to bypass all unsubscribe groups and suppressions to ensure that the email is delivered to every single recipient. This should only be used in emergencies when it is absolutely necessary that every recipient receives your email.\",\n                    \"properties\": {\n                        \"enable\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"Indicates if this setting is enabled.\"\n                        }\n                    }\n                },\n                \"footer\": {\n                    \"type\": \"object\",\n                    \"description\": \"The default footer that you would like included on every email.\",\n                    \"properties\": {\n                        \"enable\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"Indicates if this setting is enabled.\"\n                        },\n                        \"text\": {\n                            \"type\": \"string\",\n                            \"description\": \"The plain text content of your footer.\"\n                        },\n                        \"html\": {\n                            \"type\": \"string\",\n                            \"description\": \"The HTML content of your footer.\"\n                        }\n                    }\n                },\n                \"sandbox_mode\": {\n                    \"type\": \"object\",\n                    \"description\": \"This allows you to send a test email to ensure that your request body is valid and formatted correctly.\",\n                    \"properties\": {\n                        \"enable\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"Indicates if this setting is enabled.\"\n                        }\n                    }\n                },\n                \"spam_check\": {\n                    \"type\": \"object\",\n                    \"description\": \"This allows you to test the content of your email for spam.\",\n                    \"properties\": {\n                        \"enable\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"Indicates if this setting is enabled.\"\n                        },\n                        \"threshold\": {\n                            \"type\": \"integer\",\n                            \"description\": \"The threshold used to determine if your content qualifies as spam on a scale from 1 to 10, with 10 being most strict, or most likely to be considered as spam.\",\n                            \"minimum\": 1,\n                            \"maximum\": 10\n                        },\n                        \"post_to_url\": {\n                            \"type\": \"string\",\n                            \"description\": \"An Inbound Parse URL that you would like a copy of your email along with the spam report to be sent to.\"\n                        }\n                    }\n                }\n            }\n        },\n        \"tracking_settings\": {\n            \"type\": \"object\",\n            \"description\": \"Settings to determine how you would like to track the metrics of how your recipients interact with your email.\",\n            \"properties\": {\n                \"click_tracking\": {\n                    \"type\": \"object\",\n                    \"description\": \"Allows you to track whether a recipient clicked a link in your email.\",\n                    \"properties\": {\n                        \"enable\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"Indicates if this setting is enabled.\"\n                        },\n                        \"enable_text\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"Indicates if this setting should be included in the text/plain portion of your email.\"\n                        }\n                    }\n                },\n                \"open_tracking\": {\n                    \"type\": \"object\",\n                    \"description\": \"Allows you to track whether the email was opened or not, but including a single pixel image in the body of the content. When the pixel is loaded, we can log that the email was opened.\",\n                    \"properties\": {\n                        \"enable\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"Indicates if this setting is enabled.\"\n                        },\n                        \"substitution_tag\": {\n                            \"type\": \"string\",\n                            \"description\": \"Allows you to specify a substitution tag that you can insert in the body of your email at a location that you desire. This tag will be replaced by the open tracking pixel.\"\n                        }\n                    }\n                },\n                \"subscription_tracking\": {\n                    \"type\": \"object\",\n                    \"description\": \"Allows you to insert a subscription management link at the bottom of the text and html bodies of your email. If you would like to specify the location of the link within your email, you may use the substitution_tag.\",\n                    \"properties\": {\n                        \"enable\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"Indicates if this setting is enabled.\"\n                        },\n                        \"text\": {\n                            \"type\": \"string\",\n                            \"description\": \"Text to be appended to the email, with the subscription tracking link. You may control where the link is by using the tag <% %>\"\n                        },\n                        \"html\": {\n                            \"type\": \"string\",\n                            \"description\": \"HTML to be appended to the email, with the subscription tracking link. You may control where the link is by using the tag <% %>\"\n                        },\n                        \"substitution_tag\": {\n                            \"type\": \"string\",\n                            \"description\": \"A tag that will be replaced with the unsubscribe URL. for example: [unsubscribe_url]. If this parameter is used, it will override both the `text` and `html` parameters. The URL of the link will be placed at the substitution tag’s location, with no additional formatting.\"\n                        }\n                    }\n                },\n                \"ganalytics\": {\n                    \"type\": \"object\",\n                    \"description\": \"Allows you to enable tracking provided by Google Analytics.\",\n                    \"properties\": {\n                        \"enable\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"Indicates if this setting is enabled.\"\n                        },\n                        \"utm_source\": {\n                            \"type\": \"string\",\n                            \"description\": \"Name of the referrer source. (e.g. Google, SomeDomain.com, or Marketing Email)\"\n                        },\n                        \"utm_medium\": {\n                            \"type\": \"string\",\n                            \"description\": \"Name of the marketing medium. (e.g. Email)\"\n                        },\n                        \"utm_term\": {\n                            \"type\": \"string\",\n                            \"description\": \"Used to identify any paid keywords.\\t\"\n                        },\n                        \"utm_content\": {\n                            \"type\": \"string\",\n                            \"description\": \"Used to differentiate your campaign from advertisements.\\t\"\n                        },\n                        \"utm_campaign\": {\n                            \"type\": \"string\",\n                            \"description\": \"The name of the campaign.\\t\"\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"required\": [\n        \"personalizations\",\n        \"from\",\n        \"subject\",\n        \"content\"\n    ]\n}",
            "example": "{\n    \"personalizations\": [\n        {\n            \"to\": [\n                {\n                    \"email\": \"john.doe@example.com\",\n                    \"name\": \"John Doe\"\n                }\n            ],\n            \"subject\": \"Hello, World!\"\n        }\n    ],\n    \"from\": {\n        \"email\": \"sam.smith@example.com\",\n        \"name\": \"Sam Smith\"\n    },\n    \"reply_to\": {\n        \"email\": \"sam.smith@example.com\",\n        \"name\": \"Sam Smith\"\n    },\n    \"subject\": \"Hello, World!\",\n    \"content\": [\n        {\n            \"type\": \"text/html\",\n            \"value\": \"<html><p>Hello, world!</p></html>\"\n        }\n    ]\n}"
          }
      responses:
        '202':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"null\"\n}",
                "example": "{}"
              }
        '400':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"errors\"\n}"
              }
        '401':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"errors\"\n}"
              }
        '413':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"errors\"\n}"
              }
      securedBy:
        - null
/clients:
  displayName: clients
  /stats:
    displayName: stats
    get:
      description: |-
        **This endpoint allows you to retrieve your email statistics segmented by client type.**

        **We only store up to 7 days of email activity in our database.** By default, 500 items will be returned per request via the Advanced Stats API endpoints.

        Advanced Stats provide a more in-depth view of your email statistics and the actions taken by your recipients. You can segment these statistics by geographic location, device type, client type, browser, and mailbox provider. For more information about statistics, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/index.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"advanced_stats_opens\"\n    }\n}",
                "example": "[\n    {\n        \"date\": \"2014-10-01\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"opens\": 1,\n                    \"unique_opens\": 1\n                },\n                \"name\": \"Gmail\",\n                \"type\": \"client\"\n            }\n        ]\n    },\n    {\n        \"date\": \"2014-10-02\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                },\n                \"name\": \"Gmail\",\n                \"type\": \"client\"\n            }\n        ]\n    }\n]"
              }
      queryParameters:
        start_date:
          type: string
          description: The starting date of the statistics to retrieve. Must follow format YYYY-MM-DD.
          displayName: The starting date of the statistics to retrieve. Must follow format YYYY-MM-DD.
        end_date:
          type: string
          description: The end date of the statistics to retrieve. Defaults to today. Must follow format YYYY-MM-DD.
          displayName: The end date of the statistics to retrieve. Defaults to today. Must follow format YYYY-MM-DD.
        aggregated_by:
          type: string
          description: 'How to group the statistics. Must be either "day", "week", or "month".'
          enum:
            - day
            - week
            - month
          displayName: 'How to group the statistics. Must be either "day", "week", or "month".'
      securedBy:
        - null
  '/{client_type}':
    displayName: client_type
    /stats:
      displayName: stats
      get:
        description: |-
          **This endpoint allows you to retrieve your email statistics segmented by a specific client type.**

          **We only store up to 7 days of email activity in our database.** By default, 500 items will be returned per request via the Advanced Stats API endpoints.

          ## Available Client Types
          - phone
          - tablet
          - webmail
          - desktop

          Advanced Stats provide a more in-depth view of your email statistics and the actions taken by your recipients. You can segment these statistics by geographic location, device type, client type, browser, and mailbox provider. For more information about statistics, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/index.html).
        is:
          - onBehalfOfSubuser
        responses:
          '200':
            body:
              application/json: |-
                {
                  "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"advanced_stats_opens\"\n    }\n}",
                  "example": "[\n    {\n        \"date\": \"2014-10-01\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"opens\": 1,\n                    \"unique_opens\": 1\n                },\n                \"name\": \"Gmail\",\n                \"type\": \"client\"\n            }\n        ]\n    },\n    {\n        \"date\": \"2014-10-02\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                },\n                \"name\": \"Gmail\",\n                \"type\": \"client\"\n            }\n        ]\n    }\n]"
                }
        queryParameters:
          start_date:
            type: string
            description: The starting date of the statistics to retrieve. Must follow format YYYY-MM-DD.
            displayName: The starting date of the statistics to retrieve. Must follow format YYYY-MM-DD.
          end_date:
            type: string
            description: The end date of the statistics to retrieve. Defaults to today. Must follow format YYYY-MM-DD.
            displayName: The end date of the statistics to retrieve. Defaults to today. Must follow format YYYY-MM-DD.
          aggregated_by:
            type: string
            description: 'How to group the statistics. Must be either "day", "week", or "month".'
            enum:
              - day
              - week
              - month
            displayName: 'How to group the statistics. Must be either "day", "week", or "month".'
        securedBy:
          - null
/devices:
  displayName: devices
  /stats:
    displayName: stats
    get:
      description: "**This endpoint allows you to retrieve your email statistics segmented by the device type.**\n\n**We only store up to 7 days of email activity in our database.** By default, 500 items will be returned per request via the Advanced Stats API endpoints.\n\n## Available Device Types\n| **Device** | **Description** | **Example** |\n|---|---|---|\n| Desktop | Email software on desktop computer. | I.E., Outlook, Sparrow, or Apple Mail. |\n| Webmail |\tA web-based email client. | I.E., Yahoo, Google, AOL, or Outlook.com. |\n| Phone | A smart phone. | iPhone, Android, Blackberry, etc.\n| Tablet | A tablet computer. | iPad, android based tablet, etc. |\n| Other | An unrecognized device. |\n\nAdvanced Stats provide a more in-depth view of your email statistics and the actions taken by your recipients. You can segment these statistics by geographic location, device type, client type, browser, and mailbox provider. For more information about statistics, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/index.html)."
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"advanced_stats_opens\"\n    }\n}",
                "example": "[\n    {\n        \"date\": \"2015-10-11\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-12\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-13\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-14\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-15\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-16\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-17\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-18\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-19\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-20\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-21\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 1,\n                    \"unique_opens\": 1\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-22\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-23\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-24\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-25\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-26\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 2,\n                    \"unique_opens\": 2\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-27\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-28\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-29\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-30\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-31\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-01\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-02\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-03\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-04\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-05\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-06\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-07\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-08\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-09\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-10\",\n        \"stats\": [\n            {\n                \"type\": \"device\",\n                \"name\": \"Webmail\",\n                \"metrics\": {\n                    \"opens\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    }\n]"
              }
      queryParameters:
        end_date:
          type: string
          description: The end date of the statistics to retrieve. Defaults to today.
          displayName: The end date of the statistics to retrieve. Defaults to today.
        limit:
          type: integer
          description: How many results to include on each page.
          displayName: How many results to include on each page.
        offset:
          type: integer
          description: How many results to exclude.
          displayName: How many results to exclude.
        aggregated_by:
          type: string
          description: 'How to group the statistics. Must be either "day", "week", or "month".'
          displayName: 'How to group the statistics. Must be either "day", "week", or "month".'
        start_date:
          type: string
          description: The starting date of the statistics to retrieve.
          displayName: The starting date of the statistics to retrieve.
      securedBy:
        - null
/stats:
  displayName: stats
  get:
    description: |-
      **This endpoint allows you to retrieve all of your global email statistics between a given date range.**

      Parent accounts will see aggregated stats for their account and all subuser accounts. Subuser accounts will only see their own stats.
    is:
      - onBehalfOfSubuser
    responses:
      '200':
        body:
          application/json: |-
            {
              "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"date\": {\n                \"type\": \"string\",\n                \"description\": \"The date the stats were gathered.\"\n            },\n            \"stats\": {\n                \"type\": \"array\",\n                \"description\": \"The individual email activity stats.\",\n                \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"metrics\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"blocks\": {\n                                    \"type\": \"integer\",\n                                    \"description\": \"The number of emails that were not allowed to be delivered by ISPs.\"\n                                },\n                                \"bounce_drops\": {\n                                    \"type\": \"integer\",\n                                    \"description\": \"The number of emails that were dropped because of a bounce.\"\n                                },\n                                \"bounces\": {\n                                    \"type\": \"integer\",\n                                    \"description\": \"The number of emails that bounced instead of being delivered.\"\n                                },\n                                \"clicks\": {\n                                    \"type\": \"integer\",\n                                    \"description\": \"The number of links that were clicked in your emails.\"\n                                },\n                                \"deferred\": {\n                                    \"type\": \"integer\",\n                                    \"description\": \"The number of emails that temporarily could not be delivered. \"\n                                },\n                                \"delivered\": {\n                                    \"type\": \"integer\",\n                                    \"description\": \"The number of emails SendGrid was able to confirm were actually delivered to a recipient.\"\n                                },\n                                \"invalid_emails\": {\n                                    \"type\": \"integer\",\n                                    \"description\": \"The number of recipients who had malformed email addresses or whose mail provider reported the address as invalid.\"\n                                },\n                                \"opens\": {\n                                    \"type\": \"integer\",\n                                    \"description\": \"The total number of times your emails were opened by recipients.\"\n                                },\n                                \"processed\": {\n                                    \"type\": \"integer\",\n                                    \"description\": \"Requests from your website, application, or mail client via SMTP Relay or the API that SendGrid processed.\"\n                                },\n                                \"requests\": {\n                                    \"type\": \"integer\",\n                                    \"description\": \"The number of emails that were requested to be delivered.\"\n                                },\n                                \"spam_report_drops\": {\n                                    \"type\": \"integer\",\n                                    \"description\": \"The number of emails that were dropped due to a recipient previously marking your emails as spam.\"\n                                },\n                                \"spam_reports\": {\n                                    \"type\": \"integer\",\n                                    \"description\": \"The number of recipients who marked your email as spam.\"\n                                },\n                                \"unique_clicks\": {\n                                    \"type\": \"integer\",\n                                    \"description\": \"The number of unique recipients who clicked links in your emails.\"\n                                },\n                                \"unique_opens\": {\n                                    \"type\": \"integer\",\n                                    \"description\": \"The number of unique recipients who opened your emails.\"\n                                },\n                                \"unsubscribe_drops\": {\n                                    \"type\": \"integer\",\n                                    \"description\": \"The number of emails dropped due to a recipient unsubscribing from your emails.\"\n                                },\n                                \"unsubscribes\": {\n                                    \"type\": \"integer\",\n                                    \"description\": \"The number of recipients who unsubscribed from your emails.\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"required\": [\n            \"date\",\n            \"stats\"\n        ]\n    }\n}",
              "example": "[\n    {\n        \"date\": \"2015-11-03\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounce_drops\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"invalid_emails\": 0,\n                    \"opens\": 0,\n                    \"processed\": 0,\n                    \"requests\": 0,\n                    \"spam_report_drops\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0,\n                    \"unsubscribe_drops\": 0,\n                    \"unsubscribes\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-04\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounce_drops\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"invalid_emails\": 0,\n                    \"opens\": 0,\n                    \"processed\": 0,\n                    \"requests\": 0,\n                    \"spam_report_drops\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0,\n                    \"unsubscribe_drops\": 0,\n                    \"unsubscribes\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-05\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounce_drops\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"invalid_emails\": 0,\n                    \"opens\": 0,\n                    \"processed\": 0,\n                    \"requests\": 0,\n                    \"spam_report_drops\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0,\n                    \"unsubscribe_drops\": 0,\n                    \"unsubscribes\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-06\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounce_drops\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"invalid_emails\": 0,\n                    \"opens\": 0,\n                    \"processed\": 0,\n                    \"requests\": 0,\n                    \"spam_report_drops\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0,\n                    \"unsubscribe_drops\": 0,\n                    \"unsubscribes\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-07\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounce_drops\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"invalid_emails\": 0,\n                    \"opens\": 0,\n                    \"processed\": 0,\n                    \"requests\": 0,\n                    \"spam_report_drops\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0,\n                    \"unsubscribe_drops\": 0,\n                    \"unsubscribes\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-08\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounce_drops\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"invalid_emails\": 0,\n                    \"opens\": 0,\n                    \"processed\": 0,\n                    \"requests\": 0,\n                    \"spam_report_drops\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0,\n                    \"unsubscribe_drops\": 0,\n                    \"unsubscribes\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-09\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounce_drops\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"invalid_emails\": 0,\n                    \"opens\": 0,\n                    \"processed\": 0,\n                    \"requests\": 0,\n                    \"spam_report_drops\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0,\n                    \"unsubscribe_drops\": 0,\n                    \"unsubscribes\": 0\n                }\n            }\n        ]\n    }\n]"
            }
    queryParameters:
      limit:
        type: integer
        description: The number of results to return.
        displayName: The number of results to return.
      offset:
        type: integer
        description: The point in the list to begin retrieving results.
        displayName: The point in the list to begin retrieving results.
      aggregated_by:
        type: string
        description: 'How to group the statistics. Must be either "day", "week", or "month".'
        enum:
          - day
          - week
          - month
        displayName: 'How to group the statistics. Must be either "day", "week", or "month".'
      start_date:
        type: string
        description: The starting date of the statistics to retrieve. Must follow format YYYY-MM-DD.
        displayName: The starting date of the statistics to retrieve. Must follow format YYYY-MM-DD.
      end_date:
        type: string
        description: The end date of the statistics to retrieve. Defaults to today. Must follow format YYYY-MM-DD.
        displayName: The end date of the statistics to retrieve. Defaults to today. Must follow format YYYY-MM-DD.
    securedBy:
      - null
/mailbox_providers:
  displayName: mailbox_providers
  /stats:
    displayName: stats
    get:
      description: |-
        **This endpoint allows you to retrieve your email statistics segmented by recipient mailbox provider.**

        **We only store up to 7 days of email activity in our database.** By default, 500 items will be returned per request via the Advanced Stats API endpoints.

        Advanced Stats provide a more in-depth view of your email statistics and the actions taken by your recipients. You can segment these statistics by geographic location, device type, client type, browser, and mailbox provider. For more information about statistics, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/index.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"advanced_stats_mailbox_provider\"\n    }\n}",
                "example": "[\n    {\n        \"date\": \"2015-10-11\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-12\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-13\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-14\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-15\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-16\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-17\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-18\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-19\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-20\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-21\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 1,\n                    \"drops\": 0,\n                    \"opens\": 1,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 1\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-22\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-23\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-24\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-25\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-26\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 2,\n                    \"drops\": 0,\n                    \"opens\": 2,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 2\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-27\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-28\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-29\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-30\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-31\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-01\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-02\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-03\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-04\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-05\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-06\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-07\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-08\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-09\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-10\",\n        \"stats\": [\n            {\n                \"type\": \"mailbox_provider\",\n                \"name\": \"Gmail\",\n                \"metrics\": {\n                    \"blocks\": 0,\n                    \"bounces\": 0,\n                    \"clicks\": 0,\n                    \"deferred\": 0,\n                    \"delivered\": 0,\n                    \"drops\": 0,\n                    \"opens\": 0,\n                    \"spam_reports\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    }\n]"
              }
      queryParameters:
        limit:
          type: integer
          description: The number of results to include on each page.
          displayName: The number of results to include on each page.
        offset:
          type: integer
          description: The number of results to exclude.
          displayName: The number of results to exclude.
        aggregated_by:
          type: string
          description: 'How to group the stats. Must be either "day", "wee", or "month".'
          enum:
            - day
            - week
            - month
          displayName: 'How to group the stats. Must be either "day", "wee", or "month".'
        start_date:
          type: string
          description: The starting date of the statistics to retrieve. Must follow format YYYY-MM-DD.
          displayName: The starting date of the statistics to retrieve. Must follow format YYYY-MM-DD.
        end_date:
          type: string
          description: The end date of the statistics to retrieve. Defaults to today. Must follow format YYYY-MM-DD.
          displayName: The end date of the statistics to retrieve. Defaults to today. Must follow format YYYY-MM-DD.
        mailbox_providers:
          type: string
          description: The mail box providers to get statistics for. You can include up to 10 by including this parameter multiple times.
          displayName: The mail box providers to get statistics for. You can include up to 10 by including this parameter multiple times.
      securedBy:
        - null
/browsers:
  displayName: browsers
  /stats:
    displayName: stats
    get:
      description: |-
        **This endpoint allows you to retrieve your email statistics segmented by browser type.**

        **We only store up to 7 days of email activity in our database.** By default, 500 items will be returned per request via the Advanced Stats API endpoints.

        Advanced Stats provide a more in-depth view of your email statistics and the actions taken by your recipients. You can segment these statistics by geographic location, device type, client type, browser, and mailbox provider. For more information about statistics, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/index.html).
      is:
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"advanced_stats_clicks\"\n    }\n}",
                "example": "[\n    {\n        \"date\": \"2014-10-01\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"unique_clicks\": 0\n                },\n                \"name\": \"Chrome\",\n                \"type\": \"browser\"\n            },\n            {\n                \"metrics\": {\n                    \"clicks\": 1,\n                    \"unique_clicks\": 1\n                },\n                \"name\": \"Firefox\",\n                \"type\": \"browser\"\n            }\n        ]\n    },\n    {\n        \"date\": \"2014-10-02\",\n        \"stats\": [\n            {\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"unique_clicks\": 0\n                },\n                \"name\": \"Chrome\",\n                \"type\": \"browser\"\n            },\n            {\n                \"metrics\": {\n                    \"clicks\": 1,\n                    \"unique_clicks\": 1\n                },\n                \"name\": \"Firefox\",\n                \"type\": \"browser\"\n            }\n        ]\n    }\n]"
              }
      queryParameters:
        start_date:
          type: string
          description: The starting date of the statistics to retrieve. Must follow format YYYY-MM-DD.
          displayName: The starting date of the statistics to retrieve. Must follow format YYYY-MM-DD.
        end_date:
          type: string
          description: The end date of the statistics to retrieve. Defaults to today.
          displayName: The end date of the statistics to retrieve. Defaults to today.
        limit:
          type: string
          description: The number of results to include on each page.
          displayName: The number of results to include on each page.
        offset:
          type: string
          description: The number of results to exclude.
          displayName: The number of results to exclude.
        aggregated_by:
          type: string
          description: 'How to group the stats. Must be either "day", "week", or "month".'
          enum:
            - day
            - week
            - month
          displayName: 'How to group the stats. Must be either "day", "week", or "month".'
        browsers:
          type: string
          description: The browsers to get statistics for. You can include up to 10 different browsers by including this parameter multiple times.
          displayName: The browsers to get statistics for. You can include up to 10 different browsers by including this parameter multiple times.
      securedBy:
        - null
/geo:
  displayName: geo
  /stats:
    displayName: stats
    get:
      description: |-
        **This endpoint allows you to retrieve your email statistics segmented by country and state/province.**

        **We only store up to 7 days of email activity in our database.** By default, 500 items will be returned per request via the Advanced Stats API endpoints.

        Advanced Stats provide a more in-depth view of your email statistics and the actions taken by your recipients. You can segment these statistics by geographic location, device type, client type, browser, and mailbox provider. For more information about statistics, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/index.html).
      is:
        - authorizationHeader
        - onBehalfOfSubuser
      responses:
        '200':
          body:
            application/json: |-
              {
                "schema": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"advanced_stats_country\"\n    }\n}",
                "example": "[\n    {\n        \"date\": \"2015-10-11\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-12\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-13\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-14\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-15\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-16\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-17\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-18\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-19\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-20\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-21\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 1,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 1\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-22\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-23\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-24\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-25\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-26\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-27\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-28\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-29\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-30\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-10-31\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-01\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-02\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-03\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-04\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-05\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-06\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-07\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-08\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-09\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    },\n    {\n        \"date\": \"2015-11-10\",\n        \"stats\": [\n            {\n                \"type\": \"province\",\n                \"name\": \"TX\",\n                \"metrics\": {\n                    \"clicks\": 0,\n                    \"opens\": 0,\n                    \"unique_clicks\": 0,\n                    \"unique_opens\": 0\n                }\n            }\n        ]\n    }\n]"
              }
      queryParameters:
        limit:
          type: integer
          description: How many results to include on each page.
          displayName: How many results to include on each page.
        offset:
          type: integer
          description: How many results to exclude.
          displayName: How many results to exclude.
        aggregated_by:
          type: string
          description: 'How you would like the statistics to be grouped. Must be either "day", "week", or "month".'
          enum:
            - day
            - week
            - month
          displayName: 'How you would like the statistics to be grouped. Must be either "day", "week", or "month".'
        start_date:
          type: string
          description: The starting date of the statistics to retrieve. Must be in format YYYY-MM-DD
          displayName: The starting date of the statistics to retrieve. Must be in format YYYY-MM-DD
        end_date:
          type: string
          default: The date the request is made.
          description: 'The end date of the statistics to retrieve. '
          displayName: 'The end date of the statistics to retrieve. '
        country:
          type: string
          description: The country you would like to see statistics for. Currently only supported for US and CA.
          enum:
            - US
            - CA
          displayName: The country you would like to see statistics for. Currently only supported for US and CA.
schemas:
  - contactdb_recipient_response: |-
      {
          "title": "ContactDB: Recipient response",
          "type": "object",
          "properties": {
              "error_count": {
                  "type": "number",
                  "default": 0,
                  "description": "The number of errors found while adding recipients."
              },
              "error_indices": {
                  "type": "array",
                  "default": [],
                  "description": "The indices of the recipient(s) sent that caused the error. ",
                  "items": {
                      "type": "number"
                  }
              },
              "new_count": {
                  "type": "number",
                  "default": 0,
                  "description": "The count of new recipients added to the contactdb."
              },
              "persisted_recipients": {
                  "type": "array",
                  "default": [],
                  "description": "The recipient IDs of the recipients that already existed from this request.",
                  "items": {
                      "type": "string"
                  }
              },
              "updated_count": {
                  "type": "number",
                  "default": 0,
                  "description": "The recipients who were updated from this request."
              },
              "errors": {
                  "type": "array",
                  "items": {
                      "type": "object",
                      "properties": {
                          "message": {
                              "type": "string"
                          },
                          "error_indices": {
                              "type": "array",
                              "items": {
                                  "type": "number"
                              }
                          }
                      }
                  }
              }
          },
          "required": [
              "error_count",
              "new_count",
              "persisted_recipients",
              "updated_count"
          ]
      }
  - suppression_group: |-
      {
          "title": "Suppressions: Suppression Group",
          "type": "object",
          "properties": {
              "id": {
                  "type": "number",
                  "description": "The id of the suppression group."
              },
              "name": {
                  "type": "string",
                  "description": "The name of the suppression group. Each group created by a user must have a unique name.",
                  "maxLength": 30
              },
              "description": {
                  "type": "string",
                  "description": "A description of the suppression group.",
                  "maxLength": 100
              },
              "last_email_sent_at": {
                  "type": "null"
              },
              "is_default": {
                  "type": "boolean",
                  "default": false,
                  "description": "Indicates if this is the default suppression group."
              }
          },
          "required": [
              "id",
              "name",
              "description"
          ]
      }
  - advanced_stats_country: |-
      {
          "title": "Stats: Advanced Stats with Clicks and Opens",
          "type": "object",
          "properties": {
              "date": {
                  "type": "string",
                  "description": "The date that the events occurred."
              },
              "stats": {
                  "type": "array",
                  "description": "The statistics of the email events.",
                  "items": {
                      "type": "object",
                      "properties": {
                          "type": {
                              "type": "string",
                              "description": "The type of segmentation."
                          },
                          "name": {
                              "type": "string",
                              "description": "The name of the specific segmentation."
                          },
                          "metrics": {
                              "type": "object",
                              "description": "The individual events and their stats.",
                              "required": [
                                  "clicks",
                                  "opens",
                                  "unique_clicks",
                                  "unique_opens"
                              ],
                              "properties": {
                                  "clicks": {
                                      "type": "integer",
                                      "description": "The number of links that were clicked in your emails."
                                  },
                                  "opens": {
                                      "type": "integer",
                                      "description": "The total number of times your emails were opened by recipients."
                                  },
                                  "unique_clicks": {
                                      "type": "integer",
                                      "description": "The number of unique recipients who clicked links in your emails."
                                  },
                                  "unique_opens": {
                                      "type": "integer",
                                      "description": "The number of unique recipients who opened your emails."
                                  }
                              }
                          }
                      },
                      "required": [
                          "type",
                          "name",
                          "metrics"
                      ]
                  }
              }
          },
          "required": [
              "date",
              "stats"
          ]
      }
  - 'whitelabel:domain_spf': |-
      {
          "title": "Whitelabel - Domain",
          "type": "object",
          "properties": {
              "id": {
                  "type": "integer",
                  "description": "The ID of the domain whitelabel."
              },
              "domain": {
                  "type": "string",
                  "description": "The domain that this whitelabel was created for."
              },
              "subdomain": {
                  "type": "string",
                  "description": "The subdomain that was used to create this whitelabel."
              },
              "username": {
                  "type": "string",
                  "description": "The username of the account that this whitelabel is associated with."
              },
              "user_id": {
                  "type": "integer",
                  "description": "The user_id of the account that this whitelabel is associated with."
              },
              "ips": {
                  "type": "array",
                  "description": "The IP addresses that are included in the SPF record for this whitelabel.",
                  "items": {}
              },
              "custom_spf": {
                  "type": "boolean",
                  "description": "Indicates if this whitelabel uses custom SPF."
              },
              "default": {
                  "type": "boolean",
                  "description": "Indicates if this is the default whitelabel."
              },
              "legacy": {
                  "type": "boolean",
                  "description": "Indicates if this whitelabel was created using the legacy whitelabel tool."
              },
              "automatic_security": {
                  "type": "boolean",
                  "description": "Indicates if this whitelabel uses automated security."
              },
              "valid": {
                  "type": "boolean",
                  "description": "Indicates if this is a valid whitelabel."
              },
              "dns": {
                  "type": "object",
                  "description": "The DNS records for this whitelabel.",
                  "required": [
                      "mail_server",
                      "subdomain_spf",
                      "domain_spf",
                      "dkim"
                  ],
                  "properties": {
                      "mail_server": {
                          "type": "object",
                          "description": "Designates which mail server is responsible for accepting messages from a domain.",
                          "required": [
                              "host",
                              "type",
                              "data",
                              "valid"
                          ],
                          "properties": {
                              "host": {
                                  "type": "string",
                                  "description": "The domain sending the messages."
                              },
                              "type": {
                                  "type": "string",
                                  "description": "They type of DNS record."
                              },
                              "data": {
                                  "type": "string",
                                  "description": "The mail server responsible for accepting messages from the sending domain."
                              },
                              "valid": {
                                  "type": "boolean",
                                  "description": "Indicates if this is a valid DNS record."
                              }
                          }
                      },
                      "subdomain_spf": {
                          "type": "object",
                          "description": "The SPF record for the subdomain used to create this whitelabel.",
                          "required": [
                              "host",
                              "type",
                              "data",
                              "valid"
                          ],
                          "properties": {
                              "host": {
                                  "type": "string",
                                  "description": "The domain that this SPF record will be used to authenticate."
                              },
                              "type": {
                                  "type": "string",
                                  "description": "The type of data in the SPF record."
                              },
                              "data": {
                                  "type": "string",
                                  "description": "The SPF record."
                              },
                              "valid": {
                                  "type": "boolean",
                                  "description": "Indicates if this is a valid SPF record."
                              }
                          }
                      },
                      "domain_spf": {
                          "type": "object",
                          "description": "The SPF record for the root domain.",
                          "required": [
                              "host",
                              "type",
                              "data",
                              "valid"
                          ],
                          "properties": {
                              "host": {
                                  "type": "string",
                                  "description": "The root domain that this SPF record will be used to authenticate."
                              },
                              "type": {
                                  "type": "string",
                                  "description": "The type of data in the SPF record."
                              },
                              "data": {
                                  "type": "string",
                                  "description": "The SPF record."
                              },
                              "valid": {
                                  "type": "boolean",
                                  "description": "Indicates if the SPF record is valid."
                              }
                          }
                      },
                      "dkim": {
                          "type": "object",
                          "description": "The DKIM record for messages sent using this whitelabel.",
                          "required": [
                              "host",
                              "type",
                              "data",
                              "valid"
                          ],
                          "properties": {
                              "host": {
                                  "type": "string",
                                  "description": "The DNS labels for the DKIM signature."
                              },
                              "type": {
                                  "type": "string",
                                  "description": "The type of data in the DKIM record."
                              },
                              "data": {
                                  "type": "string",
                                  "description": "The DKIM record."
                              },
                              "valid": {
                                  "type": "boolean",
                                  "description": "Indicates if the DKIM record is valid."
                              }
                          }
                      }
                  }
              }
          },
          "required": [
              "id",
              "domain",
              "subdomain",
              "username",
              "user_id",
              "ips",
              "custom_spf",
              "default",
              "legacy",
              "automatic_security",
              "valid",
              "dns"
          ]
      }
  - mail_settings_footer: |-
      {
          "title": "Mail Settings: Footer",
          "type": "object",
          "properties": {
              "enabled": {
                  "type": "boolean",
                  "description": "Indicates if the Footer mail setting is currently enabled."
              },
              "html_content": {
                  "type": "string",
                  "description": "The custom HTML content of your email footer."
              },
              "plain_content": {
                  "type": "string",
                  "description": "The plain text content of your email footer."
              }
          }
      }
  - ip_pool: |-
      {
          "title": "IP Pools: Pool",
          "type": "object",
          "properties": {
              "name": {
                  "type": "string",
                  "description": "The name of the IP pool.",
                  "maxLength": 64
              }
          },
          "required": [
              "name"
          ]
      }
  - mail_settings_spam_check: |-
      {
          "title": "Mail Settings: Spam Check",
          "type": "object",
          "properties": {
              "enabled": {
                  "type": "boolean",
                  "description": "Indicates if your Spam Checker mail setting is enabled."
              },
              "max_score": {
                  "type": "integer",
                  "default": 5,
                  "description": "The spam threshold. Can range from 1 to 10. The lower the number, the more strict the filtering.",
                  "minimum": 1,
                  "maximum": 10
              },
              "url": {
                  "type": "string",
                  "description": "The inbound parse URL where you would like the spam messages to be sent to."
              }
          },
          "required": [
              "enabled"
          ]
      }
  - contactdb_segments: |-
      {
          "title": "Create a Segment request",
          "type": "object",
          "properties": {
              "name": {
                  "type": "string",
                  "description": "The name of this segment."
              },
              "list_id": {
                  "type": "integer",
                  "description": "The list id from which to make this segment. Not including this ID will mean your segment is created from the main contactdb rather than a list."
              },
              "conditions": {
                  "type": "array",
                  "description": "The conditions for a recipient to be included in this segment.",
                  "items": {
                      "$ref": "#/definitions/contactdb_segments_conditions"
                  }
              },
              "recipient_count": {
                  "type": "number",
                  "description": "The count of recipients in this list. This is not included on creation of segments."
              }
          },
          "required": [
              "name",
              "conditions"
          ]
      }
  - 'whitelabel::domain': |-
      {
          "title": "Whitelabel - Domain",
          "type": "object",
          "properties": {
              "id": {
                  "type": "number",
                  "description": "The ID of the domain whitelabel."
              },
              "user_id": {
                  "type": "number",
                  "description": "The ID of the user that this whitelabel will be associated with."
              },
              "subdomain": {
                  "type": "string",
                  "description": "The subdomain to use for this domain whitelabel."
              },
              "domain": {
                  "type": "string",
                  "description": "The domain that this whitelabel is being created for."
              },
              "username": {
                  "type": "string",
                  "description": "The username that this whitelabel will be associated with."
              },
              "ips": {
                  "type": "array",
                  "description": "The IPs to be included in the custom SPF record for this domain whitelabel.",
                  "items": {
                      "type": "object"
                  }
              },
              "custom_spf": {
                  "type": "boolean",
                  "description": "Indicates whether this domain whitelabel will use custom SPF."
              },
              "default": {
                  "type": "boolean",
                  "description": "Indicates if this domain whitelabel is the default whitelabel."
              },
              "legacy": {
                  "type": "boolean",
                  "description": "Indicates if this domain whitelabel was created using the legacy whitelabel tool."
              },
              "automatic_security": {
                  "type": "boolean",
                  "description": "Indicates if this domain whitelabel uses automated security."
              },
              "valid": {
                  "type": "boolean",
                  "description": "Indicates if this is a valid whitelabel."
              },
              "dns": {
                  "type": "object",
                  "description": "The DNS records for this whitelabel that are used to authenticate the sending domain.",
                  "required": [
                      "mail_cname",
                      "dkim1",
                      "dkim2"
                  ],
                  "properties": {
                      "mail_cname": {
                          "type": "object",
                          "description": "The CNAME for your sending domain that points to sendgrid.net.",
                          "required": [
                              "valid",
                              "type",
                              "host",
                              "data"
                          ],
                          "properties": {
                              "valid": {
                                  "type": "boolean",
                                  "description": "Indicates if this is a valid CNAME."
                              },
                              "type": {
                                  "type": "string",
                                  "description": "The type of DNS record."
                              },
                              "host": {
                                  "type": "string",
                                  "description": "The domain that this CNAME is created for.",
                                  "format": "hostname"
                              },
                              "data": {
                                  "type": "string",
                                  "description": "The CNAME record."
                              }
                          }
                      },
                      "dkim1": {
                          "type": "object",
                          "description": "A DNS record.",
                          "required": [
                              "valid",
                              "type",
                              "host",
                              "data"
                          ],
                          "properties": {
                              "valid": {
                                  "type": "boolean",
                                  "description": "Indicates if this is a valid DNS record."
                              },
                              "type": {
                                  "type": "string",
                                  "description": "The type of DNS record."
                              },
                              "host": {
                                  "type": "string",
                                  "description": "The domain that this DNS record was created for."
                              },
                              "data": {
                                  "type": "string",
                                  "description": "The DNS record."
                              }
                          }
                      },
                      "dkim2": {
                          "type": "object",
                          "description": "A DNS record.",
                          "required": [
                              "valid",
                              "type",
                              "host",
                              "data"
                          ],
                          "properties": {
                              "valid": {
                                  "type": "boolean",
                                  "description": "Indicates if this is a valid DNS record."
                              },
                              "type": {
                                  "type": "string",
                                  "description": "The type of DNS record."
                              },
                              "host": {
                                  "type": "string",
                                  "description": "The domain that this DNS record was created for."
                              },
                              "data": {
                                  "type": "string",
                                  "description": "The DNS record."
                              }
                          }
                      }
                  }
              }
          },
          "required": [
              "id",
              "user_id",
              "subdomain",
              "domain",
              "username",
              "ips",
              "custom_spf",
              "default",
              "legacy",
              "automatic_security",
              "valid",
              "dns"
          ]
      }
  - mail_batch_id: |-
      {
          "title": "Mail: Batch ID",
          "type": "object",
          "properties": {
              "batch_id": {
                  "type": "string",
                  "pattern": "^[a-zA-Z0-9\\-\\_]"
              }
          },
          "required": [
              "batch_id"
          ]
      }
  - advanced_stats_mailbox_provider: |-
      {
          "title": "Stats: Advanced Stats for Mailbox Provider",
          "type": "object",
          "properties": {
              "date": {
                  "type": "string",
                  "description": "The date that the events occurred."
              },
              "stats": {
                  "type": "array",
                  "description": "The statistics of the email events.",
                  "items": {
                      "type": "object",
                      "properties": {
                          "type": {
                              "type": "string",
                              "description": "The type of segmentation."
                          },
                          "name": {
                              "type": "string",
                              "description": "The name of the specific segmentation."
                          },
                          "metrics": {
                              "type": "object",
                              "description": "The individual events and their stats.",
                              "required": [
                                  "clicks",
                                  "opens",
                                  "unique_clicks",
                                  "unique_opens",
                                  "blocks",
                                  "bounces",
                                  "deferred",
                                  "delivered",
                                  "drops",
                                  "spam_reports"
                              ],
                              "properties": {
                                  "clicks": {
                                      "type": "integer",
                                      "description": "The number of links that were clicked in your emails."
                                  },
                                  "opens": {
                                      "type": "integer",
                                      "description": "The total number of times your emails were opened by recipients."
                                  },
                                  "unique_clicks": {
                                      "type": "integer",
                                      "description": "The number of unique recipients who clicked links in your emails."
                                  },
                                  "unique_opens": {
                                      "type": "integer",
                                      "description": "The number of unique recipients who opened your emails."
                                  },
                                  "blocks": {
                                      "type": "integer",
                                      "description": "The number of emails that were not allowed to be delivered by ISPs."
                                  },
                                  "bounces": {
                                      "type": "integer",
                                      "description": "The number of emails that bounced instead of being delivered."
                                  },
                                  "deferred": {
                                      "type": "integer",
                                      "description": "The number of emails that temporarily could not be delivered."
                                  },
                                  "delivered": {
                                      "type": "integer",
                                      "description": "The number of emails SendGrid was able to confirm were actually delivered to a recipient."
                                  },
                                  "drops": {
                                      "type": "integer",
                                      "description": "The number of emails that were not delivered due to the recipient email address being on a suppression list."
                                  },
                                  "spam_reports": {
                                      "type": "integer",
                                      "description": "The number of recipients who marked your email as spam."
                                  }
                              }
                          }
                      },
                      "required": [
                          "type",
                          "name",
                          "metrics"
                      ]
                  }
              }
          },
          "required": [
              "date",
              "stats"
          ]
      }
  - contactdb_list: |-
      {
          "title": "ContactDB lists",
          "type": "object",
          "properties": {
              "id": {
                  "type": "integer",
                  "description": "The reference ID of your list."
              },
              "name": {
                  "type": "string",
                  "description": "The name of your list."
              },
              "recipient_count": {
                  "type": "integer",
                  "description": "The count of recipients currently in the list."
              }
          },
          "required": [
              "id",
              "name",
              "recipient_count"
          ]
      }
  - ip_warmup_response: |-
      {
          "title": "IP Warmup: IP",
          "type": "array",
          "items": {
              "type": "object",
              "properties": {
                  "ip": {
                      "type": "string",
                      "description": "The IP address."
                  },
                  "start_date": {
                      "type": "integer",
                      "description": "A Unix timestamp indicating when the IP address was entered into warmup mode."
                  }
              },
              "required": [
                  "ip",
                  "start_date"
              ]
          }
      }
  - ip_whitelabel: |-
      {
          "title": "Whitelabel - IPs",
          "type": "object",
          "properties": {
              "id": {
                  "type": "integer",
                  "description": "The id of the IP whitelabel."
              },
              "ip": {
                  "type": "string",
                  "description": "The IP address that this whitelabel was created for."
              },
              "rdns": {
                  "type": "string",
                  "description": "The reverse DNS record for the IP address. This points to the IP whitelabel subdomain."
              },
              "users": {
                  "type": "array",
                  "description": "The users who are able to send mail from the IP.",
                  "items": {
                      "type": "object",
                      "properties": {
                          "username": {
                              "type": "string",
                              "description": "The username of the user who can send mail from this IP."
                          },
                          "user_id": {
                              "type": "integer",
                              "description": "The ID of the user who can send mail from this IP."
                          }
                      },
                      "required": [
                          "username",
                          "user_id"
                      ]
                  }
              },
              "subdomain": {
                  "type": "string",
                  "description": "The subdomain created for this IP whitelabel. This is where the rDNS record points."
              },
              "domain": {
                  "type": "string",
                  "description": "The root, or sending, domain."
              },
              "valid": {
                  "type": "boolean",
                  "description": "Indicates if this is a valid whitelabel."
              },
              "legacy": {
                  "type": "boolean",
                  "description": "Indicates if this whitelabel was created using the legacy whitelabel tool."
              },
              "a_record": {
                  "type": "object",
                  "required": [
                      "valid",
                      "type",
                      "host",
                      "data"
                  ],
                  "properties": {
                      "valid": {
                          "type": "boolean",
                          "description": "Indicates if the a_record is valid."
                      },
                      "type": {
                          "type": "string",
                          "description": "The type of DNS record."
                      },
                      "host": {
                          "type": "string",
                          "description": "This is the web address that will be mapped to the IP address."
                      },
                      "data": {
                          "type": "string",
                          "description": "The IP address being whitelabeled."
                      }
                  }
              }
          },
          "required": [
              "id",
              "ip",
              "rdns",
              "users",
              "subdomain",
              "domain",
              "valid",
              "legacy",
              "a_record"
          ]
      }
  - event_webhook_settings: |-
      {
          "title": "Webhooks: Event Webhook Settings",
          "type": "object",
          "properties": {
              "enabled": {
                  "type": "boolean",
                  "description": "Indicates if the event webhook is enabled."
              },
              "url": {
                  "type": "string",
                  "description": "The URL that you want the event webhook to POST to."
              },
              "group_resubscribe": {
                  "type": "boolean",
                  "description": "Recipient resubscribes to specific group by updating preferences. You need to enable Subscription Tracking for getting this type of event."
              },
              "delivered": {
                  "type": "boolean",
                  "description": "Message has been successfully delivered to the receiving server."
              },
              "group_unsubscribe": {
                  "type": "boolean",
                  "description": "Recipient unsubscribe from specific group, by either direct link or updating preferences. You need to enable Subscription Tracking for getting this type of event."
              },
              "spam_report": {
                  "type": "boolean",
                  "description": "Recipient marked a message as spam."
              },
              "bounce": {
                  "type": "boolean",
                  "description": "Receiving server could not or would not accept message."
              },
              "deferred": {
                  "type": "boolean",
                  "description": "Recipient's email server temporarily rejected message."
              },
              "unsubscribe": {
                  "type": "boolean",
                  "description": "Recipient clicked on message's subscription management link. You need to enable Subscription Tracking for getting this type of event."
              },
              "processed": {
                  "type": "boolean",
                  "description": "Message has been received and is ready to be delivered."
              },
              "open": {
                  "type": "boolean",
                  "description": "Recipient has opened the HTML message. You need to enable Open Tracking for getting this type of event."
              },
              "click": {
                  "type": "boolean",
                  "description": "Recipient clicked on a link within the message. You need to enable Click Tracking for getting this type of event."
              },
              "dropped": {
                  "type": "boolean",
                  "description": "You may see the following drop reasons: Invalid SMTPAPI header, Spam Content (if spam checker app enabled), Unsubscribed Address, Bounced Address, Spam Reporting Address, Invalid, Recipient List over Package Quota"
              }
          },
          "required": [
              "enabled",
              "url",
              "group_resubscribe",
              "delivered",
              "group_unsubscribe",
              "spam_report",
              "bounce",
              "deferred",
              "unsubscribe",
              "processed",
              "open",
              "click",
              "dropped"
          ]
      }
  - user_profile: |-
      {
          "title": "User: Profile",
          "type": "object",
          "properties": {
              "address": {
                  "type": "string",
                  "description": "The street address for this user profile."
              },
              "address2": {
                  "type": "string",
                  "description": "An optional second line for the street address of this user profile."
              },
              "city": {
                  "type": "string",
                  "description": "The city for the user profile."
              },
              "company": {
                  "type": "string",
                  "description": "That company that this user profile is associated with."
              },
              "country": {
                  "type": "string",
                  "description": "Th country of this user profile."
              },
              "first_name": {
                  "type": "string",
                  "description": "The first name of the user."
              },
              "last_name": {
                  "type": "string",
                  "description": "The last name of the user."
              },
              "phone": {
                  "type": "string",
                  "description": "The phone number for the user."
              },
              "state": {
                  "type": "string",
                  "description": "The state for this user."
              },
              "website": {
                  "type": "string",
                  "description": "The website associated with this user."
              },
              "zip": {
                  "type": "string",
                  "description": "The zip code for this user."
              }
          }
      }
  - 'global:id': |-
      {
          "title": "Global: ID",
          "type": "integer"
      }
  - contactdb_custom_field_with_id_value: |-
      {
          "title": "ContactDB Custom field schema.",
          "allOf": [
              {
                  "$ref": "#/definitions/contactdb_custom_field_with_id"
              },
              {
                  "type": "object",
                  "properties": {
                      "value": {
                          "type": [
                              "string",
                              "null"
                          ],
                          "description": "The value of this recipient's custom field"
                      }
                  }
              }
          ]
      }
  - mail_settings_forward_spam: |-
      {
          "title": "Mail Settings: Forward Spam",
          "type": "object",
          "properties": {
              "email": {
                  "type": "string",
                  "description": "The email address where you would like the spam reports to be forwarded."
              },
              "enabled": {
                  "type": "boolean",
                  "description": "Indicates if the Forward Spam setting is enabled."
              }
          }
      }
  - campaign_response: |-
      {
          "title": "Campaigns Response",
          "allOf": [
              {
                  "$ref": "#/definitions/campaign_request"
              },
              {
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "string",
                          "description": "The status of your campaign."
                      },
                      "id": {
                          "type": "integer"
                      }
                  },
                  "required": [
                      "status"
                  ]
              }
          ]
      }
  - subuser_stats: |-
      {
          "title": "subuser_stats",
          "type": "object",
          "properties": {
              "date": {
                  "type": "string",
                  "description": "The date the statistics were gathered."
              },
              "stats": {
                  "type": "array",
                  "description": "The list of statistics.",
                  "items": {
                      "type": "object",
                      "properties": {
                          "first_name": {
                              "type": "string",
                              "description": "The first name of the subuser."
                          },
                          "last_name": {
                              "type": "string",
                              "description": "The last name of the subuser."
                          },
                          "metrics": {
                              "type": "object",
                              "properties": {
                                  "blocks": {
                                      "type": "integer",
                                      "description": "The number of emails that were not allowed to be delivered by ISPs."
                                  },
                                  "bounce_drops": {
                                      "type": "integer",
                                      "description": "The number of emails that were dropped because of a bounce."
                                  },
                                  "bounces": {
                                      "type": "integer",
                                      "description": "The number of emails that bounced instead of being delivered."
                                  },
                                  "clicks": {
                                      "type": "integer",
                                      "description": "The number of links that were clicked in your emails."
                                  },
                                  "deferred": {
                                      "type": "integer",
                                      "description": "The number of emails that temporarily could not be delivered."
                                  },
                                  "delivered": {
                                      "type": "integer",
                                      "description": "The number of emails SendGrid was able to confirm were actually delivered to a recipient."
                                  },
                                  "invalid_emails": {
                                      "type": "integer",
                                      "description": "The number of recipients who had malformed email addresses or whose mail provider reported the address as invalid."
                                  },
                                  "opens": {
                                      "type": "integer",
                                      "description": "The total number of times your emails were opened by recipients."
                                  },
                                  "processed": {
                                      "type": "integer",
                                      "description": "Requests from your website, application, or mail client via SMTP Relay or the API that SendGrid processed."
                                  },
                                  "requests": {
                                      "type": "integer",
                                      "description": "The number of emails that were requested to be delivered."
                                  },
                                  "spam_report_drops": {
                                      "type": "integer",
                                      "description": "The number of emails that were dropped due to a recipient previously marking your emails as spam."
                                  },
                                  "spam_reports": {
                                      "type": "integer",
                                      "description": "The number of recipients who marked your email as spam."
                                  },
                                  "unique_clicks": {
                                      "type": "integer",
                                      "description": "The number of unique recipients who clicked links in your emails."
                                  },
                                  "unique_opens": {
                                      "type": "integer",
                                      "description": "The number of unique recipients who opened your emails."
                                  },
                                  "unsubscribe_drops": {
                                      "type": "integer",
                                      "description": "The number of emails dropped due to a recipient unsubscribing from your emails."
                                  },
                                  "unsubscribes": {
                                      "type": "integer",
                                      "description": "The number of recipients who unsubscribed from your emails."
                                  }
                              }
                          },
                          "name": {
                              "type": "string",
                              "description": "The username of the subuser."
                          },
                          "type": {
                              "type": "string",
                              "description": "The type of account."
                          }
                      }
                  }
              }
          }
      }
  - api_key_name_id: |-
      {
          "title": "API Key Name and ID",
          "type": "object",
          "properties": {
              "api_key_id": {
                  "type": "string",
                  "description": "The ID of your API Key. "
              },
              "name": {
                  "type": "string",
                  "description": "The name of your API Key."
              }
          }
      }
  - api_key_name_id_scopes: |-
      {
          "title": "API Key Name, ID, and Scopes",
          "allOf": [
              {
                  "type": "object",
                  "properties": {
                      "scopes": {
                          "type": "array",
                          "description": "The permissions this API Key has access to.",
                          "items": {
                              "type": "string"
                          }
                      }
                  }
              },
              {
                  "$ref": "#/definitions/api_key_name_id"
              }
          ]
      }
  - senderID: |-
      {
          "title": "Sender ID",
          "type": "object",
          "properties": {
              "id": {
                  "type": "integer",
                  "description": "The unique identifier of the sender identity."
              },
              "nickname": {
                  "type": "string",
                  "description": "A nickname for the sender identity. Not used for sending."
              },
              "from": {
                  "type": "object",
                  "properties": {
                      "email": {
                          "type": "string",
                          "description": "This is where the email will appear to originate from for your recipient"
                      },
                      "name": {
                          "type": "string",
                          "description": "This is the name appended to the from email field. IE - Your name or company name."
                      }
                  },
                  "required": [
                      "email"
                  ]
              },
              "reply_to": {
                  "type": "object",
                  "properties": {
                      "email": {
                          "type": "string",
                          "description": "This is the email that your recipient will reply to."
                      },
                      "name": {
                          "type": "string",
                          "description": "This is the name appended to the reply to email field. IE - Your name or company name."
                      }
                  }
              },
              "address": {
                  "type": "string",
                  "description": "The physical address of the sender identity."
              },
              "address_2": {
                  "type": "string",
                  "description": "Additional sender identity address information."
              },
              "city": {
                  "type": "string",
                  "description": "The city of the sender identity."
              },
              "state": {
                  "type": "string",
                  "description": "The state of the sender identity."
              },
              "zip": {
                  "type": "string",
                  "description": "The zipcode of the sender identity."
              },
              "country": {
                  "type": "string",
                  "description": "The country of the sender identity."
              },
              "verified": {
                  "type": "boolean",
                  "description": "If the sender identity is verified or not. Only verified sender identities can be used to send email."
              },
              "updated_at": {
                  "type": "integer",
                  "description": "The time the sender identity was last updated."
              },
              "created_at": {
                  "type": "integer",
                  "description": "The time the sender identity was created."
              },
              "locked": {
                  "type": "boolean",
                  "description": "A sender identity is locked when it is associated to a campaign in the Draft, Scheduled, or In Progress status. You cannot update or delete a locked sender identity."
              }
          },
          "required": [
              "nickname",
              "address",
              "city",
              "country"
          ]
      }
  - advanced_stats_opens: |-
      {
          "title": "Stats: Advanced Stats with Opens",
          "type": "object",
          "properties": {
              "date": {
                  "type": "string",
                  "description": "The date that the events occurred."
              },
              "stats": {
                  "type": "array",
                  "description": "The statistics of the email events.",
                  "items": {
                      "type": "object",
                      "properties": {
                          "type": {
                              "type": "string",
                              "description": "The type of segmentation."
                          },
                          "name": {
                              "type": "string",
                              "description": "The name of the specific segmentation."
                          },
                          "metrics": {
                              "type": "object",
                              "description": "The individual events and their stats.",
                              "required": [
                                  "opens",
                                  "unique_opens"
                              ],
                              "properties": {
                                  "opens": {
                                      "type": "integer",
                                      "description": "The total number of times your emails were opened by recipients."
                                  },
                                  "unique_opens": {
                                      "type": "integer",
                                      "description": "The number of unique recipients who opened your emails."
                                  }
                              }
                          }
                      },
                      "required": [
                          "type",
                          "name",
                          "metrics"
                      ]
                  }
              }
          },
          "required": [
              "date",
              "stats"
          ]
      }
  - email_object: |-
      {
          "title": "Email Object",
          "type": "object",
          "properties": {
              "email": {
                  "type": "string",
                  "format": "email"
              },
              "name": {
                  "type": "string",
                  "description": "The name of the person to whom you are sending an email."
              }
          },
          "required": [
              "email"
          ]
      }
  - errors: |-
      {
          "title": "Error Schema",
          "type": "object",
          "properties": {
              "errors": {
                  "type": "array",
                  "items": {
                      "type": "object",
                      "properties": {
                          "field": {
                              "type": [
                                  "null",
                                  "string"
                              ],
                              "description": "The field that has the error."
                          },
                          "message": {
                              "type": "string",
                              "description": "The message the API caller will receive."
                          }
                      }
                  }
              }
          }
      }
  - subuser: |-
      {
          "title": "List all Subusers for a parent response",
          "type": "object",
          "properties": {
              "disabled": {
                  "type": "boolean",
                  "description": "Whether or not the user is enabled or disabled."
              },
              "id": {
                  "type": "number",
                  "description": "The ID of this subuser."
              },
              "username": {
                  "type": "string",
                  "description": "The name by which this subuser will be referred."
              },
              "email": {
                  "type": "string",
                  "description": "The email address to contact this subuser.",
                  "format": "email"
              }
          },
          "required": [
              "disabled",
              "id",
              "username",
              "email"
          ]
      }
  - credentials: |-
      {
          "title": "Credentials",
          "type": "object",
          "properties": {
              "permissions": {
                  "type": "object",
                  "properties": {
                      "api": {
                          "type": "string"
                      },
                      "mail": {
                          "type": "string"
                      },
                      "web": {
                          "type": "string"
                      }
                  }
              },
              "username": {
                  "type": "string"
              }
          }
      }
  - category_stats: |-
      {
          "title": "Stats: Category Stats",
          "type": "object",
          "properties": {
              "date": {
                  "type": "string",
                  "description": "The date the statistics were gathered."
              },
              "stats": {
                  "type": "array",
                  "items": {
                      "type": "object",
                      "properties": {
                          "metrics": {
                              "type": "object",
                              "properties": {
                                  "blocks": {
                                      "type": "integer",
                                      "description": "The number of emails that were not allowed to be delivered by ISPs."
                                  },
                                  "bounce_drops": {
                                      "type": "integer",
                                      "description": "The number of emails that were dropped because of a bounce."
                                  },
                                  "bounces": {
                                      "type": "integer",
                                      "description": "The number of emails that bounced instead of being delivered."
                                  },
                                  "clicks": {
                                      "type": "integer",
                                      "description": "The number of links that were clicked."
                                  },
                                  "deferred": {
                                      "type": "integer",
                                      "description": "The number of emails that temporarily could not be delivered."
                                  },
                                  "delivered": {
                                      "type": "integer",
                                      "description": "The number of emails SendGrid was able to confirm were actually delivered to a recipient."
                                  },
                                  "invalid_emails": {
                                      "type": "integer",
                                      "description": "The number of recipients who had malformed email addresses or whose mail provider reported the address as invalid."
                                  },
                                  "opens": {
                                      "type": "integer",
                                      "description": "The total number of times your emails were opened by recipients."
                                  },
                                  "processed": {
                                      "type": "integer",
                                      "description": "Requests from your website, application, or mail client via SMTP Relay or the API that SendGrid processed."
                                  },
                                  "requests": {
                                      "type": "integer",
                                      "description": "The number of emails that were requested to be delivered."
                                  },
                                  "spam_report_drops": {
                                      "type": "integer",
                                      "description": "The number of emails that were dropped due to a recipient previously marking your emails as spam."
                                  },
                                  "spam_reports": {
                                      "type": "integer",
                                      "description": "The number of recipients who marked your email as spam."
                                  },
                                  "unique_clicks": {
                                      "type": "integer",
                                      "description": "The number of unique recipients who clicked links in your emails."
                                  },
                                  "unique_opens": {
                                      "type": "integer",
                                      "description": "The number of unique recipients who opened your emails."
                                  },
                                  "unsubscribe_drops": {
                                      "type": "integer",
                                      "description": "The number of emails dropped due to a recipient unsubscribing from your emails."
                                  },
                                  "unsubscribes": {
                                      "type": "integer",
                                      "description": "The number of recipients who unsubscribed from your emails."
                                  }
                              },
                              "required": [
                                  "blocks",
                                  "bounce_drops",
                                  "bounces",
                                  "clicks",
                                  "deferred",
                                  "delivered",
                                  "invalid_emails",
                                  "opens",
                                  "processed",
                                  "requests",
                                  "spam_report_drops",
                                  "spam_reports",
                                  "unique_clicks",
                                  "unique_opens",
                                  "unsubscribe_drops",
                                  "unsubscribes"
                              ]
                          },
                          "name": {
                              "type": "string",
                              "description": "The name of the category."
                          },
                          "type": {
                              "type": "string",
                              "description": "How you are segmenting your statistics."
                          }
                      },
                      "required": [
                          "type"
                      ]
                  }
              }
          },
          "required": [
              "date"
          ]
      }
  - contactdb_segments_with_id: |-
      {
          "title": "ContactDB:: Segments with ID",
          "allOf": [
              {
                  "type": "object",
                  "properties": {
                      "id": {
                          "type": "number",
                          "description": "The ID of the segment."
                      }
                  },
                  "required": [
                      "id"
                  ]
              },
              {
                  "$ref": "#/definitions/contactdb_segments"
              }
          ]
      }
  - contactdb_custom_field_with_id: |-
      {
          "title": "ContactDB Custom field schema with ID.",
          "allOf": [
              {
                  "$ref": "#/definitions/contactdb_custom_field"
              },
              {
                  "type": "object",
                  "properties": {
                      "id": {
                          "type": "number",
                          "description": "The ID of the custom field."
                      }
                  }
              }
          ]
      }
  - mail_settings_bounce_purge: |-
      {
          "title": "Mail Settings: Bounce Purge",
          "type": "object",
          "properties": {
              "enabled": {
                  "type": "boolean",
                  "description": "Indicates if the bounce purge mail setting is enabled."
              },
              "soft_bounces": {
                  "type": [
                      "integer",
                      "null"
                  ],
                  "description": "The number of days, after which SendGrid will purge all contacts from your soft bounces suppression lists."
              },
              "hard_bounces": {
                  "type": [
                      "integer",
                      "null"
                  ],
                  "description": "The number of days, after which SendGrid will purge all contacts from your hard bounces suppression lists."
              }
          }
      }
  - contacts: |-
      {
          "title": "Contacts",
          "type": "object",
          "properties": {
              "address": {
                  "type": "string"
              },
              "address2": {
                  "type": "object"
              },
              "city": {
                  "type": "string"
              },
              "company": {
                  "type": "string"
              },
              "country": {
                  "type": "string"
              },
              "email": {
                  "type": "string"
              },
              "first_name": {
                  "type": "string"
              },
              "last_name": {
                  "type": "string"
              },
              "phone": {
                  "type": "string"
              },
              "state": {
                  "type": "string"
              },
              "zip": {
                  "type": "string"
              }
          }
      }
  - suppression_bounce: |-
      {
          "title": "Suppression: Bounce",
          "type": "object",
          "properties": {
              "created": {
                  "type": "number",
                  "description": "The unix timestamp for when the bounce record was created at SendGrid."
              },
              "email": {
                  "type": "string"
              },
              "reason": {
                  "type": "string",
                  "description": "The reason for the bounce. This typically will be a bounce code, an enhanced code, and a description."
              },
              "status": {
                  "type": "string",
                  "description": "Enhanced SMTP bounce response"
              }
          }
      }
  - parse-setting: |-
      {
          "title": "Parse Setting",
          "type": "object",
          "properties": {
              "url": {
                  "type": "string",
                  "description": "The public URL where you would like SendGrid to POST the data parsed from your email. Any emails sent with the given hostname provided (whose MX records have been updated to point to SendGrid) will be parsed and POSTed to this URL."
              },
              "hostname": {
                  "type": "string",
                  "description": "A specific and unique domain or subdomain that you have created to use exclusively to parse your incoming email. For example, parse.yourdomain.com."
              },
              "spam_check": {
                  "type": "boolean",
                  "description": "Indicates if you would like SendGrid to check the content parsed from your emails for spam before POSTing them to your domain."
              },
              "send_raw": {
                  "type": "boolean",
                  "description": "Indicates if you would like SendGrid to post the original MIME-type content of your parsed email. When this parameter is set to \"false\", SendGrid will send a JSON payload of the content of your email. "
              }
          }
      }
  - contactdb_recipient: |-
      {
          "title": "ContactDB: Recipient",
          "type": "object",
          "properties": {
              "recipients": {
                  "type": "array",
                  "items": {
                      "type": "object",
                      "properties": {
                          "id": {
                              "type": "string",
                              "description": "The ID of this recipient."
                          },
                          "created_at": {
                              "type": "number",
                              "description": "The time this record was created in your contactdb, in unixtime."
                          },
                          "custom_fields": {
                              "type": "array",
                              "description": "The custom fields assigned to this recipient and their values.",
                              "items": {
                                  "$ref": "#/definitions/contactdb_custom_field_with_id_value"
                              }
                          },
                          "email": {
                              "type": "string",
                              "description": "The email address of this recipient. This is a default custom field that SendGrid provides.",
                              "format": "email"
                          },
                          "first_name": {
                              "type": [
                                  "string",
                                  "null"
                              ],
                              "description": "The first name of this recipient. This is a default custom field that SendGrid provides."
                          },
                          "last_name": {
                              "type": [
                                  "string",
                                  "null"
                              ],
                              "description": "The last name of the recipient."
                          },
                          "last_clicked": {
                              "type": [
                                  "number",
                                  "null"
                              ],
                              "description": "The last time this recipient clicked a link from one of your campaigns, in unixtime."
                          },
                          "last_emailed": {
                              "type": [
                                  "number",
                                  "null"
                              ],
                              "description": "The last time this user was emailed by one of your campaigns, in unixtime."
                          },
                          "last_opened": {
                              "type": [
                                  "number",
                                  "null"
                              ],
                              "description": "The last time this recipient opened an email from you, in unixtime."
                          },
                          "updated_at": {
                              "type": "number",
                              "description": "The last update date for this recipient's record."
                          }
                      },
                      "required": [
                          "email"
                      ]
                  }
              }
          }
      }
  - 'global:empty_request': |-
      {
          "title": "Global: Request Empty Body",
          "type": "null"
      }
  - partner_settings_new_relic: |-
      {
          "title": "Partner Settings: New Relic",
          "type": "object",
          "properties": {
              "enable_subuser_statistics": {
                  "type": "boolean",
                  "description": "Indicates if your subuser statistics will be sent to your New Relic Dashboard."
              },
              "enabled": {
                  "type": "boolean",
                  "description": "Indicates if this setting is enabled. "
              },
              "license_key": {
                  "type": "string",
                  "description": "The license key provided with your New Relic account."
              }
          },
          "required": [
              "enabled",
              "license_key"
          ]
      }
  - mail_settings_bcc: |-
      {
          "title": "Mail Settings: BCC",
          "type": "object",
          "properties": {
              "email": {
                  "type": "string",
                  "description": "The email address that will be sent a blind carbon copy."
              },
              "enabled": {
                  "type": "boolean",
                  "description": "Indicates if the BCC setting is enabled."
              }
          }
      }
  - link_whitelabel: |-
      {
          "title": "Whitelabel - Links",
          "type": "object",
          "properties": {
              "id": {
                  "type": "integer",
                  "description": "The id of the link whitelabel."
              },
              "domain": {
                  "type": "string",
                  "description": "The root domain for this link whitelabel."
              },
              "subdomain": {
                  "type": "string",
                  "description": "The subdomain used to generate the DNS records for this link whitelabel. This subdomain must be different from the subdomain used for your domain whitelabel."
              },
              "username": {
                  "type": "string",
                  "description": "The username of the account that this link whitelabel is associated with."
              },
              "user_id": {
                  "type": "integer",
                  "description": "The id of the user that this whitelabel is associated with."
              },
              "default": {
                  "type": "boolean",
                  "description": "Indicates if this is the default link whitelabel.",
                  "enum": [
                      true,
                      false
                  ]
              },
              "valid": {
                  "type": "boolean",
                  "description": "Indicates if this link whitelabel is valid.",
                  "enum": [
                      true,
                      false
                  ]
              },
              "legacy": {
                  "type": "boolean",
                  "description": "Indicates if this link whitelabel was created using the legacy whitelabel tool.",
                  "enum": [
                      true,
                      false
                  ]
              },
              "dns": {
                  "type": "object",
                  "description": "The DNS records generated for this link whitelabel.",
                  "required": [
                      "domain_cname"
                  ],
                  "properties": {
                      "domain_cname": {
                          "type": "object",
                          "description": "The DNS record generated to point to your link whitelabel subdomain.",
                          "required": [
                              "valid",
                              "type",
                              "host",
                              "data"
                          ],
                          "properties": {
                              "valid": {
                                  "type": "boolean",
                                  "description": "Indicates if the DNS record is valid.",
                                  "enum": [
                                      true,
                                      false
                                  ]
                              },
                              "type": {
                                  "type": "string",
                                  "description": "The type of DNS record that was generate.",
                                  "enum": [
                                      "cname",
                                      "txt",
                                      "mx"
                                  ]
                              },
                              "host": {
                                  "type": "string",
                                  "description": "The domain that this whitelabel will use when whitelabeling the links in your email."
                              },
                              "data": {
                                  "type": "string",
                                  "description": "The domain that the DNS record points to."
                              }
                          }
                      },
                      "owner_cname": {
                          "type": "object",
                          "description": "The DNS record generated to verify who created the link whitelabel.",
                          "properties": {
                              "valid": {
                                  "type": "boolean",
                                  "description": "Indicates if the DNS record is valid.",
                                  "enum": [
                                      true,
                                      false
                                  ]
                              },
                              "type": {
                                  "type": "string",
                                  "description": "The type of DNS record generated.",
                                  "enum": [
                                      "cname",
                                      "txt",
                                      "mx"
                                  ]
                              },
                              "host": {
                                  "type": "string",
                                  "description": "Used to verify the link whitelabel. The subdomain of this domain is the user id of the user who created the link whitelabel."
                              },
                              "data": {
                                  "type": "string",
                                  "description": "The domain that the DNS record points to."
                              }
                          },
                          "required": [
                              "valid",
                              "host",
                              "data"
                          ]
                      }
                  }
              }
          },
          "required": [
              "id",
              "domain",
              "subdomain",
              "username",
              "user_id",
              "default",
              "valid",
              "legacy",
              "dns"
          ]
      }
  - 'global:ErrorResponse': |-
      {
          "title": "Global: Error Response",
          "type": "object",
          "properties": {
              "errors": {
                  "type": "array",
                  "items": {
                      "type": "object",
                      "properties": {
                          "field": {
                              "type": [
                                  "string",
                                  "null"
                              ],
                              "description": "The field that generated the error."
                          },
                          "message": {
                              "type": "string",
                              "description": "The error message."
                          }
                      },
                      "required": [
                          "message"
                      ]
                  }
              }
          }
      }
  - google_analytics_settings: |-
      {
          "title": "Settings: Google Analytics",
          "type": "object",
          "properties": {
              "enabled": {
                  "type": "boolean",
                  "description": "Indicates if Google Analytics is enabled."
              },
              "utm_campaign": {
                  "type": "string",
                  "description": "The name of the campaign."
              },
              "utm_content": {
                  "type": "string",
                  "description": "Used to differentiate ads"
              },
              "utm_medium": {
                  "type": "string",
                  "description": "Name of the marketing medium (e.g. \"Email\")."
              },
              "utm_source": {
                  "type": "string",
                  "description": "Name of the referrer source. "
              },
              "utm_term": {
                  "type": "string",
                  "description": "Any paid keywords."
              }
          }
      }
  - user_scheduled_send_status: |-
      {
          "title": "User: Scheduled Send status",
          "allOf": [
              {
                  "$ref": "#/definitions/mail_batch_id"
              },
              {
                  "type": "object",
                  "description": "The status of the scheduled send.",
                  "properties": {
                      "status": {
                          "type": "string",
                          "description": "The status of the scheduled send.",
                          "enum": [
                              "cancel",
                              "pause"
                          ]
                      }
                  },
                  "required": [
                      "status"
                  ]
              }
          ]
      }
  - advanced_stats_clicks: |-
      {
          "title": "Stats: Advanced Stats with Clicks",
          "type": "object",
          "properties": {
              "date": {
                  "type": "string",
                  "description": "The date that the events occurred."
              },
              "stats": {
                  "type": "array",
                  "description": "The statistics of the email events.",
                  "items": {
                      "type": "object",
                      "properties": {
                          "type": {
                              "type": "string",
                              "description": "The type of segmentation."
                          },
                          "name": {
                              "type": "string",
                              "description": "The name of the specific segmentation."
                          },
                          "metrics": {
                              "type": "object",
                              "description": "The individual events and their stats.",
                              "required": [
                                  "clicks",
                                  "unique_clicks"
                              ],
                              "properties": {
                                  "clicks": {
                                      "type": "integer",
                                      "description": "The number of links that were clicked in your emails."
                                  },
                                  "unique_clicks": {
                                      "type": "integer",
                                      "description": "The number of unique recipients who clicked links in your emails."
                                  }
                              }
                          }
                      },
                      "required": [
                          "type",
                          "name",
                          "metrics"
                      ]
                  }
              }
          },
          "required": [
              "date",
              "stats"
          ]
      }
  - campaign_request: |-
      {
          "title": "Campaigns Request",
          "type": "object",
          "properties": {
              "title": {
                  "type": "string",
                  "description": "The display title of your campaign. This will be viewable by you in the Marketing Campaigns UI."
              },
              "subject": {
                  "type": [
                      "string",
                      "null"
                  ],
                  "description": "The subject of your campaign that your recipients will see."
              },
              "sender_id": {
                  "type": [
                      "null",
                      "integer"
                  ],
                  "description": "The ID of the \"sender\" identity that you have created. Your recipients will see this as the \"from\" on your marketing emails."
              },
              "list_ids": {
                  "type": [
                      "array",
                      "null"
                  ],
                  "description": "The IDs of the lists you are sending this campaign to. You can have both segment IDs and list IDs",
                  "items": {
                      "type": "integer"
                  }
              },
              "segment_ids": {
                  "type": [
                      "array",
                      "null"
                  ],
                  "description": "The segment IDs that you are sending this list to. You can have both segment IDs and list IDs.",
                  "items": {
                      "type": "integer"
                  }
              },
              "categories": {
                  "type": [
                      "array",
                      "null"
                  ],
                  "description": "The categories you would like associated to this campaign.",
                  "items": {
                      "type": "string"
                  }
              },
              "suppression_group_id": {
                  "type": [
                      "null",
                      "integer"
                  ],
                  "description": "The suppression group that this marketing email belongs to, allowing recipients to opt-out of emails of this type."
              },
              "custom_unsubscribe_url": {
                  "type": [
                      "string",
                      "null"
                  ],
                  "description": "This is the url of the custom unsubscribe page that you provide for customers to unsubscribe from your suppression groups."
              },
              "ip_pool": {
                  "type": [
                      "string",
                      "null"
                  ],
                  "description": "The pool of IPs that you would like to send this email from."
              },
              "html_content": {
                  "type": [
                      "string",
                      "null"
                  ],
                  "description": "The HTML of your marketing email."
              },
              "plain_content": {
                  "type": [
                      "string",
                      "null"
                  ],
                  "description": "The plain text content of your emails."
              }
          },
          "required": [
              "title"
          ]
      }
  - mail_settings_patch: |-
      {
          "title": "Mail Settings: Patch",
          "type": "object",
          "properties": {
              "enabled": {
                  "type": "boolean",
                  "description": "Indicates if the mail setting is enabled."
              },
              "email": {
                  "type": "string",
                  "description": "The email address of the recipient."
              }
          }
      }
  - monitor: |-
      {
          "title": "Create monitor settings request",
          "type": "object",
          "properties": {
              "email": {
                  "type": "string",
                  "description": "The email address to send emails at the frequency specified for monitoring.",
                  "format": "email"
              },
              "frequency": {
                  "type": "number",
                  "description": "The frequency by which to send the emails. An email will be sent, every time your subuser sends this {frequency} emails. "
              }
          },
          "required": [
              "email",
              "frequency"
          ]
      }
  - suppression_group_unsubscribes: |-
      {
          "title": "Suppressions: Suppression Group with Unsubscribes",
          "allOf": [
              {
                  "$ref": "#/definitions/suppression_group"
              },
              {
                  "properties": {
                      "unsubscribes": {
                          "type": "integer",
                          "description": "The unsubscribes associated with this group."
                      }
                  },
                  "required": [
                      "unsubscribes"
                  ]
              }
          ],
          "type": "object"
      }
  - contactdb_custom_field: |-
      {
          "title": "ContactDB Custom field schema.",
          "type": "object",
          "properties": {
              "name": {
                  "type": "string",
                  "description": "The name of the field"
              },
              "type": {
                  "type": "string",
                  "description": "The type of the field.",
                  "enum": [
                      "date",
                      "text",
                      "number"
                  ]
              }
          }
      }
  - contactdb_segments_conditions: |-
      {
          "title": "ContactDB: Segments: Conditions",
          "type": "object",
          "properties": {
              "field": {
                  "type": "string"
              },
              "value": {
                  "type": "string"
              },
              "operator": {
                  "type": "string",
                  "enum": [
                      "eq",
                      "ne",
                      "lt",
                      "gt",
                      "contains"
                  ]
              },
              "and_or": {
                  "type": "string",
                  "enum": [
                      "and",
                      "or",
                      ""
                  ]
              }
          },
          "required": [
              "field",
              "value",
              "operator"
          ]
      }
  - contactdb_recipient_count: |-
      {
          "title": "ContactDB: Recipient Count",
          "type": "object",
          "properties": {
              "recipient_count": {
                  "type": "number",
                  "description": "The count of recipients."
              }
          },
          "required": [
              "recipient_count"
          ]
      }
  - transactional_template_version: |-
      {
          "title": "Transactional Templates: Version",
          "type": "object",
          "properties": {
              "template_id": {
                  "type": "string",
                  "description": "The name of the original transactional template."
              },
              "active": {
                  "type": "integer",
                  "description": "Set the new version as the active version associated with the template. Only one version of a template can be active. The first version created for a template will automatically be set to Active.",
                  "enum": [
                      0,
                      1
                  ]
              },
              "name": {
                  "type": "string",
                  "description": "Name of the new transactional template version."
              },
              "html_content": {
                  "type": "string",
                  "description": "The HTML content of the new version. Must include <%body%> tag. Maximum of 1048576 bytes allowed for plain content."
              },
              "plain_content": {
                  "type": "string",
                  "description": "Text/plain content of the new transactional template version. Must include <%body%> tag. Maximum of 1048576 bytes allowed for plain content."
              },
              "subject": {
                  "type": "string",
                  "description": "Subject of the new transactional template version. Must include <%subject%> tag."
              }
          },
          "required": [
              "template_id",
              "active",
              "name",
              "html_content",
              "plain_content",
              "subject"
          ]
      }
  - subuser_post: |-
      {
          "title": "Subuser::POST",
          "type": "object",
          "properties": {
              "username": {
                  "type": "string",
                  "description": "The username of the subuser."
              },
              "user_id": {
                  "type": "number",
                  "description": "The user ID for this subuser."
              },
              "email": {
                  "type": "string",
                  "description": "The email address for this subuser.",
                  "format": "email"
              },
              "signup_session_token": {
                  "type": "string"
              },
              "authorization_token": {
                  "type": "string"
              },
              "credit_allocation": {
                  "type": "object",
                  "properties": {
                      "type": {
                          "type": "string"
                      }
                  }
              }
          },
          "required": [
              "username",
              "user_id",
              "email"
          ]
      }
  - mail_settings_template: |-
      {
          "title": "Mail Settings: Template",
          "type": "object",
          "properties": {
              "enabled": {
                  "type": "boolean",
                  "description": "Indicates if the legacy email template setting is enabled."
              },
              "html_content": {
                  "type": "string",
                  "description": "The HTML content that you want to use for your legacy email template."
              }
          }
      }
  - transactional_template: |-
      {
          "title": "Transactional Templates: Template",
          "type": "object",
          "properties": {
              "id": {
                  "type": "string",
                  "description": "The ID of the transactional template."
              },
              "name": {
                  "type": "string",
                  "description": "The name for the transactional template.",
                  "maxLength": 100
              },
              "versions": {
                  "type": "array",
                  "description": "The different versions of this transactional template.",
                  "items": {
                      "$ref": "#/definitions/transactional_template_version"
                  }
              }
          },
          "required": [
              "id",
              "name"
          ]
      }
  - mail_settings_forward_bounce: |-
      {
          "title": "Mail Settings: Forward Bounce",
          "type": "object",
          "properties": {
              "email": {
                  "type": [
                      "string",
                      "null"
                  ],
                  "description": "The email address that you would like your bounce reports forwarded to."
              },
              "enabled": {
                  "type": "boolean",
                  "description": "Indicates if the bounce forwarding mail setting is enabled."
              }
          }
      }
  - subscription_tracking_settings: |-
      {
          "title": "Settings: Subscription Tracking",
          "type": "object",
          "properties": {
              "enabled": {
                  "type": "boolean",
                  "description": "Indicates if subscription tracking is enabled."
              },
              "html_content": {
                  "type": "string",
                  "description": "The information and HTML for your unsubscribe link. "
              },
              "landing": {
                  "type": "string",
                  "description": "The HTML that will be displayed on the page that your customers will see after clicking unsubscribe, hosted on SendGrid’s server."
              },
              "plain_content": {
                  "type": "string",
                  "description": "The information in plain text for your unsubscribe link. You should have the “<% %>” tag in your content, otherwise the user will have no URL for unsubscribing."
              },
              "replace": {
                  "type": "string",
                  "description": "Your custom defined replacement tag for your templates. Use this tag to place your unsubscribe content anywhere in your emailtemplate."
              },
              "url": {
                  "type": "string",
                  "description": "The URL where you would like your users sent to unsubscribe."
              }
          }
      }
  - mail_settings_address_whitelabel: |-
      {
          "title": "Mail Settings: Address Whitelabel",
          "type": "object",
          "properties": {
              "enabled": {
                  "type": "boolean",
                  "description": "Indicates if you have an email address whitelist enabled. "
              },
              "list": {
                  "type": "array",
                  "description": "All email address that are currently on the whitelist.",
                  "items": {
                      "type": "string"
                  }
              }
          }
      }
  - stats: |-
      {
          "title": "Stats",
          "type": "array",
          "items": {
              "type": "object",
              "properties": {
                  "date": {
                      "type": "string",
                      "description": "The date that the statistics were gathered."
                  },
                  "stats": {
                      "type": "array",
                      "description": "The list of statistics.",
                      "items": {
                          "type": "object",
                          "properties": {
                              "type": {
                                  "type": "string",
                                  "description": "The type of segmentation."
                              },
                              "name": {
                                  "type": "string",
                                  "description": "The name of the specific segmentation."
                              },
                              "metrics": {
                                  "type": "object",
                                  "description": "The individual events and their statistics.",
                                  "properties": {
                                      "blocks": {
                                          "type": "integer",
                                          "description": "The number of emails that were not allowed to be delivered by ISPs."
                                      },
                                      "bounce_drops": {
                                          "type": "integer",
                                          "description": "The number of emails that were dropped because of a bounce."
                                      },
                                      "bounces": {
                                          "type": "integer",
                                          "description": "The number of emails that bounced instead of being delivered."
                                      },
                                      "clicks": {
                                          "type": "integer",
                                          "description": "The number of links that were clicked in your emails."
                                      },
                                      "deferred": {
                                          "type": "integer",
                                          "description": "The number of emails that temporarily could not be delivered. "
                                      },
                                      "delivered": {
                                          "type": "integer",
                                          "description": "The number of emails SendGrid was able to confirm were actually delivered to a recipient."
                                      },
                                      "invalid_emails": {
                                          "type": "integer",
                                          "description": "The number of recipients who had malformed email addresses or whose mail provider reported the address as invalid."
                                      },
                                      "opens": {
                                          "type": "integer",
                                          "description": "The total number of times your emails were opened by recipients."
                                      },
                                      "processed": {
                                          "type": "integer",
                                          "description": "Requests from your website, application, or mail client via SMTP Relay or the API that SendGrid processed."
                                      },
                                      "requests": {
                                          "type": "integer",
                                          "description": "The number of emails that were requested to be delivered."
                                      },
                                      "spam_report_drops": {
                                          "type": "integer",
                                          "description": "The number of emails that were dropped due to a recipient previously marking your emails as spam."
                                      },
                                      "spam_reports": {
                                          "type": "integer",
                                          "description": "The number of recipients who marked your email as spam."
                                      },
                                      "unique_clicks": {
                                          "type": "integer",
                                          "description": "The number of unique recipients who clicked links in your emails."
                                      },
                                      "unique_opens": {
                                          "type": "integer",
                                          "description": "The number of unique recipients who opened your emails."
                                      },
                                      "unsubscribe_drops": {
                                          "type": "integer",
                                          "description": "The number of emails dropped due to a recipient unsubscribing from your emails."
                                      },
                                      "unsubscribes": {
                                          "type": "integer",
                                          "description": "The number of recipients who unsubscribed from your emails."
                                      }
                                  }
                              }
                          }
                      }
                  }
              }
          }
      }
traits:
  - authorizationHeader:
      headers:
        Authorization:
          type: string
          default: Bearer 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
          required: true
  - onBehalfOfSubuser:
      headers:
        on-behalf-of:
          type: string
          default: subuser_<user_name>